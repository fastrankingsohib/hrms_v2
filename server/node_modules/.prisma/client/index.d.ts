
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model user
 * 
 */
export type user = $Result.DefaultSelection<Prisma.$userPayload>
/**
 * Model modules
 * 
 */
export type modules = $Result.DefaultSelection<Prisma.$modulesPayload>
/**
 * Model modulesTouser
 * 
 */
export type modulesTouser = $Result.DefaultSelection<Prisma.$modulesTouserPayload>
/**
 * Model job_post
 * 
 */
export type job_post = $Result.DefaultSelection<Prisma.$job_postPayload>
/**
 * Model candidate_list
 * 
 */
export type candidate_list = $Result.DefaultSelection<Prisma.$candidate_listPayload>
/**
 * Model work_experience
 * 
 */
export type work_experience = $Result.DefaultSelection<Prisma.$work_experiencePayload>
/**
 * Model qualifications
 * 
 */
export type qualifications = $Result.DefaultSelection<Prisma.$qualificationsPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.user.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.user`: Exposes CRUD operations for the **user** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.userDelegate<ExtArgs>;

  /**
   * `prisma.modules`: Exposes CRUD operations for the **modules** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Modules
    * const modules = await prisma.modules.findMany()
    * ```
    */
  get modules(): Prisma.modulesDelegate<ExtArgs>;

  /**
   * `prisma.modulesTouser`: Exposes CRUD operations for the **modulesTouser** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ModulesTousers
    * const modulesTousers = await prisma.modulesTouser.findMany()
    * ```
    */
  get modulesTouser(): Prisma.modulesTouserDelegate<ExtArgs>;

  /**
   * `prisma.job_post`: Exposes CRUD operations for the **job_post** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Job_posts
    * const job_posts = await prisma.job_post.findMany()
    * ```
    */
  get job_post(): Prisma.job_postDelegate<ExtArgs>;

  /**
   * `prisma.candidate_list`: Exposes CRUD operations for the **candidate_list** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Candidate_lists
    * const candidate_lists = await prisma.candidate_list.findMany()
    * ```
    */
  get candidate_list(): Prisma.candidate_listDelegate<ExtArgs>;

  /**
   * `prisma.work_experience`: Exposes CRUD operations for the **work_experience** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Work_experiences
    * const work_experiences = await prisma.work_experience.findMany()
    * ```
    */
  get work_experience(): Prisma.work_experienceDelegate<ExtArgs>;

  /**
   * `prisma.qualifications`: Exposes CRUD operations for the **qualifications** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Qualifications
    * const qualifications = await prisma.qualifications.findMany()
    * ```
    */
  get qualifications(): Prisma.qualificationsDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.19.1
   * Query Engine version: 69d742ee20b815d88e17e54db4a2a7a3b30324e3
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    user: 'user',
    modules: 'modules',
    modulesTouser: 'modulesTouser',
    job_post: 'job_post',
    candidate_list: 'candidate_list',
    work_experience: 'work_experience',
    qualifications: 'qualifications'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "user" | "modules" | "modulesTouser" | "job_post" | "candidate_list" | "work_experience" | "qualifications"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      user: {
        payload: Prisma.$userPayload<ExtArgs>
        fields: Prisma.userFieldRefs
        operations: {
          findUnique: {
            args: Prisma.userFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.userFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          findFirst: {
            args: Prisma.userFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.userFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          findMany: {
            args: Prisma.userFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>[]
          }
          create: {
            args: Prisma.userCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          createMany: {
            args: Prisma.userCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.userCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>[]
          }
          delete: {
            args: Prisma.userDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          update: {
            args: Prisma.userUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          deleteMany: {
            args: Prisma.userDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.userUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.userUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.userGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.userCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      modules: {
        payload: Prisma.$modulesPayload<ExtArgs>
        fields: Prisma.modulesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.modulesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$modulesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.modulesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$modulesPayload>
          }
          findFirst: {
            args: Prisma.modulesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$modulesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.modulesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$modulesPayload>
          }
          findMany: {
            args: Prisma.modulesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$modulesPayload>[]
          }
          create: {
            args: Prisma.modulesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$modulesPayload>
          }
          createMany: {
            args: Prisma.modulesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.modulesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$modulesPayload>[]
          }
          delete: {
            args: Prisma.modulesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$modulesPayload>
          }
          update: {
            args: Prisma.modulesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$modulesPayload>
          }
          deleteMany: {
            args: Prisma.modulesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.modulesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.modulesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$modulesPayload>
          }
          aggregate: {
            args: Prisma.ModulesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateModules>
          }
          groupBy: {
            args: Prisma.modulesGroupByArgs<ExtArgs>
            result: $Utils.Optional<ModulesGroupByOutputType>[]
          }
          count: {
            args: Prisma.modulesCountArgs<ExtArgs>
            result: $Utils.Optional<ModulesCountAggregateOutputType> | number
          }
        }
      }
      modulesTouser: {
        payload: Prisma.$modulesTouserPayload<ExtArgs>
        fields: Prisma.modulesTouserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.modulesTouserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$modulesTouserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.modulesTouserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$modulesTouserPayload>
          }
          findFirst: {
            args: Prisma.modulesTouserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$modulesTouserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.modulesTouserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$modulesTouserPayload>
          }
          findMany: {
            args: Prisma.modulesTouserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$modulesTouserPayload>[]
          }
          create: {
            args: Prisma.modulesTouserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$modulesTouserPayload>
          }
          createMany: {
            args: Prisma.modulesTouserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.modulesTouserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$modulesTouserPayload>[]
          }
          delete: {
            args: Prisma.modulesTouserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$modulesTouserPayload>
          }
          update: {
            args: Prisma.modulesTouserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$modulesTouserPayload>
          }
          deleteMany: {
            args: Prisma.modulesTouserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.modulesTouserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.modulesTouserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$modulesTouserPayload>
          }
          aggregate: {
            args: Prisma.ModulesTouserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateModulesTouser>
          }
          groupBy: {
            args: Prisma.modulesTouserGroupByArgs<ExtArgs>
            result: $Utils.Optional<ModulesTouserGroupByOutputType>[]
          }
          count: {
            args: Prisma.modulesTouserCountArgs<ExtArgs>
            result: $Utils.Optional<ModulesTouserCountAggregateOutputType> | number
          }
        }
      }
      job_post: {
        payload: Prisma.$job_postPayload<ExtArgs>
        fields: Prisma.job_postFieldRefs
        operations: {
          findUnique: {
            args: Prisma.job_postFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$job_postPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.job_postFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$job_postPayload>
          }
          findFirst: {
            args: Prisma.job_postFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$job_postPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.job_postFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$job_postPayload>
          }
          findMany: {
            args: Prisma.job_postFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$job_postPayload>[]
          }
          create: {
            args: Prisma.job_postCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$job_postPayload>
          }
          createMany: {
            args: Prisma.job_postCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.job_postCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$job_postPayload>[]
          }
          delete: {
            args: Prisma.job_postDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$job_postPayload>
          }
          update: {
            args: Prisma.job_postUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$job_postPayload>
          }
          deleteMany: {
            args: Prisma.job_postDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.job_postUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.job_postUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$job_postPayload>
          }
          aggregate: {
            args: Prisma.Job_postAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateJob_post>
          }
          groupBy: {
            args: Prisma.job_postGroupByArgs<ExtArgs>
            result: $Utils.Optional<Job_postGroupByOutputType>[]
          }
          count: {
            args: Prisma.job_postCountArgs<ExtArgs>
            result: $Utils.Optional<Job_postCountAggregateOutputType> | number
          }
        }
      }
      candidate_list: {
        payload: Prisma.$candidate_listPayload<ExtArgs>
        fields: Prisma.candidate_listFieldRefs
        operations: {
          findUnique: {
            args: Prisma.candidate_listFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$candidate_listPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.candidate_listFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$candidate_listPayload>
          }
          findFirst: {
            args: Prisma.candidate_listFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$candidate_listPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.candidate_listFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$candidate_listPayload>
          }
          findMany: {
            args: Prisma.candidate_listFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$candidate_listPayload>[]
          }
          create: {
            args: Prisma.candidate_listCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$candidate_listPayload>
          }
          createMany: {
            args: Prisma.candidate_listCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.candidate_listCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$candidate_listPayload>[]
          }
          delete: {
            args: Prisma.candidate_listDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$candidate_listPayload>
          }
          update: {
            args: Prisma.candidate_listUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$candidate_listPayload>
          }
          deleteMany: {
            args: Prisma.candidate_listDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.candidate_listUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.candidate_listUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$candidate_listPayload>
          }
          aggregate: {
            args: Prisma.Candidate_listAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCandidate_list>
          }
          groupBy: {
            args: Prisma.candidate_listGroupByArgs<ExtArgs>
            result: $Utils.Optional<Candidate_listGroupByOutputType>[]
          }
          count: {
            args: Prisma.candidate_listCountArgs<ExtArgs>
            result: $Utils.Optional<Candidate_listCountAggregateOutputType> | number
          }
        }
      }
      work_experience: {
        payload: Prisma.$work_experiencePayload<ExtArgs>
        fields: Prisma.work_experienceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.work_experienceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$work_experiencePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.work_experienceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$work_experiencePayload>
          }
          findFirst: {
            args: Prisma.work_experienceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$work_experiencePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.work_experienceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$work_experiencePayload>
          }
          findMany: {
            args: Prisma.work_experienceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$work_experiencePayload>[]
          }
          create: {
            args: Prisma.work_experienceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$work_experiencePayload>
          }
          createMany: {
            args: Prisma.work_experienceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.work_experienceCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$work_experiencePayload>[]
          }
          delete: {
            args: Prisma.work_experienceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$work_experiencePayload>
          }
          update: {
            args: Prisma.work_experienceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$work_experiencePayload>
          }
          deleteMany: {
            args: Prisma.work_experienceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.work_experienceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.work_experienceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$work_experiencePayload>
          }
          aggregate: {
            args: Prisma.Work_experienceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWork_experience>
          }
          groupBy: {
            args: Prisma.work_experienceGroupByArgs<ExtArgs>
            result: $Utils.Optional<Work_experienceGroupByOutputType>[]
          }
          count: {
            args: Prisma.work_experienceCountArgs<ExtArgs>
            result: $Utils.Optional<Work_experienceCountAggregateOutputType> | number
          }
        }
      }
      qualifications: {
        payload: Prisma.$qualificationsPayload<ExtArgs>
        fields: Prisma.qualificationsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.qualificationsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$qualificationsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.qualificationsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$qualificationsPayload>
          }
          findFirst: {
            args: Prisma.qualificationsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$qualificationsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.qualificationsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$qualificationsPayload>
          }
          findMany: {
            args: Prisma.qualificationsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$qualificationsPayload>[]
          }
          create: {
            args: Prisma.qualificationsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$qualificationsPayload>
          }
          createMany: {
            args: Prisma.qualificationsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.qualificationsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$qualificationsPayload>[]
          }
          delete: {
            args: Prisma.qualificationsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$qualificationsPayload>
          }
          update: {
            args: Prisma.qualificationsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$qualificationsPayload>
          }
          deleteMany: {
            args: Prisma.qualificationsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.qualificationsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.qualificationsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$qualificationsPayload>
          }
          aggregate: {
            args: Prisma.QualificationsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateQualifications>
          }
          groupBy: {
            args: Prisma.qualificationsGroupByArgs<ExtArgs>
            result: $Utils.Optional<QualificationsGroupByOutputType>[]
          }
          count: {
            args: Prisma.qualificationsCountArgs<ExtArgs>
            result: $Utils.Optional<QualificationsCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    modulesTouser: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    modulesTouser?: boolean | UserCountOutputTypeCountModulesTouserArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountModulesTouserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: modulesTouserWhereInput
  }


  /**
   * Count Type ModulesCountOutputType
   */

  export type ModulesCountOutputType = {
    modulesTouser: number
  }

  export type ModulesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    modulesTouser?: boolean | ModulesCountOutputTypeCountModulesTouserArgs
  }

  // Custom InputTypes
  /**
   * ModulesCountOutputType without action
   */
  export type ModulesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModulesCountOutputType
     */
    select?: ModulesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ModulesCountOutputType without action
   */
  export type ModulesCountOutputTypeCountModulesTouserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: modulesTouserWhereInput
  }


  /**
   * Count Type Candidate_listCountOutputType
   */

  export type Candidate_listCountOutputType = {
    workExperiences: number
    qualifications: number
  }

  export type Candidate_listCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    workExperiences?: boolean | Candidate_listCountOutputTypeCountWorkExperiencesArgs
    qualifications?: boolean | Candidate_listCountOutputTypeCountQualificationsArgs
  }

  // Custom InputTypes
  /**
   * Candidate_listCountOutputType without action
   */
  export type Candidate_listCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidate_listCountOutputType
     */
    select?: Candidate_listCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Candidate_listCountOutputType without action
   */
  export type Candidate_listCountOutputTypeCountWorkExperiencesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: work_experienceWhereInput
  }

  /**
   * Candidate_listCountOutputType without action
   */
  export type Candidate_listCountOutputTypeCountQualificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: qualificationsWhereInput
  }


  /**
   * Models
   */

  /**
   * Model user
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    id: number | null
  }

  export type UserSumAggregateOutputType = {
    id: number | null
  }

  export type UserMinAggregateOutputType = {
    id: number | null
    title: string | null
    first_name: string | null
    middle_name: string | null
    last_name: string | null
    gender: string | null
    dob: string | null
    email: string | null
    mobile: string | null
    username: string | null
    password: string | null
    date_of_joining: string | null
    employee_id: string | null
    designation: string | null
    status: string | null
    department: string | null
    user_type: string | null
    role: string | null
    reporting_to: string | null
    created_by: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: number | null
    title: string | null
    first_name: string | null
    middle_name: string | null
    last_name: string | null
    gender: string | null
    dob: string | null
    email: string | null
    mobile: string | null
    username: string | null
    password: string | null
    date_of_joining: string | null
    employee_id: string | null
    designation: string | null
    status: string | null
    department: string | null
    user_type: string | null
    role: string | null
    reporting_to: string | null
    created_by: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    title: number
    first_name: number
    middle_name: number
    last_name: number
    gender: number
    dob: number
    email: number
    mobile: number
    username: number
    password: number
    date_of_joining: number
    employee_id: number
    designation: number
    status: number
    department: number
    user_type: number
    role: number
    reporting_to: number
    created_by: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    id?: true
  }

  export type UserSumAggregateInputType = {
    id?: true
  }

  export type UserMinAggregateInputType = {
    id?: true
    title?: true
    first_name?: true
    middle_name?: true
    last_name?: true
    gender?: true
    dob?: true
    email?: true
    mobile?: true
    username?: true
    password?: true
    date_of_joining?: true
    employee_id?: true
    designation?: true
    status?: true
    department?: true
    user_type?: true
    role?: true
    reporting_to?: true
    created_by?: true
    created_at?: true
    updated_at?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    title?: true
    first_name?: true
    middle_name?: true
    last_name?: true
    gender?: true
    dob?: true
    email?: true
    mobile?: true
    username?: true
    password?: true
    date_of_joining?: true
    employee_id?: true
    designation?: true
    status?: true
    department?: true
    user_type?: true
    role?: true
    reporting_to?: true
    created_by?: true
    created_at?: true
    updated_at?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    title?: true
    first_name?: true
    middle_name?: true
    last_name?: true
    gender?: true
    dob?: true
    email?: true
    mobile?: true
    username?: true
    password?: true
    date_of_joining?: true
    employee_id?: true
    designation?: true
    status?: true
    department?: true
    user_type?: true
    role?: true
    reporting_to?: true
    created_by?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user to aggregate.
     */
    where?: userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: userOrderByWithRelationInput | userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type userGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: userWhereInput
    orderBy?: userOrderByWithAggregationInput | userOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: userScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: number
    title: string | null
    first_name: string | null
    middle_name: string | null
    last_name: string | null
    gender: string | null
    dob: string | null
    email: string | null
    mobile: string | null
    username: string | null
    password: string | null
    date_of_joining: string | null
    employee_id: string | null
    designation: string | null
    status: string | null
    department: string | null
    user_type: string | null
    role: string | null
    reporting_to: string | null
    created_by: string | null
    created_at: Date | null
    updated_at: Date | null
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends userGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type userSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    first_name?: boolean
    middle_name?: boolean
    last_name?: boolean
    gender?: boolean
    dob?: boolean
    email?: boolean
    mobile?: boolean
    username?: boolean
    password?: boolean
    date_of_joining?: boolean
    employee_id?: boolean
    designation?: boolean
    status?: boolean
    department?: boolean
    user_type?: boolean
    role?: boolean
    reporting_to?: boolean
    created_by?: boolean
    created_at?: boolean
    updated_at?: boolean
    modulesTouser?: boolean | user$modulesTouserArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type userSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    first_name?: boolean
    middle_name?: boolean
    last_name?: boolean
    gender?: boolean
    dob?: boolean
    email?: boolean
    mobile?: boolean
    username?: boolean
    password?: boolean
    date_of_joining?: boolean
    employee_id?: boolean
    designation?: boolean
    status?: boolean
    department?: boolean
    user_type?: boolean
    role?: boolean
    reporting_to?: boolean
    created_by?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["user"]>

  export type userSelectScalar = {
    id?: boolean
    title?: boolean
    first_name?: boolean
    middle_name?: boolean
    last_name?: boolean
    gender?: boolean
    dob?: boolean
    email?: boolean
    mobile?: boolean
    username?: boolean
    password?: boolean
    date_of_joining?: boolean
    employee_id?: boolean
    designation?: boolean
    status?: boolean
    department?: boolean
    user_type?: boolean
    role?: boolean
    reporting_to?: boolean
    created_by?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type userInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    modulesTouser?: boolean | user$modulesTouserArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type userIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $userPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user"
    objects: {
      modulesTouser: Prisma.$modulesTouserPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      title: string | null
      first_name: string | null
      middle_name: string | null
      last_name: string | null
      gender: string | null
      dob: string | null
      email: string | null
      mobile: string | null
      username: string | null
      password: string | null
      date_of_joining: string | null
      employee_id: string | null
      designation: string | null
      status: string | null
      department: string | null
      user_type: string | null
      role: string | null
      reporting_to: string | null
      created_by: string | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type userGetPayload<S extends boolean | null | undefined | userDefaultArgs> = $Result.GetResult<Prisma.$userPayload, S>

  type userCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<userFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface userDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user'], meta: { name: 'user' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {userFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends userFindUniqueArgs>(args: SelectSubset<T, userFindUniqueArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {userFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends userFindUniqueOrThrowArgs>(args: SelectSubset<T, userFindUniqueOrThrowArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends userFindFirstArgs>(args?: SelectSubset<T, userFindFirstArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends userFindFirstOrThrowArgs>(args?: SelectSubset<T, userFindFirstOrThrowArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends userFindManyArgs>(args?: SelectSubset<T, userFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a User.
     * @param {userCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends userCreateArgs>(args: SelectSubset<T, userCreateArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Users.
     * @param {userCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends userCreateManyArgs>(args?: SelectSubset<T, userCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {userCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends userCreateManyAndReturnArgs>(args?: SelectSubset<T, userCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a User.
     * @param {userDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends userDeleteArgs>(args: SelectSubset<T, userDeleteArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one User.
     * @param {userUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends userUpdateArgs>(args: SelectSubset<T, userUpdateArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Users.
     * @param {userDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends userDeleteManyArgs>(args?: SelectSubset<T, userDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends userUpdateManyArgs>(args: SelectSubset<T, userUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {userUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends userUpsertArgs>(args: SelectSubset<T, userUpsertArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends userCountArgs>(
      args?: Subset<T, userCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends userGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: userGroupByArgs['orderBy'] }
        : { orderBy?: userGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, userGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user model
   */
  readonly fields: userFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__userClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    modulesTouser<T extends user$modulesTouserArgs<ExtArgs> = {}>(args?: Subset<T, user$modulesTouserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$modulesTouserPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user model
   */ 
  interface userFieldRefs {
    readonly id: FieldRef<"user", 'Int'>
    readonly title: FieldRef<"user", 'String'>
    readonly first_name: FieldRef<"user", 'String'>
    readonly middle_name: FieldRef<"user", 'String'>
    readonly last_name: FieldRef<"user", 'String'>
    readonly gender: FieldRef<"user", 'String'>
    readonly dob: FieldRef<"user", 'String'>
    readonly email: FieldRef<"user", 'String'>
    readonly mobile: FieldRef<"user", 'String'>
    readonly username: FieldRef<"user", 'String'>
    readonly password: FieldRef<"user", 'String'>
    readonly date_of_joining: FieldRef<"user", 'String'>
    readonly employee_id: FieldRef<"user", 'String'>
    readonly designation: FieldRef<"user", 'String'>
    readonly status: FieldRef<"user", 'String'>
    readonly department: FieldRef<"user", 'String'>
    readonly user_type: FieldRef<"user", 'String'>
    readonly role: FieldRef<"user", 'String'>
    readonly reporting_to: FieldRef<"user", 'String'>
    readonly created_by: FieldRef<"user", 'String'>
    readonly created_at: FieldRef<"user", 'DateTime'>
    readonly updated_at: FieldRef<"user", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * user findUnique
   */
  export type userFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter, which user to fetch.
     */
    where: userWhereUniqueInput
  }

  /**
   * user findUniqueOrThrow
   */
  export type userFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter, which user to fetch.
     */
    where: userWhereUniqueInput
  }

  /**
   * user findFirst
   */
  export type userFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter, which user to fetch.
     */
    where?: userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: userOrderByWithRelationInput | userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * user findFirstOrThrow
   */
  export type userFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter, which user to fetch.
     */
    where?: userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: userOrderByWithRelationInput | userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * user findMany
   */
  export type userFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: userOrderByWithRelationInput | userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing users.
     */
    cursor?: userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * user create
   */
  export type userCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * The data needed to create a user.
     */
    data?: XOR<userCreateInput, userUncheckedCreateInput>
  }

  /**
   * user createMany
   */
  export type userCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many users.
     */
    data: userCreateManyInput | userCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user createManyAndReturn
   */
  export type userCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many users.
     */
    data: userCreateManyInput | userCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user update
   */
  export type userUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * The data needed to update a user.
     */
    data: XOR<userUpdateInput, userUncheckedUpdateInput>
    /**
     * Choose, which user to update.
     */
    where: userWhereUniqueInput
  }

  /**
   * user updateMany
   */
  export type userUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update users.
     */
    data: XOR<userUpdateManyMutationInput, userUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: userWhereInput
  }

  /**
   * user upsert
   */
  export type userUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * The filter to search for the user to update in case it exists.
     */
    where: userWhereUniqueInput
    /**
     * In case the user found by the `where` argument doesn't exist, create a new user with this data.
     */
    create: XOR<userCreateInput, userUncheckedCreateInput>
    /**
     * In case the user was found with the provided `where` argument, update it with this data.
     */
    update: XOR<userUpdateInput, userUncheckedUpdateInput>
  }

  /**
   * user delete
   */
  export type userDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter which user to delete.
     */
    where: userWhereUniqueInput
  }

  /**
   * user deleteMany
   */
  export type userDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to delete
     */
    where?: userWhereInput
  }

  /**
   * user.modulesTouser
   */
  export type user$modulesTouserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the modulesTouser
     */
    select?: modulesTouserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: modulesTouserInclude<ExtArgs> | null
    where?: modulesTouserWhereInput
    orderBy?: modulesTouserOrderByWithRelationInput | modulesTouserOrderByWithRelationInput[]
    cursor?: modulesTouserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ModulesTouserScalarFieldEnum | ModulesTouserScalarFieldEnum[]
  }

  /**
   * user without action
   */
  export type userDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
  }


  /**
   * Model modules
   */

  export type AggregateModules = {
    _count: ModulesCountAggregateOutputType | null
    _avg: ModulesAvgAggregateOutputType | null
    _sum: ModulesSumAggregateOutputType | null
    _min: ModulesMinAggregateOutputType | null
    _max: ModulesMaxAggregateOutputType | null
  }

  export type ModulesAvgAggregateOutputType = {
    id: number | null
  }

  export type ModulesSumAggregateOutputType = {
    id: number | null
  }

  export type ModulesMinAggregateOutputType = {
    id: number | null
    module_name: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type ModulesMaxAggregateOutputType = {
    id: number | null
    module_name: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type ModulesCountAggregateOutputType = {
    id: number
    module_name: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type ModulesAvgAggregateInputType = {
    id?: true
  }

  export type ModulesSumAggregateInputType = {
    id?: true
  }

  export type ModulesMinAggregateInputType = {
    id?: true
    module_name?: true
    created_at?: true
    updated_at?: true
  }

  export type ModulesMaxAggregateInputType = {
    id?: true
    module_name?: true
    created_at?: true
    updated_at?: true
  }

  export type ModulesCountAggregateInputType = {
    id?: true
    module_name?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type ModulesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which modules to aggregate.
     */
    where?: modulesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of modules to fetch.
     */
    orderBy?: modulesOrderByWithRelationInput | modulesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: modulesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` modules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` modules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned modules
    **/
    _count?: true | ModulesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ModulesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ModulesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ModulesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ModulesMaxAggregateInputType
  }

  export type GetModulesAggregateType<T extends ModulesAggregateArgs> = {
        [P in keyof T & keyof AggregateModules]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateModules[P]>
      : GetScalarType<T[P], AggregateModules[P]>
  }




  export type modulesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: modulesWhereInput
    orderBy?: modulesOrderByWithAggregationInput | modulesOrderByWithAggregationInput[]
    by: ModulesScalarFieldEnum[] | ModulesScalarFieldEnum
    having?: modulesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ModulesCountAggregateInputType | true
    _avg?: ModulesAvgAggregateInputType
    _sum?: ModulesSumAggregateInputType
    _min?: ModulesMinAggregateInputType
    _max?: ModulesMaxAggregateInputType
  }

  export type ModulesGroupByOutputType = {
    id: number
    module_name: string
    created_at: Date | null
    updated_at: Date | null
    _count: ModulesCountAggregateOutputType | null
    _avg: ModulesAvgAggregateOutputType | null
    _sum: ModulesSumAggregateOutputType | null
    _min: ModulesMinAggregateOutputType | null
    _max: ModulesMaxAggregateOutputType | null
  }

  type GetModulesGroupByPayload<T extends modulesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ModulesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ModulesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ModulesGroupByOutputType[P]>
            : GetScalarType<T[P], ModulesGroupByOutputType[P]>
        }
      >
    >


  export type modulesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    module_name?: boolean
    created_at?: boolean
    updated_at?: boolean
    modulesTouser?: boolean | modules$modulesTouserArgs<ExtArgs>
    _count?: boolean | ModulesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["modules"]>

  export type modulesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    module_name?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["modules"]>

  export type modulesSelectScalar = {
    id?: boolean
    module_name?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type modulesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    modulesTouser?: boolean | modules$modulesTouserArgs<ExtArgs>
    _count?: boolean | ModulesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type modulesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $modulesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "modules"
    objects: {
      modulesTouser: Prisma.$modulesTouserPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      module_name: string
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["modules"]>
    composites: {}
  }

  type modulesGetPayload<S extends boolean | null | undefined | modulesDefaultArgs> = $Result.GetResult<Prisma.$modulesPayload, S>

  type modulesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<modulesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ModulesCountAggregateInputType | true
    }

  export interface modulesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['modules'], meta: { name: 'modules' } }
    /**
     * Find zero or one Modules that matches the filter.
     * @param {modulesFindUniqueArgs} args - Arguments to find a Modules
     * @example
     * // Get one Modules
     * const modules = await prisma.modules.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends modulesFindUniqueArgs>(args: SelectSubset<T, modulesFindUniqueArgs<ExtArgs>>): Prisma__modulesClient<$Result.GetResult<Prisma.$modulesPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Modules that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {modulesFindUniqueOrThrowArgs} args - Arguments to find a Modules
     * @example
     * // Get one Modules
     * const modules = await prisma.modules.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends modulesFindUniqueOrThrowArgs>(args: SelectSubset<T, modulesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__modulesClient<$Result.GetResult<Prisma.$modulesPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Modules that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {modulesFindFirstArgs} args - Arguments to find a Modules
     * @example
     * // Get one Modules
     * const modules = await prisma.modules.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends modulesFindFirstArgs>(args?: SelectSubset<T, modulesFindFirstArgs<ExtArgs>>): Prisma__modulesClient<$Result.GetResult<Prisma.$modulesPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Modules that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {modulesFindFirstOrThrowArgs} args - Arguments to find a Modules
     * @example
     * // Get one Modules
     * const modules = await prisma.modules.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends modulesFindFirstOrThrowArgs>(args?: SelectSubset<T, modulesFindFirstOrThrowArgs<ExtArgs>>): Prisma__modulesClient<$Result.GetResult<Prisma.$modulesPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Modules that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {modulesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Modules
     * const modules = await prisma.modules.findMany()
     * 
     * // Get first 10 Modules
     * const modules = await prisma.modules.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const modulesWithIdOnly = await prisma.modules.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends modulesFindManyArgs>(args?: SelectSubset<T, modulesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$modulesPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Modules.
     * @param {modulesCreateArgs} args - Arguments to create a Modules.
     * @example
     * // Create one Modules
     * const Modules = await prisma.modules.create({
     *   data: {
     *     // ... data to create a Modules
     *   }
     * })
     * 
     */
    create<T extends modulesCreateArgs>(args: SelectSubset<T, modulesCreateArgs<ExtArgs>>): Prisma__modulesClient<$Result.GetResult<Prisma.$modulesPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Modules.
     * @param {modulesCreateManyArgs} args - Arguments to create many Modules.
     * @example
     * // Create many Modules
     * const modules = await prisma.modules.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends modulesCreateManyArgs>(args?: SelectSubset<T, modulesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Modules and returns the data saved in the database.
     * @param {modulesCreateManyAndReturnArgs} args - Arguments to create many Modules.
     * @example
     * // Create many Modules
     * const modules = await prisma.modules.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Modules and only return the `id`
     * const modulesWithIdOnly = await prisma.modules.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends modulesCreateManyAndReturnArgs>(args?: SelectSubset<T, modulesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$modulesPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Modules.
     * @param {modulesDeleteArgs} args - Arguments to delete one Modules.
     * @example
     * // Delete one Modules
     * const Modules = await prisma.modules.delete({
     *   where: {
     *     // ... filter to delete one Modules
     *   }
     * })
     * 
     */
    delete<T extends modulesDeleteArgs>(args: SelectSubset<T, modulesDeleteArgs<ExtArgs>>): Prisma__modulesClient<$Result.GetResult<Prisma.$modulesPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Modules.
     * @param {modulesUpdateArgs} args - Arguments to update one Modules.
     * @example
     * // Update one Modules
     * const modules = await prisma.modules.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends modulesUpdateArgs>(args: SelectSubset<T, modulesUpdateArgs<ExtArgs>>): Prisma__modulesClient<$Result.GetResult<Prisma.$modulesPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Modules.
     * @param {modulesDeleteManyArgs} args - Arguments to filter Modules to delete.
     * @example
     * // Delete a few Modules
     * const { count } = await prisma.modules.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends modulesDeleteManyArgs>(args?: SelectSubset<T, modulesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Modules.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {modulesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Modules
     * const modules = await prisma.modules.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends modulesUpdateManyArgs>(args: SelectSubset<T, modulesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Modules.
     * @param {modulesUpsertArgs} args - Arguments to update or create a Modules.
     * @example
     * // Update or create a Modules
     * const modules = await prisma.modules.upsert({
     *   create: {
     *     // ... data to create a Modules
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Modules we want to update
     *   }
     * })
     */
    upsert<T extends modulesUpsertArgs>(args: SelectSubset<T, modulesUpsertArgs<ExtArgs>>): Prisma__modulesClient<$Result.GetResult<Prisma.$modulesPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Modules.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {modulesCountArgs} args - Arguments to filter Modules to count.
     * @example
     * // Count the number of Modules
     * const count = await prisma.modules.count({
     *   where: {
     *     // ... the filter for the Modules we want to count
     *   }
     * })
    **/
    count<T extends modulesCountArgs>(
      args?: Subset<T, modulesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ModulesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Modules.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModulesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ModulesAggregateArgs>(args: Subset<T, ModulesAggregateArgs>): Prisma.PrismaPromise<GetModulesAggregateType<T>>

    /**
     * Group by Modules.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {modulesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends modulesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: modulesGroupByArgs['orderBy'] }
        : { orderBy?: modulesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, modulesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetModulesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the modules model
   */
  readonly fields: modulesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for modules.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__modulesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    modulesTouser<T extends modules$modulesTouserArgs<ExtArgs> = {}>(args?: Subset<T, modules$modulesTouserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$modulesTouserPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the modules model
   */ 
  interface modulesFieldRefs {
    readonly id: FieldRef<"modules", 'Int'>
    readonly module_name: FieldRef<"modules", 'String'>
    readonly created_at: FieldRef<"modules", 'DateTime'>
    readonly updated_at: FieldRef<"modules", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * modules findUnique
   */
  export type modulesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the modules
     */
    select?: modulesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: modulesInclude<ExtArgs> | null
    /**
     * Filter, which modules to fetch.
     */
    where: modulesWhereUniqueInput
  }

  /**
   * modules findUniqueOrThrow
   */
  export type modulesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the modules
     */
    select?: modulesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: modulesInclude<ExtArgs> | null
    /**
     * Filter, which modules to fetch.
     */
    where: modulesWhereUniqueInput
  }

  /**
   * modules findFirst
   */
  export type modulesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the modules
     */
    select?: modulesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: modulesInclude<ExtArgs> | null
    /**
     * Filter, which modules to fetch.
     */
    where?: modulesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of modules to fetch.
     */
    orderBy?: modulesOrderByWithRelationInput | modulesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for modules.
     */
    cursor?: modulesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` modules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` modules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of modules.
     */
    distinct?: ModulesScalarFieldEnum | ModulesScalarFieldEnum[]
  }

  /**
   * modules findFirstOrThrow
   */
  export type modulesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the modules
     */
    select?: modulesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: modulesInclude<ExtArgs> | null
    /**
     * Filter, which modules to fetch.
     */
    where?: modulesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of modules to fetch.
     */
    orderBy?: modulesOrderByWithRelationInput | modulesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for modules.
     */
    cursor?: modulesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` modules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` modules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of modules.
     */
    distinct?: ModulesScalarFieldEnum | ModulesScalarFieldEnum[]
  }

  /**
   * modules findMany
   */
  export type modulesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the modules
     */
    select?: modulesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: modulesInclude<ExtArgs> | null
    /**
     * Filter, which modules to fetch.
     */
    where?: modulesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of modules to fetch.
     */
    orderBy?: modulesOrderByWithRelationInput | modulesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing modules.
     */
    cursor?: modulesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` modules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` modules.
     */
    skip?: number
    distinct?: ModulesScalarFieldEnum | ModulesScalarFieldEnum[]
  }

  /**
   * modules create
   */
  export type modulesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the modules
     */
    select?: modulesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: modulesInclude<ExtArgs> | null
    /**
     * The data needed to create a modules.
     */
    data: XOR<modulesCreateInput, modulesUncheckedCreateInput>
  }

  /**
   * modules createMany
   */
  export type modulesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many modules.
     */
    data: modulesCreateManyInput | modulesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * modules createManyAndReturn
   */
  export type modulesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the modules
     */
    select?: modulesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many modules.
     */
    data: modulesCreateManyInput | modulesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * modules update
   */
  export type modulesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the modules
     */
    select?: modulesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: modulesInclude<ExtArgs> | null
    /**
     * The data needed to update a modules.
     */
    data: XOR<modulesUpdateInput, modulesUncheckedUpdateInput>
    /**
     * Choose, which modules to update.
     */
    where: modulesWhereUniqueInput
  }

  /**
   * modules updateMany
   */
  export type modulesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update modules.
     */
    data: XOR<modulesUpdateManyMutationInput, modulesUncheckedUpdateManyInput>
    /**
     * Filter which modules to update
     */
    where?: modulesWhereInput
  }

  /**
   * modules upsert
   */
  export type modulesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the modules
     */
    select?: modulesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: modulesInclude<ExtArgs> | null
    /**
     * The filter to search for the modules to update in case it exists.
     */
    where: modulesWhereUniqueInput
    /**
     * In case the modules found by the `where` argument doesn't exist, create a new modules with this data.
     */
    create: XOR<modulesCreateInput, modulesUncheckedCreateInput>
    /**
     * In case the modules was found with the provided `where` argument, update it with this data.
     */
    update: XOR<modulesUpdateInput, modulesUncheckedUpdateInput>
  }

  /**
   * modules delete
   */
  export type modulesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the modules
     */
    select?: modulesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: modulesInclude<ExtArgs> | null
    /**
     * Filter which modules to delete.
     */
    where: modulesWhereUniqueInput
  }

  /**
   * modules deleteMany
   */
  export type modulesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which modules to delete
     */
    where?: modulesWhereInput
  }

  /**
   * modules.modulesTouser
   */
  export type modules$modulesTouserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the modulesTouser
     */
    select?: modulesTouserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: modulesTouserInclude<ExtArgs> | null
    where?: modulesTouserWhereInput
    orderBy?: modulesTouserOrderByWithRelationInput | modulesTouserOrderByWithRelationInput[]
    cursor?: modulesTouserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ModulesTouserScalarFieldEnum | ModulesTouserScalarFieldEnum[]
  }

  /**
   * modules without action
   */
  export type modulesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the modules
     */
    select?: modulesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: modulesInclude<ExtArgs> | null
  }


  /**
   * Model modulesTouser
   */

  export type AggregateModulesTouser = {
    _count: ModulesTouserCountAggregateOutputType | null
    _avg: ModulesTouserAvgAggregateOutputType | null
    _sum: ModulesTouserSumAggregateOutputType | null
    _min: ModulesTouserMinAggregateOutputType | null
    _max: ModulesTouserMaxAggregateOutputType | null
  }

  export type ModulesTouserAvgAggregateOutputType = {
    module_id: number | null
    user_id: number | null
  }

  export type ModulesTouserSumAggregateOutputType = {
    module_id: number | null
    user_id: number | null
  }

  export type ModulesTouserMinAggregateOutputType = {
    module_id: number | null
    user_id: number | null
    c: boolean | null
    d: boolean | null
    r: boolean | null
    u: boolean | null
  }

  export type ModulesTouserMaxAggregateOutputType = {
    module_id: number | null
    user_id: number | null
    c: boolean | null
    d: boolean | null
    r: boolean | null
    u: boolean | null
  }

  export type ModulesTouserCountAggregateOutputType = {
    module_id: number
    user_id: number
    c: number
    d: number
    r: number
    u: number
    _all: number
  }


  export type ModulesTouserAvgAggregateInputType = {
    module_id?: true
    user_id?: true
  }

  export type ModulesTouserSumAggregateInputType = {
    module_id?: true
    user_id?: true
  }

  export type ModulesTouserMinAggregateInputType = {
    module_id?: true
    user_id?: true
    c?: true
    d?: true
    r?: true
    u?: true
  }

  export type ModulesTouserMaxAggregateInputType = {
    module_id?: true
    user_id?: true
    c?: true
    d?: true
    r?: true
    u?: true
  }

  export type ModulesTouserCountAggregateInputType = {
    module_id?: true
    user_id?: true
    c?: true
    d?: true
    r?: true
    u?: true
    _all?: true
  }

  export type ModulesTouserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which modulesTouser to aggregate.
     */
    where?: modulesTouserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of modulesTousers to fetch.
     */
    orderBy?: modulesTouserOrderByWithRelationInput | modulesTouserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: modulesTouserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` modulesTousers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` modulesTousers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned modulesTousers
    **/
    _count?: true | ModulesTouserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ModulesTouserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ModulesTouserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ModulesTouserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ModulesTouserMaxAggregateInputType
  }

  export type GetModulesTouserAggregateType<T extends ModulesTouserAggregateArgs> = {
        [P in keyof T & keyof AggregateModulesTouser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateModulesTouser[P]>
      : GetScalarType<T[P], AggregateModulesTouser[P]>
  }




  export type modulesTouserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: modulesTouserWhereInput
    orderBy?: modulesTouserOrderByWithAggregationInput | modulesTouserOrderByWithAggregationInput[]
    by: ModulesTouserScalarFieldEnum[] | ModulesTouserScalarFieldEnum
    having?: modulesTouserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ModulesTouserCountAggregateInputType | true
    _avg?: ModulesTouserAvgAggregateInputType
    _sum?: ModulesTouserSumAggregateInputType
    _min?: ModulesTouserMinAggregateInputType
    _max?: ModulesTouserMaxAggregateInputType
  }

  export type ModulesTouserGroupByOutputType = {
    module_id: number
    user_id: number
    c: boolean
    d: boolean
    r: boolean
    u: boolean
    _count: ModulesTouserCountAggregateOutputType | null
    _avg: ModulesTouserAvgAggregateOutputType | null
    _sum: ModulesTouserSumAggregateOutputType | null
    _min: ModulesTouserMinAggregateOutputType | null
    _max: ModulesTouserMaxAggregateOutputType | null
  }

  type GetModulesTouserGroupByPayload<T extends modulesTouserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ModulesTouserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ModulesTouserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ModulesTouserGroupByOutputType[P]>
            : GetScalarType<T[P], ModulesTouserGroupByOutputType[P]>
        }
      >
    >


  export type modulesTouserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    module_id?: boolean
    user_id?: boolean
    c?: boolean
    d?: boolean
    r?: boolean
    u?: boolean
    modules?: boolean | modulesDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["modulesTouser"]>

  export type modulesTouserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    module_id?: boolean
    user_id?: boolean
    c?: boolean
    d?: boolean
    r?: boolean
    u?: boolean
    modules?: boolean | modulesDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["modulesTouser"]>

  export type modulesTouserSelectScalar = {
    module_id?: boolean
    user_id?: boolean
    c?: boolean
    d?: boolean
    r?: boolean
    u?: boolean
  }

  export type modulesTouserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    modules?: boolean | modulesDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }
  export type modulesTouserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    modules?: boolean | modulesDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }

  export type $modulesTouserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "modulesTouser"
    objects: {
      modules: Prisma.$modulesPayload<ExtArgs>
      user: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      module_id: number
      user_id: number
      c: boolean
      d: boolean
      r: boolean
      u: boolean
    }, ExtArgs["result"]["modulesTouser"]>
    composites: {}
  }

  type modulesTouserGetPayload<S extends boolean | null | undefined | modulesTouserDefaultArgs> = $Result.GetResult<Prisma.$modulesTouserPayload, S>

  type modulesTouserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<modulesTouserFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ModulesTouserCountAggregateInputType | true
    }

  export interface modulesTouserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['modulesTouser'], meta: { name: 'modulesTouser' } }
    /**
     * Find zero or one ModulesTouser that matches the filter.
     * @param {modulesTouserFindUniqueArgs} args - Arguments to find a ModulesTouser
     * @example
     * // Get one ModulesTouser
     * const modulesTouser = await prisma.modulesTouser.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends modulesTouserFindUniqueArgs>(args: SelectSubset<T, modulesTouserFindUniqueArgs<ExtArgs>>): Prisma__modulesTouserClient<$Result.GetResult<Prisma.$modulesTouserPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one ModulesTouser that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {modulesTouserFindUniqueOrThrowArgs} args - Arguments to find a ModulesTouser
     * @example
     * // Get one ModulesTouser
     * const modulesTouser = await prisma.modulesTouser.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends modulesTouserFindUniqueOrThrowArgs>(args: SelectSubset<T, modulesTouserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__modulesTouserClient<$Result.GetResult<Prisma.$modulesTouserPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first ModulesTouser that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {modulesTouserFindFirstArgs} args - Arguments to find a ModulesTouser
     * @example
     * // Get one ModulesTouser
     * const modulesTouser = await prisma.modulesTouser.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends modulesTouserFindFirstArgs>(args?: SelectSubset<T, modulesTouserFindFirstArgs<ExtArgs>>): Prisma__modulesTouserClient<$Result.GetResult<Prisma.$modulesTouserPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first ModulesTouser that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {modulesTouserFindFirstOrThrowArgs} args - Arguments to find a ModulesTouser
     * @example
     * // Get one ModulesTouser
     * const modulesTouser = await prisma.modulesTouser.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends modulesTouserFindFirstOrThrowArgs>(args?: SelectSubset<T, modulesTouserFindFirstOrThrowArgs<ExtArgs>>): Prisma__modulesTouserClient<$Result.GetResult<Prisma.$modulesTouserPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more ModulesTousers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {modulesTouserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ModulesTousers
     * const modulesTousers = await prisma.modulesTouser.findMany()
     * 
     * // Get first 10 ModulesTousers
     * const modulesTousers = await prisma.modulesTouser.findMany({ take: 10 })
     * 
     * // Only select the `module_id`
     * const modulesTouserWithModule_idOnly = await prisma.modulesTouser.findMany({ select: { module_id: true } })
     * 
     */
    findMany<T extends modulesTouserFindManyArgs>(args?: SelectSubset<T, modulesTouserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$modulesTouserPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a ModulesTouser.
     * @param {modulesTouserCreateArgs} args - Arguments to create a ModulesTouser.
     * @example
     * // Create one ModulesTouser
     * const ModulesTouser = await prisma.modulesTouser.create({
     *   data: {
     *     // ... data to create a ModulesTouser
     *   }
     * })
     * 
     */
    create<T extends modulesTouserCreateArgs>(args: SelectSubset<T, modulesTouserCreateArgs<ExtArgs>>): Prisma__modulesTouserClient<$Result.GetResult<Prisma.$modulesTouserPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many ModulesTousers.
     * @param {modulesTouserCreateManyArgs} args - Arguments to create many ModulesTousers.
     * @example
     * // Create many ModulesTousers
     * const modulesTouser = await prisma.modulesTouser.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends modulesTouserCreateManyArgs>(args?: SelectSubset<T, modulesTouserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ModulesTousers and returns the data saved in the database.
     * @param {modulesTouserCreateManyAndReturnArgs} args - Arguments to create many ModulesTousers.
     * @example
     * // Create many ModulesTousers
     * const modulesTouser = await prisma.modulesTouser.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ModulesTousers and only return the `module_id`
     * const modulesTouserWithModule_idOnly = await prisma.modulesTouser.createManyAndReturn({ 
     *   select: { module_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends modulesTouserCreateManyAndReturnArgs>(args?: SelectSubset<T, modulesTouserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$modulesTouserPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a ModulesTouser.
     * @param {modulesTouserDeleteArgs} args - Arguments to delete one ModulesTouser.
     * @example
     * // Delete one ModulesTouser
     * const ModulesTouser = await prisma.modulesTouser.delete({
     *   where: {
     *     // ... filter to delete one ModulesTouser
     *   }
     * })
     * 
     */
    delete<T extends modulesTouserDeleteArgs>(args: SelectSubset<T, modulesTouserDeleteArgs<ExtArgs>>): Prisma__modulesTouserClient<$Result.GetResult<Prisma.$modulesTouserPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one ModulesTouser.
     * @param {modulesTouserUpdateArgs} args - Arguments to update one ModulesTouser.
     * @example
     * // Update one ModulesTouser
     * const modulesTouser = await prisma.modulesTouser.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends modulesTouserUpdateArgs>(args: SelectSubset<T, modulesTouserUpdateArgs<ExtArgs>>): Prisma__modulesTouserClient<$Result.GetResult<Prisma.$modulesTouserPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more ModulesTousers.
     * @param {modulesTouserDeleteManyArgs} args - Arguments to filter ModulesTousers to delete.
     * @example
     * // Delete a few ModulesTousers
     * const { count } = await prisma.modulesTouser.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends modulesTouserDeleteManyArgs>(args?: SelectSubset<T, modulesTouserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ModulesTousers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {modulesTouserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ModulesTousers
     * const modulesTouser = await prisma.modulesTouser.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends modulesTouserUpdateManyArgs>(args: SelectSubset<T, modulesTouserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ModulesTouser.
     * @param {modulesTouserUpsertArgs} args - Arguments to update or create a ModulesTouser.
     * @example
     * // Update or create a ModulesTouser
     * const modulesTouser = await prisma.modulesTouser.upsert({
     *   create: {
     *     // ... data to create a ModulesTouser
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ModulesTouser we want to update
     *   }
     * })
     */
    upsert<T extends modulesTouserUpsertArgs>(args: SelectSubset<T, modulesTouserUpsertArgs<ExtArgs>>): Prisma__modulesTouserClient<$Result.GetResult<Prisma.$modulesTouserPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of ModulesTousers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {modulesTouserCountArgs} args - Arguments to filter ModulesTousers to count.
     * @example
     * // Count the number of ModulesTousers
     * const count = await prisma.modulesTouser.count({
     *   where: {
     *     // ... the filter for the ModulesTousers we want to count
     *   }
     * })
    **/
    count<T extends modulesTouserCountArgs>(
      args?: Subset<T, modulesTouserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ModulesTouserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ModulesTouser.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModulesTouserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ModulesTouserAggregateArgs>(args: Subset<T, ModulesTouserAggregateArgs>): Prisma.PrismaPromise<GetModulesTouserAggregateType<T>>

    /**
     * Group by ModulesTouser.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {modulesTouserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends modulesTouserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: modulesTouserGroupByArgs['orderBy'] }
        : { orderBy?: modulesTouserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, modulesTouserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetModulesTouserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the modulesTouser model
   */
  readonly fields: modulesTouserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for modulesTouser.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__modulesTouserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    modules<T extends modulesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, modulesDefaultArgs<ExtArgs>>): Prisma__modulesClient<$Result.GetResult<Prisma.$modulesPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the modulesTouser model
   */ 
  interface modulesTouserFieldRefs {
    readonly module_id: FieldRef<"modulesTouser", 'Int'>
    readonly user_id: FieldRef<"modulesTouser", 'Int'>
    readonly c: FieldRef<"modulesTouser", 'Boolean'>
    readonly d: FieldRef<"modulesTouser", 'Boolean'>
    readonly r: FieldRef<"modulesTouser", 'Boolean'>
    readonly u: FieldRef<"modulesTouser", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * modulesTouser findUnique
   */
  export type modulesTouserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the modulesTouser
     */
    select?: modulesTouserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: modulesTouserInclude<ExtArgs> | null
    /**
     * Filter, which modulesTouser to fetch.
     */
    where: modulesTouserWhereUniqueInput
  }

  /**
   * modulesTouser findUniqueOrThrow
   */
  export type modulesTouserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the modulesTouser
     */
    select?: modulesTouserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: modulesTouserInclude<ExtArgs> | null
    /**
     * Filter, which modulesTouser to fetch.
     */
    where: modulesTouserWhereUniqueInput
  }

  /**
   * modulesTouser findFirst
   */
  export type modulesTouserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the modulesTouser
     */
    select?: modulesTouserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: modulesTouserInclude<ExtArgs> | null
    /**
     * Filter, which modulesTouser to fetch.
     */
    where?: modulesTouserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of modulesTousers to fetch.
     */
    orderBy?: modulesTouserOrderByWithRelationInput | modulesTouserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for modulesTousers.
     */
    cursor?: modulesTouserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` modulesTousers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` modulesTousers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of modulesTousers.
     */
    distinct?: ModulesTouserScalarFieldEnum | ModulesTouserScalarFieldEnum[]
  }

  /**
   * modulesTouser findFirstOrThrow
   */
  export type modulesTouserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the modulesTouser
     */
    select?: modulesTouserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: modulesTouserInclude<ExtArgs> | null
    /**
     * Filter, which modulesTouser to fetch.
     */
    where?: modulesTouserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of modulesTousers to fetch.
     */
    orderBy?: modulesTouserOrderByWithRelationInput | modulesTouserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for modulesTousers.
     */
    cursor?: modulesTouserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` modulesTousers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` modulesTousers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of modulesTousers.
     */
    distinct?: ModulesTouserScalarFieldEnum | ModulesTouserScalarFieldEnum[]
  }

  /**
   * modulesTouser findMany
   */
  export type modulesTouserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the modulesTouser
     */
    select?: modulesTouserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: modulesTouserInclude<ExtArgs> | null
    /**
     * Filter, which modulesTousers to fetch.
     */
    where?: modulesTouserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of modulesTousers to fetch.
     */
    orderBy?: modulesTouserOrderByWithRelationInput | modulesTouserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing modulesTousers.
     */
    cursor?: modulesTouserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` modulesTousers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` modulesTousers.
     */
    skip?: number
    distinct?: ModulesTouserScalarFieldEnum | ModulesTouserScalarFieldEnum[]
  }

  /**
   * modulesTouser create
   */
  export type modulesTouserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the modulesTouser
     */
    select?: modulesTouserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: modulesTouserInclude<ExtArgs> | null
    /**
     * The data needed to create a modulesTouser.
     */
    data: XOR<modulesTouserCreateInput, modulesTouserUncheckedCreateInput>
  }

  /**
   * modulesTouser createMany
   */
  export type modulesTouserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many modulesTousers.
     */
    data: modulesTouserCreateManyInput | modulesTouserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * modulesTouser createManyAndReturn
   */
  export type modulesTouserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the modulesTouser
     */
    select?: modulesTouserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many modulesTousers.
     */
    data: modulesTouserCreateManyInput | modulesTouserCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: modulesTouserIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * modulesTouser update
   */
  export type modulesTouserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the modulesTouser
     */
    select?: modulesTouserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: modulesTouserInclude<ExtArgs> | null
    /**
     * The data needed to update a modulesTouser.
     */
    data: XOR<modulesTouserUpdateInput, modulesTouserUncheckedUpdateInput>
    /**
     * Choose, which modulesTouser to update.
     */
    where: modulesTouserWhereUniqueInput
  }

  /**
   * modulesTouser updateMany
   */
  export type modulesTouserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update modulesTousers.
     */
    data: XOR<modulesTouserUpdateManyMutationInput, modulesTouserUncheckedUpdateManyInput>
    /**
     * Filter which modulesTousers to update
     */
    where?: modulesTouserWhereInput
  }

  /**
   * modulesTouser upsert
   */
  export type modulesTouserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the modulesTouser
     */
    select?: modulesTouserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: modulesTouserInclude<ExtArgs> | null
    /**
     * The filter to search for the modulesTouser to update in case it exists.
     */
    where: modulesTouserWhereUniqueInput
    /**
     * In case the modulesTouser found by the `where` argument doesn't exist, create a new modulesTouser with this data.
     */
    create: XOR<modulesTouserCreateInput, modulesTouserUncheckedCreateInput>
    /**
     * In case the modulesTouser was found with the provided `where` argument, update it with this data.
     */
    update: XOR<modulesTouserUpdateInput, modulesTouserUncheckedUpdateInput>
  }

  /**
   * modulesTouser delete
   */
  export type modulesTouserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the modulesTouser
     */
    select?: modulesTouserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: modulesTouserInclude<ExtArgs> | null
    /**
     * Filter which modulesTouser to delete.
     */
    where: modulesTouserWhereUniqueInput
  }

  /**
   * modulesTouser deleteMany
   */
  export type modulesTouserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which modulesTousers to delete
     */
    where?: modulesTouserWhereInput
  }

  /**
   * modulesTouser without action
   */
  export type modulesTouserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the modulesTouser
     */
    select?: modulesTouserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: modulesTouserInclude<ExtArgs> | null
  }


  /**
   * Model job_post
   */

  export type AggregateJob_post = {
    _count: Job_postCountAggregateOutputType | null
    _avg: Job_postAvgAggregateOutputType | null
    _sum: Job_postSumAggregateOutputType | null
    _min: Job_postMinAggregateOutputType | null
    _max: Job_postMaxAggregateOutputType | null
  }

  export type Job_postAvgAggregateOutputType = {
    id: number | null
  }

  export type Job_postSumAggregateOutputType = {
    id: number | null
  }

  export type Job_postMinAggregateOutputType = {
    id: number | null
    job_title: string | null
    job_type: string | null
    job_desc: string | null
    experience: string | null
    salary: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Job_postMaxAggregateOutputType = {
    id: number | null
    job_title: string | null
    job_type: string | null
    job_desc: string | null
    experience: string | null
    salary: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Job_postCountAggregateOutputType = {
    id: number
    job_title: number
    job_type: number
    job_desc: number
    experience: number
    salary: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Job_postAvgAggregateInputType = {
    id?: true
  }

  export type Job_postSumAggregateInputType = {
    id?: true
  }

  export type Job_postMinAggregateInputType = {
    id?: true
    job_title?: true
    job_type?: true
    job_desc?: true
    experience?: true
    salary?: true
    created_at?: true
    updated_at?: true
  }

  export type Job_postMaxAggregateInputType = {
    id?: true
    job_title?: true
    job_type?: true
    job_desc?: true
    experience?: true
    salary?: true
    created_at?: true
    updated_at?: true
  }

  export type Job_postCountAggregateInputType = {
    id?: true
    job_title?: true
    job_type?: true
    job_desc?: true
    experience?: true
    salary?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Job_postAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which job_post to aggregate.
     */
    where?: job_postWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of job_posts to fetch.
     */
    orderBy?: job_postOrderByWithRelationInput | job_postOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: job_postWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` job_posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` job_posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned job_posts
    **/
    _count?: true | Job_postCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Job_postAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Job_postSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Job_postMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Job_postMaxAggregateInputType
  }

  export type GetJob_postAggregateType<T extends Job_postAggregateArgs> = {
        [P in keyof T & keyof AggregateJob_post]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateJob_post[P]>
      : GetScalarType<T[P], AggregateJob_post[P]>
  }




  export type job_postGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: job_postWhereInput
    orderBy?: job_postOrderByWithAggregationInput | job_postOrderByWithAggregationInput[]
    by: Job_postScalarFieldEnum[] | Job_postScalarFieldEnum
    having?: job_postScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Job_postCountAggregateInputType | true
    _avg?: Job_postAvgAggregateInputType
    _sum?: Job_postSumAggregateInputType
    _min?: Job_postMinAggregateInputType
    _max?: Job_postMaxAggregateInputType
  }

  export type Job_postGroupByOutputType = {
    id: number
    job_title: string | null
    job_type: string | null
    job_desc: string | null
    experience: string | null
    salary: string | null
    created_at: Date | null
    updated_at: Date | null
    _count: Job_postCountAggregateOutputType | null
    _avg: Job_postAvgAggregateOutputType | null
    _sum: Job_postSumAggregateOutputType | null
    _min: Job_postMinAggregateOutputType | null
    _max: Job_postMaxAggregateOutputType | null
  }

  type GetJob_postGroupByPayload<T extends job_postGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Job_postGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Job_postGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Job_postGroupByOutputType[P]>
            : GetScalarType<T[P], Job_postGroupByOutputType[P]>
        }
      >
    >


  export type job_postSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    job_title?: boolean
    job_type?: boolean
    job_desc?: boolean
    experience?: boolean
    salary?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["job_post"]>

  export type job_postSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    job_title?: boolean
    job_type?: boolean
    job_desc?: boolean
    experience?: boolean
    salary?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["job_post"]>

  export type job_postSelectScalar = {
    id?: boolean
    job_title?: boolean
    job_type?: boolean
    job_desc?: boolean
    experience?: boolean
    salary?: boolean
    created_at?: boolean
    updated_at?: boolean
  }


  export type $job_postPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "job_post"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      job_title: string | null
      job_type: string | null
      job_desc: string | null
      experience: string | null
      salary: string | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["job_post"]>
    composites: {}
  }

  type job_postGetPayload<S extends boolean | null | undefined | job_postDefaultArgs> = $Result.GetResult<Prisma.$job_postPayload, S>

  type job_postCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<job_postFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Job_postCountAggregateInputType | true
    }

  export interface job_postDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['job_post'], meta: { name: 'job_post' } }
    /**
     * Find zero or one Job_post that matches the filter.
     * @param {job_postFindUniqueArgs} args - Arguments to find a Job_post
     * @example
     * // Get one Job_post
     * const job_post = await prisma.job_post.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends job_postFindUniqueArgs>(args: SelectSubset<T, job_postFindUniqueArgs<ExtArgs>>): Prisma__job_postClient<$Result.GetResult<Prisma.$job_postPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Job_post that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {job_postFindUniqueOrThrowArgs} args - Arguments to find a Job_post
     * @example
     * // Get one Job_post
     * const job_post = await prisma.job_post.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends job_postFindUniqueOrThrowArgs>(args: SelectSubset<T, job_postFindUniqueOrThrowArgs<ExtArgs>>): Prisma__job_postClient<$Result.GetResult<Prisma.$job_postPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Job_post that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {job_postFindFirstArgs} args - Arguments to find a Job_post
     * @example
     * // Get one Job_post
     * const job_post = await prisma.job_post.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends job_postFindFirstArgs>(args?: SelectSubset<T, job_postFindFirstArgs<ExtArgs>>): Prisma__job_postClient<$Result.GetResult<Prisma.$job_postPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Job_post that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {job_postFindFirstOrThrowArgs} args - Arguments to find a Job_post
     * @example
     * // Get one Job_post
     * const job_post = await prisma.job_post.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends job_postFindFirstOrThrowArgs>(args?: SelectSubset<T, job_postFindFirstOrThrowArgs<ExtArgs>>): Prisma__job_postClient<$Result.GetResult<Prisma.$job_postPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Job_posts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {job_postFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Job_posts
     * const job_posts = await prisma.job_post.findMany()
     * 
     * // Get first 10 Job_posts
     * const job_posts = await prisma.job_post.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const job_postWithIdOnly = await prisma.job_post.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends job_postFindManyArgs>(args?: SelectSubset<T, job_postFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$job_postPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Job_post.
     * @param {job_postCreateArgs} args - Arguments to create a Job_post.
     * @example
     * // Create one Job_post
     * const Job_post = await prisma.job_post.create({
     *   data: {
     *     // ... data to create a Job_post
     *   }
     * })
     * 
     */
    create<T extends job_postCreateArgs>(args: SelectSubset<T, job_postCreateArgs<ExtArgs>>): Prisma__job_postClient<$Result.GetResult<Prisma.$job_postPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Job_posts.
     * @param {job_postCreateManyArgs} args - Arguments to create many Job_posts.
     * @example
     * // Create many Job_posts
     * const job_post = await prisma.job_post.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends job_postCreateManyArgs>(args?: SelectSubset<T, job_postCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Job_posts and returns the data saved in the database.
     * @param {job_postCreateManyAndReturnArgs} args - Arguments to create many Job_posts.
     * @example
     * // Create many Job_posts
     * const job_post = await prisma.job_post.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Job_posts and only return the `id`
     * const job_postWithIdOnly = await prisma.job_post.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends job_postCreateManyAndReturnArgs>(args?: SelectSubset<T, job_postCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$job_postPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Job_post.
     * @param {job_postDeleteArgs} args - Arguments to delete one Job_post.
     * @example
     * // Delete one Job_post
     * const Job_post = await prisma.job_post.delete({
     *   where: {
     *     // ... filter to delete one Job_post
     *   }
     * })
     * 
     */
    delete<T extends job_postDeleteArgs>(args: SelectSubset<T, job_postDeleteArgs<ExtArgs>>): Prisma__job_postClient<$Result.GetResult<Prisma.$job_postPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Job_post.
     * @param {job_postUpdateArgs} args - Arguments to update one Job_post.
     * @example
     * // Update one Job_post
     * const job_post = await prisma.job_post.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends job_postUpdateArgs>(args: SelectSubset<T, job_postUpdateArgs<ExtArgs>>): Prisma__job_postClient<$Result.GetResult<Prisma.$job_postPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Job_posts.
     * @param {job_postDeleteManyArgs} args - Arguments to filter Job_posts to delete.
     * @example
     * // Delete a few Job_posts
     * const { count } = await prisma.job_post.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends job_postDeleteManyArgs>(args?: SelectSubset<T, job_postDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Job_posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {job_postUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Job_posts
     * const job_post = await prisma.job_post.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends job_postUpdateManyArgs>(args: SelectSubset<T, job_postUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Job_post.
     * @param {job_postUpsertArgs} args - Arguments to update or create a Job_post.
     * @example
     * // Update or create a Job_post
     * const job_post = await prisma.job_post.upsert({
     *   create: {
     *     // ... data to create a Job_post
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Job_post we want to update
     *   }
     * })
     */
    upsert<T extends job_postUpsertArgs>(args: SelectSubset<T, job_postUpsertArgs<ExtArgs>>): Prisma__job_postClient<$Result.GetResult<Prisma.$job_postPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Job_posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {job_postCountArgs} args - Arguments to filter Job_posts to count.
     * @example
     * // Count the number of Job_posts
     * const count = await prisma.job_post.count({
     *   where: {
     *     // ... the filter for the Job_posts we want to count
     *   }
     * })
    **/
    count<T extends job_postCountArgs>(
      args?: Subset<T, job_postCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Job_postCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Job_post.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Job_postAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Job_postAggregateArgs>(args: Subset<T, Job_postAggregateArgs>): Prisma.PrismaPromise<GetJob_postAggregateType<T>>

    /**
     * Group by Job_post.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {job_postGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends job_postGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: job_postGroupByArgs['orderBy'] }
        : { orderBy?: job_postGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, job_postGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetJob_postGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the job_post model
   */
  readonly fields: job_postFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for job_post.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__job_postClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the job_post model
   */ 
  interface job_postFieldRefs {
    readonly id: FieldRef<"job_post", 'Int'>
    readonly job_title: FieldRef<"job_post", 'String'>
    readonly job_type: FieldRef<"job_post", 'String'>
    readonly job_desc: FieldRef<"job_post", 'String'>
    readonly experience: FieldRef<"job_post", 'String'>
    readonly salary: FieldRef<"job_post", 'String'>
    readonly created_at: FieldRef<"job_post", 'DateTime'>
    readonly updated_at: FieldRef<"job_post", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * job_post findUnique
   */
  export type job_postFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the job_post
     */
    select?: job_postSelect<ExtArgs> | null
    /**
     * Filter, which job_post to fetch.
     */
    where: job_postWhereUniqueInput
  }

  /**
   * job_post findUniqueOrThrow
   */
  export type job_postFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the job_post
     */
    select?: job_postSelect<ExtArgs> | null
    /**
     * Filter, which job_post to fetch.
     */
    where: job_postWhereUniqueInput
  }

  /**
   * job_post findFirst
   */
  export type job_postFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the job_post
     */
    select?: job_postSelect<ExtArgs> | null
    /**
     * Filter, which job_post to fetch.
     */
    where?: job_postWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of job_posts to fetch.
     */
    orderBy?: job_postOrderByWithRelationInput | job_postOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for job_posts.
     */
    cursor?: job_postWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` job_posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` job_posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of job_posts.
     */
    distinct?: Job_postScalarFieldEnum | Job_postScalarFieldEnum[]
  }

  /**
   * job_post findFirstOrThrow
   */
  export type job_postFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the job_post
     */
    select?: job_postSelect<ExtArgs> | null
    /**
     * Filter, which job_post to fetch.
     */
    where?: job_postWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of job_posts to fetch.
     */
    orderBy?: job_postOrderByWithRelationInput | job_postOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for job_posts.
     */
    cursor?: job_postWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` job_posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` job_posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of job_posts.
     */
    distinct?: Job_postScalarFieldEnum | Job_postScalarFieldEnum[]
  }

  /**
   * job_post findMany
   */
  export type job_postFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the job_post
     */
    select?: job_postSelect<ExtArgs> | null
    /**
     * Filter, which job_posts to fetch.
     */
    where?: job_postWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of job_posts to fetch.
     */
    orderBy?: job_postOrderByWithRelationInput | job_postOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing job_posts.
     */
    cursor?: job_postWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` job_posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` job_posts.
     */
    skip?: number
    distinct?: Job_postScalarFieldEnum | Job_postScalarFieldEnum[]
  }

  /**
   * job_post create
   */
  export type job_postCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the job_post
     */
    select?: job_postSelect<ExtArgs> | null
    /**
     * The data needed to create a job_post.
     */
    data?: XOR<job_postCreateInput, job_postUncheckedCreateInput>
  }

  /**
   * job_post createMany
   */
  export type job_postCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many job_posts.
     */
    data: job_postCreateManyInput | job_postCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * job_post createManyAndReturn
   */
  export type job_postCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the job_post
     */
    select?: job_postSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many job_posts.
     */
    data: job_postCreateManyInput | job_postCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * job_post update
   */
  export type job_postUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the job_post
     */
    select?: job_postSelect<ExtArgs> | null
    /**
     * The data needed to update a job_post.
     */
    data: XOR<job_postUpdateInput, job_postUncheckedUpdateInput>
    /**
     * Choose, which job_post to update.
     */
    where: job_postWhereUniqueInput
  }

  /**
   * job_post updateMany
   */
  export type job_postUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update job_posts.
     */
    data: XOR<job_postUpdateManyMutationInput, job_postUncheckedUpdateManyInput>
    /**
     * Filter which job_posts to update
     */
    where?: job_postWhereInput
  }

  /**
   * job_post upsert
   */
  export type job_postUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the job_post
     */
    select?: job_postSelect<ExtArgs> | null
    /**
     * The filter to search for the job_post to update in case it exists.
     */
    where: job_postWhereUniqueInput
    /**
     * In case the job_post found by the `where` argument doesn't exist, create a new job_post with this data.
     */
    create: XOR<job_postCreateInput, job_postUncheckedCreateInput>
    /**
     * In case the job_post was found with the provided `where` argument, update it with this data.
     */
    update: XOR<job_postUpdateInput, job_postUncheckedUpdateInput>
  }

  /**
   * job_post delete
   */
  export type job_postDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the job_post
     */
    select?: job_postSelect<ExtArgs> | null
    /**
     * Filter which job_post to delete.
     */
    where: job_postWhereUniqueInput
  }

  /**
   * job_post deleteMany
   */
  export type job_postDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which job_posts to delete
     */
    where?: job_postWhereInput
  }

  /**
   * job_post without action
   */
  export type job_postDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the job_post
     */
    select?: job_postSelect<ExtArgs> | null
  }


  /**
   * Model candidate_list
   */

  export type AggregateCandidate_list = {
    _count: Candidate_listCountAggregateOutputType | null
    _avg: Candidate_listAvgAggregateOutputType | null
    _sum: Candidate_listSumAggregateOutputType | null
    _min: Candidate_listMinAggregateOutputType | null
    _max: Candidate_listMaxAggregateOutputType | null
  }

  export type Candidate_listAvgAggregateOutputType = {
    candidate_id: number | null
  }

  export type Candidate_listSumAggregateOutputType = {
    candidate_id: number | null
  }

  export type Candidate_listMinAggregateOutputType = {
    candidate_id: number | null
    title: string | null
    first_name: string | null
    middle_name: string | null
    last_name: string | null
    address_line1: string | null
    address_line2: string | null
    city: string | null
    state: string | null
    pin_code: string | null
    country: string | null
    contact_number: string | null
    alt_contact_number: string | null
    email_address: string | null
    alt_email_address: string | null
    date_of_birth: string | null
    job_title: string | null
    department: string | null
    work_experience: string | null
    hobbies: string | null
    interests: string | null
    skills: string | null
    recruiter_comments: string | null
    communication_skills: string | null
    other1: string | null
    other2: string | null
    other3: string | null
    status: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Candidate_listMaxAggregateOutputType = {
    candidate_id: number | null
    title: string | null
    first_name: string | null
    middle_name: string | null
    last_name: string | null
    address_line1: string | null
    address_line2: string | null
    city: string | null
    state: string | null
    pin_code: string | null
    country: string | null
    contact_number: string | null
    alt_contact_number: string | null
    email_address: string | null
    alt_email_address: string | null
    date_of_birth: string | null
    job_title: string | null
    department: string | null
    work_experience: string | null
    hobbies: string | null
    interests: string | null
    skills: string | null
    recruiter_comments: string | null
    communication_skills: string | null
    other1: string | null
    other2: string | null
    other3: string | null
    status: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Candidate_listCountAggregateOutputType = {
    candidate_id: number
    title: number
    first_name: number
    middle_name: number
    last_name: number
    address_line1: number
    address_line2: number
    city: number
    state: number
    pin_code: number
    country: number
    contact_number: number
    alt_contact_number: number
    email_address: number
    alt_email_address: number
    date_of_birth: number
    job_title: number
    department: number
    work_experience: number
    hobbies: number
    interests: number
    skills: number
    recruiter_comments: number
    communication_skills: number
    other1: number
    other2: number
    other3: number
    status: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Candidate_listAvgAggregateInputType = {
    candidate_id?: true
  }

  export type Candidate_listSumAggregateInputType = {
    candidate_id?: true
  }

  export type Candidate_listMinAggregateInputType = {
    candidate_id?: true
    title?: true
    first_name?: true
    middle_name?: true
    last_name?: true
    address_line1?: true
    address_line2?: true
    city?: true
    state?: true
    pin_code?: true
    country?: true
    contact_number?: true
    alt_contact_number?: true
    email_address?: true
    alt_email_address?: true
    date_of_birth?: true
    job_title?: true
    department?: true
    work_experience?: true
    hobbies?: true
    interests?: true
    skills?: true
    recruiter_comments?: true
    communication_skills?: true
    other1?: true
    other2?: true
    other3?: true
    status?: true
    created_at?: true
    updated_at?: true
  }

  export type Candidate_listMaxAggregateInputType = {
    candidate_id?: true
    title?: true
    first_name?: true
    middle_name?: true
    last_name?: true
    address_line1?: true
    address_line2?: true
    city?: true
    state?: true
    pin_code?: true
    country?: true
    contact_number?: true
    alt_contact_number?: true
    email_address?: true
    alt_email_address?: true
    date_of_birth?: true
    job_title?: true
    department?: true
    work_experience?: true
    hobbies?: true
    interests?: true
    skills?: true
    recruiter_comments?: true
    communication_skills?: true
    other1?: true
    other2?: true
    other3?: true
    status?: true
    created_at?: true
    updated_at?: true
  }

  export type Candidate_listCountAggregateInputType = {
    candidate_id?: true
    title?: true
    first_name?: true
    middle_name?: true
    last_name?: true
    address_line1?: true
    address_line2?: true
    city?: true
    state?: true
    pin_code?: true
    country?: true
    contact_number?: true
    alt_contact_number?: true
    email_address?: true
    alt_email_address?: true
    date_of_birth?: true
    job_title?: true
    department?: true
    work_experience?: true
    hobbies?: true
    interests?: true
    skills?: true
    recruiter_comments?: true
    communication_skills?: true
    other1?: true
    other2?: true
    other3?: true
    status?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Candidate_listAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which candidate_list to aggregate.
     */
    where?: candidate_listWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of candidate_lists to fetch.
     */
    orderBy?: candidate_listOrderByWithRelationInput | candidate_listOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: candidate_listWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` candidate_lists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` candidate_lists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned candidate_lists
    **/
    _count?: true | Candidate_listCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Candidate_listAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Candidate_listSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Candidate_listMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Candidate_listMaxAggregateInputType
  }

  export type GetCandidate_listAggregateType<T extends Candidate_listAggregateArgs> = {
        [P in keyof T & keyof AggregateCandidate_list]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCandidate_list[P]>
      : GetScalarType<T[P], AggregateCandidate_list[P]>
  }




  export type candidate_listGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: candidate_listWhereInput
    orderBy?: candidate_listOrderByWithAggregationInput | candidate_listOrderByWithAggregationInput[]
    by: Candidate_listScalarFieldEnum[] | Candidate_listScalarFieldEnum
    having?: candidate_listScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Candidate_listCountAggregateInputType | true
    _avg?: Candidate_listAvgAggregateInputType
    _sum?: Candidate_listSumAggregateInputType
    _min?: Candidate_listMinAggregateInputType
    _max?: Candidate_listMaxAggregateInputType
  }

  export type Candidate_listGroupByOutputType = {
    candidate_id: number
    title: string | null
    first_name: string | null
    middle_name: string | null
    last_name: string | null
    address_line1: string | null
    address_line2: string | null
    city: string | null
    state: string | null
    pin_code: string | null
    country: string | null
    contact_number: string
    alt_contact_number: string | null
    email_address: string
    alt_email_address: string | null
    date_of_birth: string | null
    job_title: string | null
    department: string | null
    work_experience: string | null
    hobbies: string | null
    interests: string | null
    skills: string | null
    recruiter_comments: string | null
    communication_skills: string | null
    other1: string | null
    other2: string | null
    other3: string | null
    status: string | null
    created_at: Date
    updated_at: Date
    _count: Candidate_listCountAggregateOutputType | null
    _avg: Candidate_listAvgAggregateOutputType | null
    _sum: Candidate_listSumAggregateOutputType | null
    _min: Candidate_listMinAggregateOutputType | null
    _max: Candidate_listMaxAggregateOutputType | null
  }

  type GetCandidate_listGroupByPayload<T extends candidate_listGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Candidate_listGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Candidate_listGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Candidate_listGroupByOutputType[P]>
            : GetScalarType<T[P], Candidate_listGroupByOutputType[P]>
        }
      >
    >


  export type candidate_listSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    candidate_id?: boolean
    title?: boolean
    first_name?: boolean
    middle_name?: boolean
    last_name?: boolean
    address_line1?: boolean
    address_line2?: boolean
    city?: boolean
    state?: boolean
    pin_code?: boolean
    country?: boolean
    contact_number?: boolean
    alt_contact_number?: boolean
    email_address?: boolean
    alt_email_address?: boolean
    date_of_birth?: boolean
    job_title?: boolean
    department?: boolean
    work_experience?: boolean
    hobbies?: boolean
    interests?: boolean
    skills?: boolean
    recruiter_comments?: boolean
    communication_skills?: boolean
    other1?: boolean
    other2?: boolean
    other3?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    workExperiences?: boolean | candidate_list$workExperiencesArgs<ExtArgs>
    qualifications?: boolean | candidate_list$qualificationsArgs<ExtArgs>
    _count?: boolean | Candidate_listCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["candidate_list"]>

  export type candidate_listSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    candidate_id?: boolean
    title?: boolean
    first_name?: boolean
    middle_name?: boolean
    last_name?: boolean
    address_line1?: boolean
    address_line2?: boolean
    city?: boolean
    state?: boolean
    pin_code?: boolean
    country?: boolean
    contact_number?: boolean
    alt_contact_number?: boolean
    email_address?: boolean
    alt_email_address?: boolean
    date_of_birth?: boolean
    job_title?: boolean
    department?: boolean
    work_experience?: boolean
    hobbies?: boolean
    interests?: boolean
    skills?: boolean
    recruiter_comments?: boolean
    communication_skills?: boolean
    other1?: boolean
    other2?: boolean
    other3?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["candidate_list"]>

  export type candidate_listSelectScalar = {
    candidate_id?: boolean
    title?: boolean
    first_name?: boolean
    middle_name?: boolean
    last_name?: boolean
    address_line1?: boolean
    address_line2?: boolean
    city?: boolean
    state?: boolean
    pin_code?: boolean
    country?: boolean
    contact_number?: boolean
    alt_contact_number?: boolean
    email_address?: boolean
    alt_email_address?: boolean
    date_of_birth?: boolean
    job_title?: boolean
    department?: boolean
    work_experience?: boolean
    hobbies?: boolean
    interests?: boolean
    skills?: boolean
    recruiter_comments?: boolean
    communication_skills?: boolean
    other1?: boolean
    other2?: boolean
    other3?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type candidate_listInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    workExperiences?: boolean | candidate_list$workExperiencesArgs<ExtArgs>
    qualifications?: boolean | candidate_list$qualificationsArgs<ExtArgs>
    _count?: boolean | Candidate_listCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type candidate_listIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $candidate_listPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "candidate_list"
    objects: {
      workExperiences: Prisma.$work_experiencePayload<ExtArgs>[]
      qualifications: Prisma.$qualificationsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      candidate_id: number
      title: string | null
      first_name: string | null
      middle_name: string | null
      last_name: string | null
      address_line1: string | null
      address_line2: string | null
      city: string | null
      state: string | null
      pin_code: string | null
      country: string | null
      contact_number: string
      alt_contact_number: string | null
      email_address: string
      alt_email_address: string | null
      date_of_birth: string | null
      job_title: string | null
      department: string | null
      work_experience: string | null
      hobbies: string | null
      interests: string | null
      skills: string | null
      recruiter_comments: string | null
      communication_skills: string | null
      other1: string | null
      other2: string | null
      other3: string | null
      status: string | null
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["candidate_list"]>
    composites: {}
  }

  type candidate_listGetPayload<S extends boolean | null | undefined | candidate_listDefaultArgs> = $Result.GetResult<Prisma.$candidate_listPayload, S>

  type candidate_listCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<candidate_listFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Candidate_listCountAggregateInputType | true
    }

  export interface candidate_listDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['candidate_list'], meta: { name: 'candidate_list' } }
    /**
     * Find zero or one Candidate_list that matches the filter.
     * @param {candidate_listFindUniqueArgs} args - Arguments to find a Candidate_list
     * @example
     * // Get one Candidate_list
     * const candidate_list = await prisma.candidate_list.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends candidate_listFindUniqueArgs>(args: SelectSubset<T, candidate_listFindUniqueArgs<ExtArgs>>): Prisma__candidate_listClient<$Result.GetResult<Prisma.$candidate_listPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Candidate_list that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {candidate_listFindUniqueOrThrowArgs} args - Arguments to find a Candidate_list
     * @example
     * // Get one Candidate_list
     * const candidate_list = await prisma.candidate_list.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends candidate_listFindUniqueOrThrowArgs>(args: SelectSubset<T, candidate_listFindUniqueOrThrowArgs<ExtArgs>>): Prisma__candidate_listClient<$Result.GetResult<Prisma.$candidate_listPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Candidate_list that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {candidate_listFindFirstArgs} args - Arguments to find a Candidate_list
     * @example
     * // Get one Candidate_list
     * const candidate_list = await prisma.candidate_list.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends candidate_listFindFirstArgs>(args?: SelectSubset<T, candidate_listFindFirstArgs<ExtArgs>>): Prisma__candidate_listClient<$Result.GetResult<Prisma.$candidate_listPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Candidate_list that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {candidate_listFindFirstOrThrowArgs} args - Arguments to find a Candidate_list
     * @example
     * // Get one Candidate_list
     * const candidate_list = await prisma.candidate_list.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends candidate_listFindFirstOrThrowArgs>(args?: SelectSubset<T, candidate_listFindFirstOrThrowArgs<ExtArgs>>): Prisma__candidate_listClient<$Result.GetResult<Prisma.$candidate_listPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Candidate_lists that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {candidate_listFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Candidate_lists
     * const candidate_lists = await prisma.candidate_list.findMany()
     * 
     * // Get first 10 Candidate_lists
     * const candidate_lists = await prisma.candidate_list.findMany({ take: 10 })
     * 
     * // Only select the `candidate_id`
     * const candidate_listWithCandidate_idOnly = await prisma.candidate_list.findMany({ select: { candidate_id: true } })
     * 
     */
    findMany<T extends candidate_listFindManyArgs>(args?: SelectSubset<T, candidate_listFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$candidate_listPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Candidate_list.
     * @param {candidate_listCreateArgs} args - Arguments to create a Candidate_list.
     * @example
     * // Create one Candidate_list
     * const Candidate_list = await prisma.candidate_list.create({
     *   data: {
     *     // ... data to create a Candidate_list
     *   }
     * })
     * 
     */
    create<T extends candidate_listCreateArgs>(args: SelectSubset<T, candidate_listCreateArgs<ExtArgs>>): Prisma__candidate_listClient<$Result.GetResult<Prisma.$candidate_listPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Candidate_lists.
     * @param {candidate_listCreateManyArgs} args - Arguments to create many Candidate_lists.
     * @example
     * // Create many Candidate_lists
     * const candidate_list = await prisma.candidate_list.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends candidate_listCreateManyArgs>(args?: SelectSubset<T, candidate_listCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Candidate_lists and returns the data saved in the database.
     * @param {candidate_listCreateManyAndReturnArgs} args - Arguments to create many Candidate_lists.
     * @example
     * // Create many Candidate_lists
     * const candidate_list = await prisma.candidate_list.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Candidate_lists and only return the `candidate_id`
     * const candidate_listWithCandidate_idOnly = await prisma.candidate_list.createManyAndReturn({ 
     *   select: { candidate_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends candidate_listCreateManyAndReturnArgs>(args?: SelectSubset<T, candidate_listCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$candidate_listPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Candidate_list.
     * @param {candidate_listDeleteArgs} args - Arguments to delete one Candidate_list.
     * @example
     * // Delete one Candidate_list
     * const Candidate_list = await prisma.candidate_list.delete({
     *   where: {
     *     // ... filter to delete one Candidate_list
     *   }
     * })
     * 
     */
    delete<T extends candidate_listDeleteArgs>(args: SelectSubset<T, candidate_listDeleteArgs<ExtArgs>>): Prisma__candidate_listClient<$Result.GetResult<Prisma.$candidate_listPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Candidate_list.
     * @param {candidate_listUpdateArgs} args - Arguments to update one Candidate_list.
     * @example
     * // Update one Candidate_list
     * const candidate_list = await prisma.candidate_list.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends candidate_listUpdateArgs>(args: SelectSubset<T, candidate_listUpdateArgs<ExtArgs>>): Prisma__candidate_listClient<$Result.GetResult<Prisma.$candidate_listPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Candidate_lists.
     * @param {candidate_listDeleteManyArgs} args - Arguments to filter Candidate_lists to delete.
     * @example
     * // Delete a few Candidate_lists
     * const { count } = await prisma.candidate_list.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends candidate_listDeleteManyArgs>(args?: SelectSubset<T, candidate_listDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Candidate_lists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {candidate_listUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Candidate_lists
     * const candidate_list = await prisma.candidate_list.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends candidate_listUpdateManyArgs>(args: SelectSubset<T, candidate_listUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Candidate_list.
     * @param {candidate_listUpsertArgs} args - Arguments to update or create a Candidate_list.
     * @example
     * // Update or create a Candidate_list
     * const candidate_list = await prisma.candidate_list.upsert({
     *   create: {
     *     // ... data to create a Candidate_list
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Candidate_list we want to update
     *   }
     * })
     */
    upsert<T extends candidate_listUpsertArgs>(args: SelectSubset<T, candidate_listUpsertArgs<ExtArgs>>): Prisma__candidate_listClient<$Result.GetResult<Prisma.$candidate_listPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Candidate_lists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {candidate_listCountArgs} args - Arguments to filter Candidate_lists to count.
     * @example
     * // Count the number of Candidate_lists
     * const count = await prisma.candidate_list.count({
     *   where: {
     *     // ... the filter for the Candidate_lists we want to count
     *   }
     * })
    **/
    count<T extends candidate_listCountArgs>(
      args?: Subset<T, candidate_listCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Candidate_listCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Candidate_list.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Candidate_listAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Candidate_listAggregateArgs>(args: Subset<T, Candidate_listAggregateArgs>): Prisma.PrismaPromise<GetCandidate_listAggregateType<T>>

    /**
     * Group by Candidate_list.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {candidate_listGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends candidate_listGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: candidate_listGroupByArgs['orderBy'] }
        : { orderBy?: candidate_listGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, candidate_listGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCandidate_listGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the candidate_list model
   */
  readonly fields: candidate_listFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for candidate_list.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__candidate_listClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    workExperiences<T extends candidate_list$workExperiencesArgs<ExtArgs> = {}>(args?: Subset<T, candidate_list$workExperiencesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$work_experiencePayload<ExtArgs>, T, "findMany"> | Null>
    qualifications<T extends candidate_list$qualificationsArgs<ExtArgs> = {}>(args?: Subset<T, candidate_list$qualificationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$qualificationsPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the candidate_list model
   */ 
  interface candidate_listFieldRefs {
    readonly candidate_id: FieldRef<"candidate_list", 'Int'>
    readonly title: FieldRef<"candidate_list", 'String'>
    readonly first_name: FieldRef<"candidate_list", 'String'>
    readonly middle_name: FieldRef<"candidate_list", 'String'>
    readonly last_name: FieldRef<"candidate_list", 'String'>
    readonly address_line1: FieldRef<"candidate_list", 'String'>
    readonly address_line2: FieldRef<"candidate_list", 'String'>
    readonly city: FieldRef<"candidate_list", 'String'>
    readonly state: FieldRef<"candidate_list", 'String'>
    readonly pin_code: FieldRef<"candidate_list", 'String'>
    readonly country: FieldRef<"candidate_list", 'String'>
    readonly contact_number: FieldRef<"candidate_list", 'String'>
    readonly alt_contact_number: FieldRef<"candidate_list", 'String'>
    readonly email_address: FieldRef<"candidate_list", 'String'>
    readonly alt_email_address: FieldRef<"candidate_list", 'String'>
    readonly date_of_birth: FieldRef<"candidate_list", 'String'>
    readonly job_title: FieldRef<"candidate_list", 'String'>
    readonly department: FieldRef<"candidate_list", 'String'>
    readonly work_experience: FieldRef<"candidate_list", 'String'>
    readonly hobbies: FieldRef<"candidate_list", 'String'>
    readonly interests: FieldRef<"candidate_list", 'String'>
    readonly skills: FieldRef<"candidate_list", 'String'>
    readonly recruiter_comments: FieldRef<"candidate_list", 'String'>
    readonly communication_skills: FieldRef<"candidate_list", 'String'>
    readonly other1: FieldRef<"candidate_list", 'String'>
    readonly other2: FieldRef<"candidate_list", 'String'>
    readonly other3: FieldRef<"candidate_list", 'String'>
    readonly status: FieldRef<"candidate_list", 'String'>
    readonly created_at: FieldRef<"candidate_list", 'DateTime'>
    readonly updated_at: FieldRef<"candidate_list", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * candidate_list findUnique
   */
  export type candidate_listFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the candidate_list
     */
    select?: candidate_listSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: candidate_listInclude<ExtArgs> | null
    /**
     * Filter, which candidate_list to fetch.
     */
    where: candidate_listWhereUniqueInput
  }

  /**
   * candidate_list findUniqueOrThrow
   */
  export type candidate_listFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the candidate_list
     */
    select?: candidate_listSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: candidate_listInclude<ExtArgs> | null
    /**
     * Filter, which candidate_list to fetch.
     */
    where: candidate_listWhereUniqueInput
  }

  /**
   * candidate_list findFirst
   */
  export type candidate_listFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the candidate_list
     */
    select?: candidate_listSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: candidate_listInclude<ExtArgs> | null
    /**
     * Filter, which candidate_list to fetch.
     */
    where?: candidate_listWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of candidate_lists to fetch.
     */
    orderBy?: candidate_listOrderByWithRelationInput | candidate_listOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for candidate_lists.
     */
    cursor?: candidate_listWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` candidate_lists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` candidate_lists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of candidate_lists.
     */
    distinct?: Candidate_listScalarFieldEnum | Candidate_listScalarFieldEnum[]
  }

  /**
   * candidate_list findFirstOrThrow
   */
  export type candidate_listFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the candidate_list
     */
    select?: candidate_listSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: candidate_listInclude<ExtArgs> | null
    /**
     * Filter, which candidate_list to fetch.
     */
    where?: candidate_listWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of candidate_lists to fetch.
     */
    orderBy?: candidate_listOrderByWithRelationInput | candidate_listOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for candidate_lists.
     */
    cursor?: candidate_listWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` candidate_lists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` candidate_lists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of candidate_lists.
     */
    distinct?: Candidate_listScalarFieldEnum | Candidate_listScalarFieldEnum[]
  }

  /**
   * candidate_list findMany
   */
  export type candidate_listFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the candidate_list
     */
    select?: candidate_listSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: candidate_listInclude<ExtArgs> | null
    /**
     * Filter, which candidate_lists to fetch.
     */
    where?: candidate_listWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of candidate_lists to fetch.
     */
    orderBy?: candidate_listOrderByWithRelationInput | candidate_listOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing candidate_lists.
     */
    cursor?: candidate_listWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` candidate_lists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` candidate_lists.
     */
    skip?: number
    distinct?: Candidate_listScalarFieldEnum | Candidate_listScalarFieldEnum[]
  }

  /**
   * candidate_list create
   */
  export type candidate_listCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the candidate_list
     */
    select?: candidate_listSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: candidate_listInclude<ExtArgs> | null
    /**
     * The data needed to create a candidate_list.
     */
    data: XOR<candidate_listCreateInput, candidate_listUncheckedCreateInput>
  }

  /**
   * candidate_list createMany
   */
  export type candidate_listCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many candidate_lists.
     */
    data: candidate_listCreateManyInput | candidate_listCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * candidate_list createManyAndReturn
   */
  export type candidate_listCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the candidate_list
     */
    select?: candidate_listSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many candidate_lists.
     */
    data: candidate_listCreateManyInput | candidate_listCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * candidate_list update
   */
  export type candidate_listUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the candidate_list
     */
    select?: candidate_listSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: candidate_listInclude<ExtArgs> | null
    /**
     * The data needed to update a candidate_list.
     */
    data: XOR<candidate_listUpdateInput, candidate_listUncheckedUpdateInput>
    /**
     * Choose, which candidate_list to update.
     */
    where: candidate_listWhereUniqueInput
  }

  /**
   * candidate_list updateMany
   */
  export type candidate_listUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update candidate_lists.
     */
    data: XOR<candidate_listUpdateManyMutationInput, candidate_listUncheckedUpdateManyInput>
    /**
     * Filter which candidate_lists to update
     */
    where?: candidate_listWhereInput
  }

  /**
   * candidate_list upsert
   */
  export type candidate_listUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the candidate_list
     */
    select?: candidate_listSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: candidate_listInclude<ExtArgs> | null
    /**
     * The filter to search for the candidate_list to update in case it exists.
     */
    where: candidate_listWhereUniqueInput
    /**
     * In case the candidate_list found by the `where` argument doesn't exist, create a new candidate_list with this data.
     */
    create: XOR<candidate_listCreateInput, candidate_listUncheckedCreateInput>
    /**
     * In case the candidate_list was found with the provided `where` argument, update it with this data.
     */
    update: XOR<candidate_listUpdateInput, candidate_listUncheckedUpdateInput>
  }

  /**
   * candidate_list delete
   */
  export type candidate_listDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the candidate_list
     */
    select?: candidate_listSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: candidate_listInclude<ExtArgs> | null
    /**
     * Filter which candidate_list to delete.
     */
    where: candidate_listWhereUniqueInput
  }

  /**
   * candidate_list deleteMany
   */
  export type candidate_listDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which candidate_lists to delete
     */
    where?: candidate_listWhereInput
  }

  /**
   * candidate_list.workExperiences
   */
  export type candidate_list$workExperiencesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the work_experience
     */
    select?: work_experienceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: work_experienceInclude<ExtArgs> | null
    where?: work_experienceWhereInput
    orderBy?: work_experienceOrderByWithRelationInput | work_experienceOrderByWithRelationInput[]
    cursor?: work_experienceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Work_experienceScalarFieldEnum | Work_experienceScalarFieldEnum[]
  }

  /**
   * candidate_list.qualifications
   */
  export type candidate_list$qualificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the qualifications
     */
    select?: qualificationsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: qualificationsInclude<ExtArgs> | null
    where?: qualificationsWhereInput
    orderBy?: qualificationsOrderByWithRelationInput | qualificationsOrderByWithRelationInput[]
    cursor?: qualificationsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: QualificationsScalarFieldEnum | QualificationsScalarFieldEnum[]
  }

  /**
   * candidate_list without action
   */
  export type candidate_listDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the candidate_list
     */
    select?: candidate_listSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: candidate_listInclude<ExtArgs> | null
  }


  /**
   * Model work_experience
   */

  export type AggregateWork_experience = {
    _count: Work_experienceCountAggregateOutputType | null
    _avg: Work_experienceAvgAggregateOutputType | null
    _sum: Work_experienceSumAggregateOutputType | null
    _min: Work_experienceMinAggregateOutputType | null
    _max: Work_experienceMaxAggregateOutputType | null
  }

  export type Work_experienceAvgAggregateOutputType = {
    exp_id: number | null
    candidate_id: number | null
  }

  export type Work_experienceSumAggregateOutputType = {
    exp_id: number | null
    candidate_id: number | null
  }

  export type Work_experienceMinAggregateOutputType = {
    exp_id: number | null
    candidate_id: number | null
    organisation_name: string | null
    total_tenure: string | null
    last_designation: string | null
    last_drawn_salary: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Work_experienceMaxAggregateOutputType = {
    exp_id: number | null
    candidate_id: number | null
    organisation_name: string | null
    total_tenure: string | null
    last_designation: string | null
    last_drawn_salary: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Work_experienceCountAggregateOutputType = {
    exp_id: number
    candidate_id: number
    organisation_name: number
    total_tenure: number
    last_designation: number
    last_drawn_salary: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Work_experienceAvgAggregateInputType = {
    exp_id?: true
    candidate_id?: true
  }

  export type Work_experienceSumAggregateInputType = {
    exp_id?: true
    candidate_id?: true
  }

  export type Work_experienceMinAggregateInputType = {
    exp_id?: true
    candidate_id?: true
    organisation_name?: true
    total_tenure?: true
    last_designation?: true
    last_drawn_salary?: true
    created_at?: true
    updated_at?: true
  }

  export type Work_experienceMaxAggregateInputType = {
    exp_id?: true
    candidate_id?: true
    organisation_name?: true
    total_tenure?: true
    last_designation?: true
    last_drawn_salary?: true
    created_at?: true
    updated_at?: true
  }

  export type Work_experienceCountAggregateInputType = {
    exp_id?: true
    candidate_id?: true
    organisation_name?: true
    total_tenure?: true
    last_designation?: true
    last_drawn_salary?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Work_experienceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which work_experience to aggregate.
     */
    where?: work_experienceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of work_experiences to fetch.
     */
    orderBy?: work_experienceOrderByWithRelationInput | work_experienceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: work_experienceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` work_experiences from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` work_experiences.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned work_experiences
    **/
    _count?: true | Work_experienceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Work_experienceAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Work_experienceSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Work_experienceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Work_experienceMaxAggregateInputType
  }

  export type GetWork_experienceAggregateType<T extends Work_experienceAggregateArgs> = {
        [P in keyof T & keyof AggregateWork_experience]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWork_experience[P]>
      : GetScalarType<T[P], AggregateWork_experience[P]>
  }




  export type work_experienceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: work_experienceWhereInput
    orderBy?: work_experienceOrderByWithAggregationInput | work_experienceOrderByWithAggregationInput[]
    by: Work_experienceScalarFieldEnum[] | Work_experienceScalarFieldEnum
    having?: work_experienceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Work_experienceCountAggregateInputType | true
    _avg?: Work_experienceAvgAggregateInputType
    _sum?: Work_experienceSumAggregateInputType
    _min?: Work_experienceMinAggregateInputType
    _max?: Work_experienceMaxAggregateInputType
  }

  export type Work_experienceGroupByOutputType = {
    exp_id: number
    candidate_id: number
    organisation_name: string
    total_tenure: string | null
    last_designation: string | null
    last_drawn_salary: string | null
    created_at: Date
    updated_at: Date
    _count: Work_experienceCountAggregateOutputType | null
    _avg: Work_experienceAvgAggregateOutputType | null
    _sum: Work_experienceSumAggregateOutputType | null
    _min: Work_experienceMinAggregateOutputType | null
    _max: Work_experienceMaxAggregateOutputType | null
  }

  type GetWork_experienceGroupByPayload<T extends work_experienceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Work_experienceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Work_experienceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Work_experienceGroupByOutputType[P]>
            : GetScalarType<T[P], Work_experienceGroupByOutputType[P]>
        }
      >
    >


  export type work_experienceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    exp_id?: boolean
    candidate_id?: boolean
    organisation_name?: boolean
    total_tenure?: boolean
    last_designation?: boolean
    last_drawn_salary?: boolean
    created_at?: boolean
    updated_at?: boolean
    candidate?: boolean | candidate_listDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["work_experience"]>

  export type work_experienceSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    exp_id?: boolean
    candidate_id?: boolean
    organisation_name?: boolean
    total_tenure?: boolean
    last_designation?: boolean
    last_drawn_salary?: boolean
    created_at?: boolean
    updated_at?: boolean
    candidate?: boolean | candidate_listDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["work_experience"]>

  export type work_experienceSelectScalar = {
    exp_id?: boolean
    candidate_id?: boolean
    organisation_name?: boolean
    total_tenure?: boolean
    last_designation?: boolean
    last_drawn_salary?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type work_experienceInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    candidate?: boolean | candidate_listDefaultArgs<ExtArgs>
  }
  export type work_experienceIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    candidate?: boolean | candidate_listDefaultArgs<ExtArgs>
  }

  export type $work_experiencePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "work_experience"
    objects: {
      candidate: Prisma.$candidate_listPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      exp_id: number
      candidate_id: number
      organisation_name: string
      total_tenure: string | null
      last_designation: string | null
      last_drawn_salary: string | null
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["work_experience"]>
    composites: {}
  }

  type work_experienceGetPayload<S extends boolean | null | undefined | work_experienceDefaultArgs> = $Result.GetResult<Prisma.$work_experiencePayload, S>

  type work_experienceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<work_experienceFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Work_experienceCountAggregateInputType | true
    }

  export interface work_experienceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['work_experience'], meta: { name: 'work_experience' } }
    /**
     * Find zero or one Work_experience that matches the filter.
     * @param {work_experienceFindUniqueArgs} args - Arguments to find a Work_experience
     * @example
     * // Get one Work_experience
     * const work_experience = await prisma.work_experience.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends work_experienceFindUniqueArgs>(args: SelectSubset<T, work_experienceFindUniqueArgs<ExtArgs>>): Prisma__work_experienceClient<$Result.GetResult<Prisma.$work_experiencePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Work_experience that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {work_experienceFindUniqueOrThrowArgs} args - Arguments to find a Work_experience
     * @example
     * // Get one Work_experience
     * const work_experience = await prisma.work_experience.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends work_experienceFindUniqueOrThrowArgs>(args: SelectSubset<T, work_experienceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__work_experienceClient<$Result.GetResult<Prisma.$work_experiencePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Work_experience that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {work_experienceFindFirstArgs} args - Arguments to find a Work_experience
     * @example
     * // Get one Work_experience
     * const work_experience = await prisma.work_experience.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends work_experienceFindFirstArgs>(args?: SelectSubset<T, work_experienceFindFirstArgs<ExtArgs>>): Prisma__work_experienceClient<$Result.GetResult<Prisma.$work_experiencePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Work_experience that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {work_experienceFindFirstOrThrowArgs} args - Arguments to find a Work_experience
     * @example
     * // Get one Work_experience
     * const work_experience = await prisma.work_experience.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends work_experienceFindFirstOrThrowArgs>(args?: SelectSubset<T, work_experienceFindFirstOrThrowArgs<ExtArgs>>): Prisma__work_experienceClient<$Result.GetResult<Prisma.$work_experiencePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Work_experiences that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {work_experienceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Work_experiences
     * const work_experiences = await prisma.work_experience.findMany()
     * 
     * // Get first 10 Work_experiences
     * const work_experiences = await prisma.work_experience.findMany({ take: 10 })
     * 
     * // Only select the `exp_id`
     * const work_experienceWithExp_idOnly = await prisma.work_experience.findMany({ select: { exp_id: true } })
     * 
     */
    findMany<T extends work_experienceFindManyArgs>(args?: SelectSubset<T, work_experienceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$work_experiencePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Work_experience.
     * @param {work_experienceCreateArgs} args - Arguments to create a Work_experience.
     * @example
     * // Create one Work_experience
     * const Work_experience = await prisma.work_experience.create({
     *   data: {
     *     // ... data to create a Work_experience
     *   }
     * })
     * 
     */
    create<T extends work_experienceCreateArgs>(args: SelectSubset<T, work_experienceCreateArgs<ExtArgs>>): Prisma__work_experienceClient<$Result.GetResult<Prisma.$work_experiencePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Work_experiences.
     * @param {work_experienceCreateManyArgs} args - Arguments to create many Work_experiences.
     * @example
     * // Create many Work_experiences
     * const work_experience = await prisma.work_experience.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends work_experienceCreateManyArgs>(args?: SelectSubset<T, work_experienceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Work_experiences and returns the data saved in the database.
     * @param {work_experienceCreateManyAndReturnArgs} args - Arguments to create many Work_experiences.
     * @example
     * // Create many Work_experiences
     * const work_experience = await prisma.work_experience.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Work_experiences and only return the `exp_id`
     * const work_experienceWithExp_idOnly = await prisma.work_experience.createManyAndReturn({ 
     *   select: { exp_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends work_experienceCreateManyAndReturnArgs>(args?: SelectSubset<T, work_experienceCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$work_experiencePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Work_experience.
     * @param {work_experienceDeleteArgs} args - Arguments to delete one Work_experience.
     * @example
     * // Delete one Work_experience
     * const Work_experience = await prisma.work_experience.delete({
     *   where: {
     *     // ... filter to delete one Work_experience
     *   }
     * })
     * 
     */
    delete<T extends work_experienceDeleteArgs>(args: SelectSubset<T, work_experienceDeleteArgs<ExtArgs>>): Prisma__work_experienceClient<$Result.GetResult<Prisma.$work_experiencePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Work_experience.
     * @param {work_experienceUpdateArgs} args - Arguments to update one Work_experience.
     * @example
     * // Update one Work_experience
     * const work_experience = await prisma.work_experience.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends work_experienceUpdateArgs>(args: SelectSubset<T, work_experienceUpdateArgs<ExtArgs>>): Prisma__work_experienceClient<$Result.GetResult<Prisma.$work_experiencePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Work_experiences.
     * @param {work_experienceDeleteManyArgs} args - Arguments to filter Work_experiences to delete.
     * @example
     * // Delete a few Work_experiences
     * const { count } = await prisma.work_experience.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends work_experienceDeleteManyArgs>(args?: SelectSubset<T, work_experienceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Work_experiences.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {work_experienceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Work_experiences
     * const work_experience = await prisma.work_experience.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends work_experienceUpdateManyArgs>(args: SelectSubset<T, work_experienceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Work_experience.
     * @param {work_experienceUpsertArgs} args - Arguments to update or create a Work_experience.
     * @example
     * // Update or create a Work_experience
     * const work_experience = await prisma.work_experience.upsert({
     *   create: {
     *     // ... data to create a Work_experience
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Work_experience we want to update
     *   }
     * })
     */
    upsert<T extends work_experienceUpsertArgs>(args: SelectSubset<T, work_experienceUpsertArgs<ExtArgs>>): Prisma__work_experienceClient<$Result.GetResult<Prisma.$work_experiencePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Work_experiences.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {work_experienceCountArgs} args - Arguments to filter Work_experiences to count.
     * @example
     * // Count the number of Work_experiences
     * const count = await prisma.work_experience.count({
     *   where: {
     *     // ... the filter for the Work_experiences we want to count
     *   }
     * })
    **/
    count<T extends work_experienceCountArgs>(
      args?: Subset<T, work_experienceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Work_experienceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Work_experience.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Work_experienceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Work_experienceAggregateArgs>(args: Subset<T, Work_experienceAggregateArgs>): Prisma.PrismaPromise<GetWork_experienceAggregateType<T>>

    /**
     * Group by Work_experience.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {work_experienceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends work_experienceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: work_experienceGroupByArgs['orderBy'] }
        : { orderBy?: work_experienceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, work_experienceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWork_experienceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the work_experience model
   */
  readonly fields: work_experienceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for work_experience.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__work_experienceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    candidate<T extends candidate_listDefaultArgs<ExtArgs> = {}>(args?: Subset<T, candidate_listDefaultArgs<ExtArgs>>): Prisma__candidate_listClient<$Result.GetResult<Prisma.$candidate_listPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the work_experience model
   */ 
  interface work_experienceFieldRefs {
    readonly exp_id: FieldRef<"work_experience", 'Int'>
    readonly candidate_id: FieldRef<"work_experience", 'Int'>
    readonly organisation_name: FieldRef<"work_experience", 'String'>
    readonly total_tenure: FieldRef<"work_experience", 'String'>
    readonly last_designation: FieldRef<"work_experience", 'String'>
    readonly last_drawn_salary: FieldRef<"work_experience", 'String'>
    readonly created_at: FieldRef<"work_experience", 'DateTime'>
    readonly updated_at: FieldRef<"work_experience", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * work_experience findUnique
   */
  export type work_experienceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the work_experience
     */
    select?: work_experienceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: work_experienceInclude<ExtArgs> | null
    /**
     * Filter, which work_experience to fetch.
     */
    where: work_experienceWhereUniqueInput
  }

  /**
   * work_experience findUniqueOrThrow
   */
  export type work_experienceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the work_experience
     */
    select?: work_experienceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: work_experienceInclude<ExtArgs> | null
    /**
     * Filter, which work_experience to fetch.
     */
    where: work_experienceWhereUniqueInput
  }

  /**
   * work_experience findFirst
   */
  export type work_experienceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the work_experience
     */
    select?: work_experienceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: work_experienceInclude<ExtArgs> | null
    /**
     * Filter, which work_experience to fetch.
     */
    where?: work_experienceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of work_experiences to fetch.
     */
    orderBy?: work_experienceOrderByWithRelationInput | work_experienceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for work_experiences.
     */
    cursor?: work_experienceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` work_experiences from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` work_experiences.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of work_experiences.
     */
    distinct?: Work_experienceScalarFieldEnum | Work_experienceScalarFieldEnum[]
  }

  /**
   * work_experience findFirstOrThrow
   */
  export type work_experienceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the work_experience
     */
    select?: work_experienceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: work_experienceInclude<ExtArgs> | null
    /**
     * Filter, which work_experience to fetch.
     */
    where?: work_experienceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of work_experiences to fetch.
     */
    orderBy?: work_experienceOrderByWithRelationInput | work_experienceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for work_experiences.
     */
    cursor?: work_experienceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` work_experiences from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` work_experiences.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of work_experiences.
     */
    distinct?: Work_experienceScalarFieldEnum | Work_experienceScalarFieldEnum[]
  }

  /**
   * work_experience findMany
   */
  export type work_experienceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the work_experience
     */
    select?: work_experienceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: work_experienceInclude<ExtArgs> | null
    /**
     * Filter, which work_experiences to fetch.
     */
    where?: work_experienceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of work_experiences to fetch.
     */
    orderBy?: work_experienceOrderByWithRelationInput | work_experienceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing work_experiences.
     */
    cursor?: work_experienceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` work_experiences from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` work_experiences.
     */
    skip?: number
    distinct?: Work_experienceScalarFieldEnum | Work_experienceScalarFieldEnum[]
  }

  /**
   * work_experience create
   */
  export type work_experienceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the work_experience
     */
    select?: work_experienceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: work_experienceInclude<ExtArgs> | null
    /**
     * The data needed to create a work_experience.
     */
    data: XOR<work_experienceCreateInput, work_experienceUncheckedCreateInput>
  }

  /**
   * work_experience createMany
   */
  export type work_experienceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many work_experiences.
     */
    data: work_experienceCreateManyInput | work_experienceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * work_experience createManyAndReturn
   */
  export type work_experienceCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the work_experience
     */
    select?: work_experienceSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many work_experiences.
     */
    data: work_experienceCreateManyInput | work_experienceCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: work_experienceIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * work_experience update
   */
  export type work_experienceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the work_experience
     */
    select?: work_experienceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: work_experienceInclude<ExtArgs> | null
    /**
     * The data needed to update a work_experience.
     */
    data: XOR<work_experienceUpdateInput, work_experienceUncheckedUpdateInput>
    /**
     * Choose, which work_experience to update.
     */
    where: work_experienceWhereUniqueInput
  }

  /**
   * work_experience updateMany
   */
  export type work_experienceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update work_experiences.
     */
    data: XOR<work_experienceUpdateManyMutationInput, work_experienceUncheckedUpdateManyInput>
    /**
     * Filter which work_experiences to update
     */
    where?: work_experienceWhereInput
  }

  /**
   * work_experience upsert
   */
  export type work_experienceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the work_experience
     */
    select?: work_experienceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: work_experienceInclude<ExtArgs> | null
    /**
     * The filter to search for the work_experience to update in case it exists.
     */
    where: work_experienceWhereUniqueInput
    /**
     * In case the work_experience found by the `where` argument doesn't exist, create a new work_experience with this data.
     */
    create: XOR<work_experienceCreateInput, work_experienceUncheckedCreateInput>
    /**
     * In case the work_experience was found with the provided `where` argument, update it with this data.
     */
    update: XOR<work_experienceUpdateInput, work_experienceUncheckedUpdateInput>
  }

  /**
   * work_experience delete
   */
  export type work_experienceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the work_experience
     */
    select?: work_experienceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: work_experienceInclude<ExtArgs> | null
    /**
     * Filter which work_experience to delete.
     */
    where: work_experienceWhereUniqueInput
  }

  /**
   * work_experience deleteMany
   */
  export type work_experienceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which work_experiences to delete
     */
    where?: work_experienceWhereInput
  }

  /**
   * work_experience without action
   */
  export type work_experienceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the work_experience
     */
    select?: work_experienceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: work_experienceInclude<ExtArgs> | null
  }


  /**
   * Model qualifications
   */

  export type AggregateQualifications = {
    _count: QualificationsCountAggregateOutputType | null
    _avg: QualificationsAvgAggregateOutputType | null
    _sum: QualificationsSumAggregateOutputType | null
    _min: QualificationsMinAggregateOutputType | null
    _max: QualificationsMaxAggregateOutputType | null
  }

  export type QualificationsAvgAggregateOutputType = {
    qualifications_id: number | null
    candidate_id: number | null
    year_of_passing: number | null
  }

  export type QualificationsSumAggregateOutputType = {
    qualifications_id: number | null
    candidate_id: number | null
    year_of_passing: number | null
  }

  export type QualificationsMinAggregateOutputType = {
    qualifications_id: number | null
    candidate_id: number | null
    course: string | null
    college_university: string | null
    year_of_passing: number | null
    percentage_cgpa: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type QualificationsMaxAggregateOutputType = {
    qualifications_id: number | null
    candidate_id: number | null
    course: string | null
    college_university: string | null
    year_of_passing: number | null
    percentage_cgpa: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type QualificationsCountAggregateOutputType = {
    qualifications_id: number
    candidate_id: number
    course: number
    college_university: number
    year_of_passing: number
    percentage_cgpa: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type QualificationsAvgAggregateInputType = {
    qualifications_id?: true
    candidate_id?: true
    year_of_passing?: true
  }

  export type QualificationsSumAggregateInputType = {
    qualifications_id?: true
    candidate_id?: true
    year_of_passing?: true
  }

  export type QualificationsMinAggregateInputType = {
    qualifications_id?: true
    candidate_id?: true
    course?: true
    college_university?: true
    year_of_passing?: true
    percentage_cgpa?: true
    created_at?: true
    updated_at?: true
  }

  export type QualificationsMaxAggregateInputType = {
    qualifications_id?: true
    candidate_id?: true
    course?: true
    college_university?: true
    year_of_passing?: true
    percentage_cgpa?: true
    created_at?: true
    updated_at?: true
  }

  export type QualificationsCountAggregateInputType = {
    qualifications_id?: true
    candidate_id?: true
    course?: true
    college_university?: true
    year_of_passing?: true
    percentage_cgpa?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type QualificationsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which qualifications to aggregate.
     */
    where?: qualificationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of qualifications to fetch.
     */
    orderBy?: qualificationsOrderByWithRelationInput | qualificationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: qualificationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` qualifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` qualifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned qualifications
    **/
    _count?: true | QualificationsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: QualificationsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: QualificationsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: QualificationsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: QualificationsMaxAggregateInputType
  }

  export type GetQualificationsAggregateType<T extends QualificationsAggregateArgs> = {
        [P in keyof T & keyof AggregateQualifications]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateQualifications[P]>
      : GetScalarType<T[P], AggregateQualifications[P]>
  }




  export type qualificationsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: qualificationsWhereInput
    orderBy?: qualificationsOrderByWithAggregationInput | qualificationsOrderByWithAggregationInput[]
    by: QualificationsScalarFieldEnum[] | QualificationsScalarFieldEnum
    having?: qualificationsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: QualificationsCountAggregateInputType | true
    _avg?: QualificationsAvgAggregateInputType
    _sum?: QualificationsSumAggregateInputType
    _min?: QualificationsMinAggregateInputType
    _max?: QualificationsMaxAggregateInputType
  }

  export type QualificationsGroupByOutputType = {
    qualifications_id: number
    candidate_id: number
    course: string
    college_university: string
    year_of_passing: number
    percentage_cgpa: string | null
    created_at: Date
    updated_at: Date | null
    _count: QualificationsCountAggregateOutputType | null
    _avg: QualificationsAvgAggregateOutputType | null
    _sum: QualificationsSumAggregateOutputType | null
    _min: QualificationsMinAggregateOutputType | null
    _max: QualificationsMaxAggregateOutputType | null
  }

  type GetQualificationsGroupByPayload<T extends qualificationsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<QualificationsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof QualificationsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], QualificationsGroupByOutputType[P]>
            : GetScalarType<T[P], QualificationsGroupByOutputType[P]>
        }
      >
    >


  export type qualificationsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    qualifications_id?: boolean
    candidate_id?: boolean
    course?: boolean
    college_university?: boolean
    year_of_passing?: boolean
    percentage_cgpa?: boolean
    created_at?: boolean
    updated_at?: boolean
    candidate?: boolean | candidate_listDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["qualifications"]>

  export type qualificationsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    qualifications_id?: boolean
    candidate_id?: boolean
    course?: boolean
    college_university?: boolean
    year_of_passing?: boolean
    percentage_cgpa?: boolean
    created_at?: boolean
    updated_at?: boolean
    candidate?: boolean | candidate_listDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["qualifications"]>

  export type qualificationsSelectScalar = {
    qualifications_id?: boolean
    candidate_id?: boolean
    course?: boolean
    college_university?: boolean
    year_of_passing?: boolean
    percentage_cgpa?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type qualificationsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    candidate?: boolean | candidate_listDefaultArgs<ExtArgs>
  }
  export type qualificationsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    candidate?: boolean | candidate_listDefaultArgs<ExtArgs>
  }

  export type $qualificationsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "qualifications"
    objects: {
      candidate: Prisma.$candidate_listPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      qualifications_id: number
      candidate_id: number
      course: string
      college_university: string
      year_of_passing: number
      percentage_cgpa: string | null
      created_at: Date
      updated_at: Date | null
    }, ExtArgs["result"]["qualifications"]>
    composites: {}
  }

  type qualificationsGetPayload<S extends boolean | null | undefined | qualificationsDefaultArgs> = $Result.GetResult<Prisma.$qualificationsPayload, S>

  type qualificationsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<qualificationsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: QualificationsCountAggregateInputType | true
    }

  export interface qualificationsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['qualifications'], meta: { name: 'qualifications' } }
    /**
     * Find zero or one Qualifications that matches the filter.
     * @param {qualificationsFindUniqueArgs} args - Arguments to find a Qualifications
     * @example
     * // Get one Qualifications
     * const qualifications = await prisma.qualifications.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends qualificationsFindUniqueArgs>(args: SelectSubset<T, qualificationsFindUniqueArgs<ExtArgs>>): Prisma__qualificationsClient<$Result.GetResult<Prisma.$qualificationsPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Qualifications that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {qualificationsFindUniqueOrThrowArgs} args - Arguments to find a Qualifications
     * @example
     * // Get one Qualifications
     * const qualifications = await prisma.qualifications.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends qualificationsFindUniqueOrThrowArgs>(args: SelectSubset<T, qualificationsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__qualificationsClient<$Result.GetResult<Prisma.$qualificationsPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Qualifications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {qualificationsFindFirstArgs} args - Arguments to find a Qualifications
     * @example
     * // Get one Qualifications
     * const qualifications = await prisma.qualifications.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends qualificationsFindFirstArgs>(args?: SelectSubset<T, qualificationsFindFirstArgs<ExtArgs>>): Prisma__qualificationsClient<$Result.GetResult<Prisma.$qualificationsPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Qualifications that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {qualificationsFindFirstOrThrowArgs} args - Arguments to find a Qualifications
     * @example
     * // Get one Qualifications
     * const qualifications = await prisma.qualifications.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends qualificationsFindFirstOrThrowArgs>(args?: SelectSubset<T, qualificationsFindFirstOrThrowArgs<ExtArgs>>): Prisma__qualificationsClient<$Result.GetResult<Prisma.$qualificationsPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Qualifications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {qualificationsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Qualifications
     * const qualifications = await prisma.qualifications.findMany()
     * 
     * // Get first 10 Qualifications
     * const qualifications = await prisma.qualifications.findMany({ take: 10 })
     * 
     * // Only select the `qualifications_id`
     * const qualificationsWithQualifications_idOnly = await prisma.qualifications.findMany({ select: { qualifications_id: true } })
     * 
     */
    findMany<T extends qualificationsFindManyArgs>(args?: SelectSubset<T, qualificationsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$qualificationsPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Qualifications.
     * @param {qualificationsCreateArgs} args - Arguments to create a Qualifications.
     * @example
     * // Create one Qualifications
     * const Qualifications = await prisma.qualifications.create({
     *   data: {
     *     // ... data to create a Qualifications
     *   }
     * })
     * 
     */
    create<T extends qualificationsCreateArgs>(args: SelectSubset<T, qualificationsCreateArgs<ExtArgs>>): Prisma__qualificationsClient<$Result.GetResult<Prisma.$qualificationsPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Qualifications.
     * @param {qualificationsCreateManyArgs} args - Arguments to create many Qualifications.
     * @example
     * // Create many Qualifications
     * const qualifications = await prisma.qualifications.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends qualificationsCreateManyArgs>(args?: SelectSubset<T, qualificationsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Qualifications and returns the data saved in the database.
     * @param {qualificationsCreateManyAndReturnArgs} args - Arguments to create many Qualifications.
     * @example
     * // Create many Qualifications
     * const qualifications = await prisma.qualifications.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Qualifications and only return the `qualifications_id`
     * const qualificationsWithQualifications_idOnly = await prisma.qualifications.createManyAndReturn({ 
     *   select: { qualifications_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends qualificationsCreateManyAndReturnArgs>(args?: SelectSubset<T, qualificationsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$qualificationsPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Qualifications.
     * @param {qualificationsDeleteArgs} args - Arguments to delete one Qualifications.
     * @example
     * // Delete one Qualifications
     * const Qualifications = await prisma.qualifications.delete({
     *   where: {
     *     // ... filter to delete one Qualifications
     *   }
     * })
     * 
     */
    delete<T extends qualificationsDeleteArgs>(args: SelectSubset<T, qualificationsDeleteArgs<ExtArgs>>): Prisma__qualificationsClient<$Result.GetResult<Prisma.$qualificationsPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Qualifications.
     * @param {qualificationsUpdateArgs} args - Arguments to update one Qualifications.
     * @example
     * // Update one Qualifications
     * const qualifications = await prisma.qualifications.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends qualificationsUpdateArgs>(args: SelectSubset<T, qualificationsUpdateArgs<ExtArgs>>): Prisma__qualificationsClient<$Result.GetResult<Prisma.$qualificationsPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Qualifications.
     * @param {qualificationsDeleteManyArgs} args - Arguments to filter Qualifications to delete.
     * @example
     * // Delete a few Qualifications
     * const { count } = await prisma.qualifications.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends qualificationsDeleteManyArgs>(args?: SelectSubset<T, qualificationsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Qualifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {qualificationsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Qualifications
     * const qualifications = await prisma.qualifications.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends qualificationsUpdateManyArgs>(args: SelectSubset<T, qualificationsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Qualifications.
     * @param {qualificationsUpsertArgs} args - Arguments to update or create a Qualifications.
     * @example
     * // Update or create a Qualifications
     * const qualifications = await prisma.qualifications.upsert({
     *   create: {
     *     // ... data to create a Qualifications
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Qualifications we want to update
     *   }
     * })
     */
    upsert<T extends qualificationsUpsertArgs>(args: SelectSubset<T, qualificationsUpsertArgs<ExtArgs>>): Prisma__qualificationsClient<$Result.GetResult<Prisma.$qualificationsPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Qualifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {qualificationsCountArgs} args - Arguments to filter Qualifications to count.
     * @example
     * // Count the number of Qualifications
     * const count = await prisma.qualifications.count({
     *   where: {
     *     // ... the filter for the Qualifications we want to count
     *   }
     * })
    **/
    count<T extends qualificationsCountArgs>(
      args?: Subset<T, qualificationsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], QualificationsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Qualifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QualificationsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends QualificationsAggregateArgs>(args: Subset<T, QualificationsAggregateArgs>): Prisma.PrismaPromise<GetQualificationsAggregateType<T>>

    /**
     * Group by Qualifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {qualificationsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends qualificationsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: qualificationsGroupByArgs['orderBy'] }
        : { orderBy?: qualificationsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, qualificationsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetQualificationsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the qualifications model
   */
  readonly fields: qualificationsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for qualifications.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__qualificationsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    candidate<T extends candidate_listDefaultArgs<ExtArgs> = {}>(args?: Subset<T, candidate_listDefaultArgs<ExtArgs>>): Prisma__candidate_listClient<$Result.GetResult<Prisma.$candidate_listPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the qualifications model
   */ 
  interface qualificationsFieldRefs {
    readonly qualifications_id: FieldRef<"qualifications", 'Int'>
    readonly candidate_id: FieldRef<"qualifications", 'Int'>
    readonly course: FieldRef<"qualifications", 'String'>
    readonly college_university: FieldRef<"qualifications", 'String'>
    readonly year_of_passing: FieldRef<"qualifications", 'Int'>
    readonly percentage_cgpa: FieldRef<"qualifications", 'String'>
    readonly created_at: FieldRef<"qualifications", 'DateTime'>
    readonly updated_at: FieldRef<"qualifications", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * qualifications findUnique
   */
  export type qualificationsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the qualifications
     */
    select?: qualificationsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: qualificationsInclude<ExtArgs> | null
    /**
     * Filter, which qualifications to fetch.
     */
    where: qualificationsWhereUniqueInput
  }

  /**
   * qualifications findUniqueOrThrow
   */
  export type qualificationsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the qualifications
     */
    select?: qualificationsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: qualificationsInclude<ExtArgs> | null
    /**
     * Filter, which qualifications to fetch.
     */
    where: qualificationsWhereUniqueInput
  }

  /**
   * qualifications findFirst
   */
  export type qualificationsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the qualifications
     */
    select?: qualificationsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: qualificationsInclude<ExtArgs> | null
    /**
     * Filter, which qualifications to fetch.
     */
    where?: qualificationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of qualifications to fetch.
     */
    orderBy?: qualificationsOrderByWithRelationInput | qualificationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for qualifications.
     */
    cursor?: qualificationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` qualifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` qualifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of qualifications.
     */
    distinct?: QualificationsScalarFieldEnum | QualificationsScalarFieldEnum[]
  }

  /**
   * qualifications findFirstOrThrow
   */
  export type qualificationsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the qualifications
     */
    select?: qualificationsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: qualificationsInclude<ExtArgs> | null
    /**
     * Filter, which qualifications to fetch.
     */
    where?: qualificationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of qualifications to fetch.
     */
    orderBy?: qualificationsOrderByWithRelationInput | qualificationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for qualifications.
     */
    cursor?: qualificationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` qualifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` qualifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of qualifications.
     */
    distinct?: QualificationsScalarFieldEnum | QualificationsScalarFieldEnum[]
  }

  /**
   * qualifications findMany
   */
  export type qualificationsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the qualifications
     */
    select?: qualificationsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: qualificationsInclude<ExtArgs> | null
    /**
     * Filter, which qualifications to fetch.
     */
    where?: qualificationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of qualifications to fetch.
     */
    orderBy?: qualificationsOrderByWithRelationInput | qualificationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing qualifications.
     */
    cursor?: qualificationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` qualifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` qualifications.
     */
    skip?: number
    distinct?: QualificationsScalarFieldEnum | QualificationsScalarFieldEnum[]
  }

  /**
   * qualifications create
   */
  export type qualificationsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the qualifications
     */
    select?: qualificationsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: qualificationsInclude<ExtArgs> | null
    /**
     * The data needed to create a qualifications.
     */
    data: XOR<qualificationsCreateInput, qualificationsUncheckedCreateInput>
  }

  /**
   * qualifications createMany
   */
  export type qualificationsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many qualifications.
     */
    data: qualificationsCreateManyInput | qualificationsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * qualifications createManyAndReturn
   */
  export type qualificationsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the qualifications
     */
    select?: qualificationsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many qualifications.
     */
    data: qualificationsCreateManyInput | qualificationsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: qualificationsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * qualifications update
   */
  export type qualificationsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the qualifications
     */
    select?: qualificationsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: qualificationsInclude<ExtArgs> | null
    /**
     * The data needed to update a qualifications.
     */
    data: XOR<qualificationsUpdateInput, qualificationsUncheckedUpdateInput>
    /**
     * Choose, which qualifications to update.
     */
    where: qualificationsWhereUniqueInput
  }

  /**
   * qualifications updateMany
   */
  export type qualificationsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update qualifications.
     */
    data: XOR<qualificationsUpdateManyMutationInput, qualificationsUncheckedUpdateManyInput>
    /**
     * Filter which qualifications to update
     */
    where?: qualificationsWhereInput
  }

  /**
   * qualifications upsert
   */
  export type qualificationsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the qualifications
     */
    select?: qualificationsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: qualificationsInclude<ExtArgs> | null
    /**
     * The filter to search for the qualifications to update in case it exists.
     */
    where: qualificationsWhereUniqueInput
    /**
     * In case the qualifications found by the `where` argument doesn't exist, create a new qualifications with this data.
     */
    create: XOR<qualificationsCreateInput, qualificationsUncheckedCreateInput>
    /**
     * In case the qualifications was found with the provided `where` argument, update it with this data.
     */
    update: XOR<qualificationsUpdateInput, qualificationsUncheckedUpdateInput>
  }

  /**
   * qualifications delete
   */
  export type qualificationsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the qualifications
     */
    select?: qualificationsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: qualificationsInclude<ExtArgs> | null
    /**
     * Filter which qualifications to delete.
     */
    where: qualificationsWhereUniqueInput
  }

  /**
   * qualifications deleteMany
   */
  export type qualificationsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which qualifications to delete
     */
    where?: qualificationsWhereInput
  }

  /**
   * qualifications without action
   */
  export type qualificationsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the qualifications
     */
    select?: qualificationsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: qualificationsInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UserScalarFieldEnum: {
    id: 'id',
    title: 'title',
    first_name: 'first_name',
    middle_name: 'middle_name',
    last_name: 'last_name',
    gender: 'gender',
    dob: 'dob',
    email: 'email',
    mobile: 'mobile',
    username: 'username',
    password: 'password',
    date_of_joining: 'date_of_joining',
    employee_id: 'employee_id',
    designation: 'designation',
    status: 'status',
    department: 'department',
    user_type: 'user_type',
    role: 'role',
    reporting_to: 'reporting_to',
    created_by: 'created_by',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const ModulesScalarFieldEnum: {
    id: 'id',
    module_name: 'module_name',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type ModulesScalarFieldEnum = (typeof ModulesScalarFieldEnum)[keyof typeof ModulesScalarFieldEnum]


  export const ModulesTouserScalarFieldEnum: {
    module_id: 'module_id',
    user_id: 'user_id',
    c: 'c',
    d: 'd',
    r: 'r',
    u: 'u'
  };

  export type ModulesTouserScalarFieldEnum = (typeof ModulesTouserScalarFieldEnum)[keyof typeof ModulesTouserScalarFieldEnum]


  export const Job_postScalarFieldEnum: {
    id: 'id',
    job_title: 'job_title',
    job_type: 'job_type',
    job_desc: 'job_desc',
    experience: 'experience',
    salary: 'salary',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Job_postScalarFieldEnum = (typeof Job_postScalarFieldEnum)[keyof typeof Job_postScalarFieldEnum]


  export const Candidate_listScalarFieldEnum: {
    candidate_id: 'candidate_id',
    title: 'title',
    first_name: 'first_name',
    middle_name: 'middle_name',
    last_name: 'last_name',
    address_line1: 'address_line1',
    address_line2: 'address_line2',
    city: 'city',
    state: 'state',
    pin_code: 'pin_code',
    country: 'country',
    contact_number: 'contact_number',
    alt_contact_number: 'alt_contact_number',
    email_address: 'email_address',
    alt_email_address: 'alt_email_address',
    date_of_birth: 'date_of_birth',
    job_title: 'job_title',
    department: 'department',
    work_experience: 'work_experience',
    hobbies: 'hobbies',
    interests: 'interests',
    skills: 'skills',
    recruiter_comments: 'recruiter_comments',
    communication_skills: 'communication_skills',
    other1: 'other1',
    other2: 'other2',
    other3: 'other3',
    status: 'status',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Candidate_listScalarFieldEnum = (typeof Candidate_listScalarFieldEnum)[keyof typeof Candidate_listScalarFieldEnum]


  export const Work_experienceScalarFieldEnum: {
    exp_id: 'exp_id',
    candidate_id: 'candidate_id',
    organisation_name: 'organisation_name',
    total_tenure: 'total_tenure',
    last_designation: 'last_designation',
    last_drawn_salary: 'last_drawn_salary',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Work_experienceScalarFieldEnum = (typeof Work_experienceScalarFieldEnum)[keyof typeof Work_experienceScalarFieldEnum]


  export const QualificationsScalarFieldEnum: {
    qualifications_id: 'qualifications_id',
    candidate_id: 'candidate_id',
    course: 'course',
    college_university: 'college_university',
    year_of_passing: 'year_of_passing',
    percentage_cgpa: 'percentage_cgpa',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type QualificationsScalarFieldEnum = (typeof QualificationsScalarFieldEnum)[keyof typeof QualificationsScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type userWhereInput = {
    AND?: userWhereInput | userWhereInput[]
    OR?: userWhereInput[]
    NOT?: userWhereInput | userWhereInput[]
    id?: IntFilter<"user"> | number
    title?: StringNullableFilter<"user"> | string | null
    first_name?: StringNullableFilter<"user"> | string | null
    middle_name?: StringNullableFilter<"user"> | string | null
    last_name?: StringNullableFilter<"user"> | string | null
    gender?: StringNullableFilter<"user"> | string | null
    dob?: StringNullableFilter<"user"> | string | null
    email?: StringNullableFilter<"user"> | string | null
    mobile?: StringNullableFilter<"user"> | string | null
    username?: StringNullableFilter<"user"> | string | null
    password?: StringNullableFilter<"user"> | string | null
    date_of_joining?: StringNullableFilter<"user"> | string | null
    employee_id?: StringNullableFilter<"user"> | string | null
    designation?: StringNullableFilter<"user"> | string | null
    status?: StringNullableFilter<"user"> | string | null
    department?: StringNullableFilter<"user"> | string | null
    user_type?: StringNullableFilter<"user"> | string | null
    role?: StringNullableFilter<"user"> | string | null
    reporting_to?: StringNullableFilter<"user"> | string | null
    created_by?: StringNullableFilter<"user"> | string | null
    created_at?: DateTimeNullableFilter<"user"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"user"> | Date | string | null
    modulesTouser?: ModulesTouserListRelationFilter
  }

  export type userOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrderInput | SortOrder
    first_name?: SortOrderInput | SortOrder
    middle_name?: SortOrderInput | SortOrder
    last_name?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    dob?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    mobile?: SortOrderInput | SortOrder
    username?: SortOrderInput | SortOrder
    password?: SortOrderInput | SortOrder
    date_of_joining?: SortOrderInput | SortOrder
    employee_id?: SortOrderInput | SortOrder
    designation?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    department?: SortOrderInput | SortOrder
    user_type?: SortOrderInput | SortOrder
    role?: SortOrderInput | SortOrder
    reporting_to?: SortOrderInput | SortOrder
    created_by?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    modulesTouser?: modulesTouserOrderByRelationAggregateInput
  }

  export type userWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    mobile?: string
    username?: string
    AND?: userWhereInput | userWhereInput[]
    OR?: userWhereInput[]
    NOT?: userWhereInput | userWhereInput[]
    title?: StringNullableFilter<"user"> | string | null
    first_name?: StringNullableFilter<"user"> | string | null
    middle_name?: StringNullableFilter<"user"> | string | null
    last_name?: StringNullableFilter<"user"> | string | null
    gender?: StringNullableFilter<"user"> | string | null
    dob?: StringNullableFilter<"user"> | string | null
    password?: StringNullableFilter<"user"> | string | null
    date_of_joining?: StringNullableFilter<"user"> | string | null
    employee_id?: StringNullableFilter<"user"> | string | null
    designation?: StringNullableFilter<"user"> | string | null
    status?: StringNullableFilter<"user"> | string | null
    department?: StringNullableFilter<"user"> | string | null
    user_type?: StringNullableFilter<"user"> | string | null
    role?: StringNullableFilter<"user"> | string | null
    reporting_to?: StringNullableFilter<"user"> | string | null
    created_by?: StringNullableFilter<"user"> | string | null
    created_at?: DateTimeNullableFilter<"user"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"user"> | Date | string | null
    modulesTouser?: ModulesTouserListRelationFilter
  }, "id" | "email" | "mobile" | "username">

  export type userOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrderInput | SortOrder
    first_name?: SortOrderInput | SortOrder
    middle_name?: SortOrderInput | SortOrder
    last_name?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    dob?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    mobile?: SortOrderInput | SortOrder
    username?: SortOrderInput | SortOrder
    password?: SortOrderInput | SortOrder
    date_of_joining?: SortOrderInput | SortOrder
    employee_id?: SortOrderInput | SortOrder
    designation?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    department?: SortOrderInput | SortOrder
    user_type?: SortOrderInput | SortOrder
    role?: SortOrderInput | SortOrder
    reporting_to?: SortOrderInput | SortOrder
    created_by?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: userCountOrderByAggregateInput
    _avg?: userAvgOrderByAggregateInput
    _max?: userMaxOrderByAggregateInput
    _min?: userMinOrderByAggregateInput
    _sum?: userSumOrderByAggregateInput
  }

  export type userScalarWhereWithAggregatesInput = {
    AND?: userScalarWhereWithAggregatesInput | userScalarWhereWithAggregatesInput[]
    OR?: userScalarWhereWithAggregatesInput[]
    NOT?: userScalarWhereWithAggregatesInput | userScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"user"> | number
    title?: StringNullableWithAggregatesFilter<"user"> | string | null
    first_name?: StringNullableWithAggregatesFilter<"user"> | string | null
    middle_name?: StringNullableWithAggregatesFilter<"user"> | string | null
    last_name?: StringNullableWithAggregatesFilter<"user"> | string | null
    gender?: StringNullableWithAggregatesFilter<"user"> | string | null
    dob?: StringNullableWithAggregatesFilter<"user"> | string | null
    email?: StringNullableWithAggregatesFilter<"user"> | string | null
    mobile?: StringNullableWithAggregatesFilter<"user"> | string | null
    username?: StringNullableWithAggregatesFilter<"user"> | string | null
    password?: StringNullableWithAggregatesFilter<"user"> | string | null
    date_of_joining?: StringNullableWithAggregatesFilter<"user"> | string | null
    employee_id?: StringNullableWithAggregatesFilter<"user"> | string | null
    designation?: StringNullableWithAggregatesFilter<"user"> | string | null
    status?: StringNullableWithAggregatesFilter<"user"> | string | null
    department?: StringNullableWithAggregatesFilter<"user"> | string | null
    user_type?: StringNullableWithAggregatesFilter<"user"> | string | null
    role?: StringNullableWithAggregatesFilter<"user"> | string | null
    reporting_to?: StringNullableWithAggregatesFilter<"user"> | string | null
    created_by?: StringNullableWithAggregatesFilter<"user"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"user"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"user"> | Date | string | null
  }

  export type modulesWhereInput = {
    AND?: modulesWhereInput | modulesWhereInput[]
    OR?: modulesWhereInput[]
    NOT?: modulesWhereInput | modulesWhereInput[]
    id?: IntFilter<"modules"> | number
    module_name?: StringFilter<"modules"> | string
    created_at?: DateTimeNullableFilter<"modules"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"modules"> | Date | string | null
    modulesTouser?: ModulesTouserListRelationFilter
  }

  export type modulesOrderByWithRelationInput = {
    id?: SortOrder
    module_name?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    modulesTouser?: modulesTouserOrderByRelationAggregateInput
  }

  export type modulesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: modulesWhereInput | modulesWhereInput[]
    OR?: modulesWhereInput[]
    NOT?: modulesWhereInput | modulesWhereInput[]
    module_name?: StringFilter<"modules"> | string
    created_at?: DateTimeNullableFilter<"modules"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"modules"> | Date | string | null
    modulesTouser?: ModulesTouserListRelationFilter
  }, "id">

  export type modulesOrderByWithAggregationInput = {
    id?: SortOrder
    module_name?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: modulesCountOrderByAggregateInput
    _avg?: modulesAvgOrderByAggregateInput
    _max?: modulesMaxOrderByAggregateInput
    _min?: modulesMinOrderByAggregateInput
    _sum?: modulesSumOrderByAggregateInput
  }

  export type modulesScalarWhereWithAggregatesInput = {
    AND?: modulesScalarWhereWithAggregatesInput | modulesScalarWhereWithAggregatesInput[]
    OR?: modulesScalarWhereWithAggregatesInput[]
    NOT?: modulesScalarWhereWithAggregatesInput | modulesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"modules"> | number
    module_name?: StringWithAggregatesFilter<"modules"> | string
    created_at?: DateTimeNullableWithAggregatesFilter<"modules"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"modules"> | Date | string | null
  }

  export type modulesTouserWhereInput = {
    AND?: modulesTouserWhereInput | modulesTouserWhereInput[]
    OR?: modulesTouserWhereInput[]
    NOT?: modulesTouserWhereInput | modulesTouserWhereInput[]
    module_id?: IntFilter<"modulesTouser"> | number
    user_id?: IntFilter<"modulesTouser"> | number
    c?: BoolFilter<"modulesTouser"> | boolean
    d?: BoolFilter<"modulesTouser"> | boolean
    r?: BoolFilter<"modulesTouser"> | boolean
    u?: BoolFilter<"modulesTouser"> | boolean
    modules?: XOR<ModulesRelationFilter, modulesWhereInput>
    user?: XOR<UserRelationFilter, userWhereInput>
  }

  export type modulesTouserOrderByWithRelationInput = {
    module_id?: SortOrder
    user_id?: SortOrder
    c?: SortOrder
    d?: SortOrder
    r?: SortOrder
    u?: SortOrder
    modules?: modulesOrderByWithRelationInput
    user?: userOrderByWithRelationInput
  }

  export type modulesTouserWhereUniqueInput = Prisma.AtLeast<{
    user_id_module_id?: modulesTouserUser_idModule_idCompoundUniqueInput
    AND?: modulesTouserWhereInput | modulesTouserWhereInput[]
    OR?: modulesTouserWhereInput[]
    NOT?: modulesTouserWhereInput | modulesTouserWhereInput[]
    module_id?: IntFilter<"modulesTouser"> | number
    user_id?: IntFilter<"modulesTouser"> | number
    c?: BoolFilter<"modulesTouser"> | boolean
    d?: BoolFilter<"modulesTouser"> | boolean
    r?: BoolFilter<"modulesTouser"> | boolean
    u?: BoolFilter<"modulesTouser"> | boolean
    modules?: XOR<ModulesRelationFilter, modulesWhereInput>
    user?: XOR<UserRelationFilter, userWhereInput>
  }, "user_id_module_id">

  export type modulesTouserOrderByWithAggregationInput = {
    module_id?: SortOrder
    user_id?: SortOrder
    c?: SortOrder
    d?: SortOrder
    r?: SortOrder
    u?: SortOrder
    _count?: modulesTouserCountOrderByAggregateInput
    _avg?: modulesTouserAvgOrderByAggregateInput
    _max?: modulesTouserMaxOrderByAggregateInput
    _min?: modulesTouserMinOrderByAggregateInput
    _sum?: modulesTouserSumOrderByAggregateInput
  }

  export type modulesTouserScalarWhereWithAggregatesInput = {
    AND?: modulesTouserScalarWhereWithAggregatesInput | modulesTouserScalarWhereWithAggregatesInput[]
    OR?: modulesTouserScalarWhereWithAggregatesInput[]
    NOT?: modulesTouserScalarWhereWithAggregatesInput | modulesTouserScalarWhereWithAggregatesInput[]
    module_id?: IntWithAggregatesFilter<"modulesTouser"> | number
    user_id?: IntWithAggregatesFilter<"modulesTouser"> | number
    c?: BoolWithAggregatesFilter<"modulesTouser"> | boolean
    d?: BoolWithAggregatesFilter<"modulesTouser"> | boolean
    r?: BoolWithAggregatesFilter<"modulesTouser"> | boolean
    u?: BoolWithAggregatesFilter<"modulesTouser"> | boolean
  }

  export type job_postWhereInput = {
    AND?: job_postWhereInput | job_postWhereInput[]
    OR?: job_postWhereInput[]
    NOT?: job_postWhereInput | job_postWhereInput[]
    id?: IntFilter<"job_post"> | number
    job_title?: StringNullableFilter<"job_post"> | string | null
    job_type?: StringNullableFilter<"job_post"> | string | null
    job_desc?: StringNullableFilter<"job_post"> | string | null
    experience?: StringNullableFilter<"job_post"> | string | null
    salary?: StringNullableFilter<"job_post"> | string | null
    created_at?: DateTimeNullableFilter<"job_post"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"job_post"> | Date | string | null
  }

  export type job_postOrderByWithRelationInput = {
    id?: SortOrder
    job_title?: SortOrderInput | SortOrder
    job_type?: SortOrderInput | SortOrder
    job_desc?: SortOrderInput | SortOrder
    experience?: SortOrderInput | SortOrder
    salary?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
  }

  export type job_postWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: job_postWhereInput | job_postWhereInput[]
    OR?: job_postWhereInput[]
    NOT?: job_postWhereInput | job_postWhereInput[]
    job_title?: StringNullableFilter<"job_post"> | string | null
    job_type?: StringNullableFilter<"job_post"> | string | null
    job_desc?: StringNullableFilter<"job_post"> | string | null
    experience?: StringNullableFilter<"job_post"> | string | null
    salary?: StringNullableFilter<"job_post"> | string | null
    created_at?: DateTimeNullableFilter<"job_post"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"job_post"> | Date | string | null
  }, "id">

  export type job_postOrderByWithAggregationInput = {
    id?: SortOrder
    job_title?: SortOrderInput | SortOrder
    job_type?: SortOrderInput | SortOrder
    job_desc?: SortOrderInput | SortOrder
    experience?: SortOrderInput | SortOrder
    salary?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: job_postCountOrderByAggregateInput
    _avg?: job_postAvgOrderByAggregateInput
    _max?: job_postMaxOrderByAggregateInput
    _min?: job_postMinOrderByAggregateInput
    _sum?: job_postSumOrderByAggregateInput
  }

  export type job_postScalarWhereWithAggregatesInput = {
    AND?: job_postScalarWhereWithAggregatesInput | job_postScalarWhereWithAggregatesInput[]
    OR?: job_postScalarWhereWithAggregatesInput[]
    NOT?: job_postScalarWhereWithAggregatesInput | job_postScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"job_post"> | number
    job_title?: StringNullableWithAggregatesFilter<"job_post"> | string | null
    job_type?: StringNullableWithAggregatesFilter<"job_post"> | string | null
    job_desc?: StringNullableWithAggregatesFilter<"job_post"> | string | null
    experience?: StringNullableWithAggregatesFilter<"job_post"> | string | null
    salary?: StringNullableWithAggregatesFilter<"job_post"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"job_post"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"job_post"> | Date | string | null
  }

  export type candidate_listWhereInput = {
    AND?: candidate_listWhereInput | candidate_listWhereInput[]
    OR?: candidate_listWhereInput[]
    NOT?: candidate_listWhereInput | candidate_listWhereInput[]
    candidate_id?: IntFilter<"candidate_list"> | number
    title?: StringNullableFilter<"candidate_list"> | string | null
    first_name?: StringNullableFilter<"candidate_list"> | string | null
    middle_name?: StringNullableFilter<"candidate_list"> | string | null
    last_name?: StringNullableFilter<"candidate_list"> | string | null
    address_line1?: StringNullableFilter<"candidate_list"> | string | null
    address_line2?: StringNullableFilter<"candidate_list"> | string | null
    city?: StringNullableFilter<"candidate_list"> | string | null
    state?: StringNullableFilter<"candidate_list"> | string | null
    pin_code?: StringNullableFilter<"candidate_list"> | string | null
    country?: StringNullableFilter<"candidate_list"> | string | null
    contact_number?: StringFilter<"candidate_list"> | string
    alt_contact_number?: StringNullableFilter<"candidate_list"> | string | null
    email_address?: StringFilter<"candidate_list"> | string
    alt_email_address?: StringNullableFilter<"candidate_list"> | string | null
    date_of_birth?: StringNullableFilter<"candidate_list"> | string | null
    job_title?: StringNullableFilter<"candidate_list"> | string | null
    department?: StringNullableFilter<"candidate_list"> | string | null
    work_experience?: StringNullableFilter<"candidate_list"> | string | null
    hobbies?: StringNullableFilter<"candidate_list"> | string | null
    interests?: StringNullableFilter<"candidate_list"> | string | null
    skills?: StringNullableFilter<"candidate_list"> | string | null
    recruiter_comments?: StringNullableFilter<"candidate_list"> | string | null
    communication_skills?: StringNullableFilter<"candidate_list"> | string | null
    other1?: StringNullableFilter<"candidate_list"> | string | null
    other2?: StringNullableFilter<"candidate_list"> | string | null
    other3?: StringNullableFilter<"candidate_list"> | string | null
    status?: StringNullableFilter<"candidate_list"> | string | null
    created_at?: DateTimeFilter<"candidate_list"> | Date | string
    updated_at?: DateTimeFilter<"candidate_list"> | Date | string
    workExperiences?: Work_experienceListRelationFilter
    qualifications?: QualificationsListRelationFilter
  }

  export type candidate_listOrderByWithRelationInput = {
    candidate_id?: SortOrder
    title?: SortOrderInput | SortOrder
    first_name?: SortOrderInput | SortOrder
    middle_name?: SortOrderInput | SortOrder
    last_name?: SortOrderInput | SortOrder
    address_line1?: SortOrderInput | SortOrder
    address_line2?: SortOrderInput | SortOrder
    city?: SortOrderInput | SortOrder
    state?: SortOrderInput | SortOrder
    pin_code?: SortOrderInput | SortOrder
    country?: SortOrderInput | SortOrder
    contact_number?: SortOrder
    alt_contact_number?: SortOrderInput | SortOrder
    email_address?: SortOrder
    alt_email_address?: SortOrderInput | SortOrder
    date_of_birth?: SortOrderInput | SortOrder
    job_title?: SortOrderInput | SortOrder
    department?: SortOrderInput | SortOrder
    work_experience?: SortOrderInput | SortOrder
    hobbies?: SortOrderInput | SortOrder
    interests?: SortOrderInput | SortOrder
    skills?: SortOrderInput | SortOrder
    recruiter_comments?: SortOrderInput | SortOrder
    communication_skills?: SortOrderInput | SortOrder
    other1?: SortOrderInput | SortOrder
    other2?: SortOrderInput | SortOrder
    other3?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    workExperiences?: work_experienceOrderByRelationAggregateInput
    qualifications?: qualificationsOrderByRelationAggregateInput
  }

  export type candidate_listWhereUniqueInput = Prisma.AtLeast<{
    candidate_id?: number
    contact_number?: string
    email_address?: string
    AND?: candidate_listWhereInput | candidate_listWhereInput[]
    OR?: candidate_listWhereInput[]
    NOT?: candidate_listWhereInput | candidate_listWhereInput[]
    title?: StringNullableFilter<"candidate_list"> | string | null
    first_name?: StringNullableFilter<"candidate_list"> | string | null
    middle_name?: StringNullableFilter<"candidate_list"> | string | null
    last_name?: StringNullableFilter<"candidate_list"> | string | null
    address_line1?: StringNullableFilter<"candidate_list"> | string | null
    address_line2?: StringNullableFilter<"candidate_list"> | string | null
    city?: StringNullableFilter<"candidate_list"> | string | null
    state?: StringNullableFilter<"candidate_list"> | string | null
    pin_code?: StringNullableFilter<"candidate_list"> | string | null
    country?: StringNullableFilter<"candidate_list"> | string | null
    alt_contact_number?: StringNullableFilter<"candidate_list"> | string | null
    alt_email_address?: StringNullableFilter<"candidate_list"> | string | null
    date_of_birth?: StringNullableFilter<"candidate_list"> | string | null
    job_title?: StringNullableFilter<"candidate_list"> | string | null
    department?: StringNullableFilter<"candidate_list"> | string | null
    work_experience?: StringNullableFilter<"candidate_list"> | string | null
    hobbies?: StringNullableFilter<"candidate_list"> | string | null
    interests?: StringNullableFilter<"candidate_list"> | string | null
    skills?: StringNullableFilter<"candidate_list"> | string | null
    recruiter_comments?: StringNullableFilter<"candidate_list"> | string | null
    communication_skills?: StringNullableFilter<"candidate_list"> | string | null
    other1?: StringNullableFilter<"candidate_list"> | string | null
    other2?: StringNullableFilter<"candidate_list"> | string | null
    other3?: StringNullableFilter<"candidate_list"> | string | null
    status?: StringNullableFilter<"candidate_list"> | string | null
    created_at?: DateTimeFilter<"candidate_list"> | Date | string
    updated_at?: DateTimeFilter<"candidate_list"> | Date | string
    workExperiences?: Work_experienceListRelationFilter
    qualifications?: QualificationsListRelationFilter
  }, "candidate_id" | "contact_number" | "email_address">

  export type candidate_listOrderByWithAggregationInput = {
    candidate_id?: SortOrder
    title?: SortOrderInput | SortOrder
    first_name?: SortOrderInput | SortOrder
    middle_name?: SortOrderInput | SortOrder
    last_name?: SortOrderInput | SortOrder
    address_line1?: SortOrderInput | SortOrder
    address_line2?: SortOrderInput | SortOrder
    city?: SortOrderInput | SortOrder
    state?: SortOrderInput | SortOrder
    pin_code?: SortOrderInput | SortOrder
    country?: SortOrderInput | SortOrder
    contact_number?: SortOrder
    alt_contact_number?: SortOrderInput | SortOrder
    email_address?: SortOrder
    alt_email_address?: SortOrderInput | SortOrder
    date_of_birth?: SortOrderInput | SortOrder
    job_title?: SortOrderInput | SortOrder
    department?: SortOrderInput | SortOrder
    work_experience?: SortOrderInput | SortOrder
    hobbies?: SortOrderInput | SortOrder
    interests?: SortOrderInput | SortOrder
    skills?: SortOrderInput | SortOrder
    recruiter_comments?: SortOrderInput | SortOrder
    communication_skills?: SortOrderInput | SortOrder
    other1?: SortOrderInput | SortOrder
    other2?: SortOrderInput | SortOrder
    other3?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: candidate_listCountOrderByAggregateInput
    _avg?: candidate_listAvgOrderByAggregateInput
    _max?: candidate_listMaxOrderByAggregateInput
    _min?: candidate_listMinOrderByAggregateInput
    _sum?: candidate_listSumOrderByAggregateInput
  }

  export type candidate_listScalarWhereWithAggregatesInput = {
    AND?: candidate_listScalarWhereWithAggregatesInput | candidate_listScalarWhereWithAggregatesInput[]
    OR?: candidate_listScalarWhereWithAggregatesInput[]
    NOT?: candidate_listScalarWhereWithAggregatesInput | candidate_listScalarWhereWithAggregatesInput[]
    candidate_id?: IntWithAggregatesFilter<"candidate_list"> | number
    title?: StringNullableWithAggregatesFilter<"candidate_list"> | string | null
    first_name?: StringNullableWithAggregatesFilter<"candidate_list"> | string | null
    middle_name?: StringNullableWithAggregatesFilter<"candidate_list"> | string | null
    last_name?: StringNullableWithAggregatesFilter<"candidate_list"> | string | null
    address_line1?: StringNullableWithAggregatesFilter<"candidate_list"> | string | null
    address_line2?: StringNullableWithAggregatesFilter<"candidate_list"> | string | null
    city?: StringNullableWithAggregatesFilter<"candidate_list"> | string | null
    state?: StringNullableWithAggregatesFilter<"candidate_list"> | string | null
    pin_code?: StringNullableWithAggregatesFilter<"candidate_list"> | string | null
    country?: StringNullableWithAggregatesFilter<"candidate_list"> | string | null
    contact_number?: StringWithAggregatesFilter<"candidate_list"> | string
    alt_contact_number?: StringNullableWithAggregatesFilter<"candidate_list"> | string | null
    email_address?: StringWithAggregatesFilter<"candidate_list"> | string
    alt_email_address?: StringNullableWithAggregatesFilter<"candidate_list"> | string | null
    date_of_birth?: StringNullableWithAggregatesFilter<"candidate_list"> | string | null
    job_title?: StringNullableWithAggregatesFilter<"candidate_list"> | string | null
    department?: StringNullableWithAggregatesFilter<"candidate_list"> | string | null
    work_experience?: StringNullableWithAggregatesFilter<"candidate_list"> | string | null
    hobbies?: StringNullableWithAggregatesFilter<"candidate_list"> | string | null
    interests?: StringNullableWithAggregatesFilter<"candidate_list"> | string | null
    skills?: StringNullableWithAggregatesFilter<"candidate_list"> | string | null
    recruiter_comments?: StringNullableWithAggregatesFilter<"candidate_list"> | string | null
    communication_skills?: StringNullableWithAggregatesFilter<"candidate_list"> | string | null
    other1?: StringNullableWithAggregatesFilter<"candidate_list"> | string | null
    other2?: StringNullableWithAggregatesFilter<"candidate_list"> | string | null
    other3?: StringNullableWithAggregatesFilter<"candidate_list"> | string | null
    status?: StringNullableWithAggregatesFilter<"candidate_list"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"candidate_list"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"candidate_list"> | Date | string
  }

  export type work_experienceWhereInput = {
    AND?: work_experienceWhereInput | work_experienceWhereInput[]
    OR?: work_experienceWhereInput[]
    NOT?: work_experienceWhereInput | work_experienceWhereInput[]
    exp_id?: IntFilter<"work_experience"> | number
    candidate_id?: IntFilter<"work_experience"> | number
    organisation_name?: StringFilter<"work_experience"> | string
    total_tenure?: StringNullableFilter<"work_experience"> | string | null
    last_designation?: StringNullableFilter<"work_experience"> | string | null
    last_drawn_salary?: StringNullableFilter<"work_experience"> | string | null
    created_at?: DateTimeFilter<"work_experience"> | Date | string
    updated_at?: DateTimeFilter<"work_experience"> | Date | string
    candidate?: XOR<Candidate_listRelationFilter, candidate_listWhereInput>
  }

  export type work_experienceOrderByWithRelationInput = {
    exp_id?: SortOrder
    candidate_id?: SortOrder
    organisation_name?: SortOrder
    total_tenure?: SortOrderInput | SortOrder
    last_designation?: SortOrderInput | SortOrder
    last_drawn_salary?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    candidate?: candidate_listOrderByWithRelationInput
  }

  export type work_experienceWhereUniqueInput = Prisma.AtLeast<{
    exp_id?: number
    AND?: work_experienceWhereInput | work_experienceWhereInput[]
    OR?: work_experienceWhereInput[]
    NOT?: work_experienceWhereInput | work_experienceWhereInput[]
    candidate_id?: IntFilter<"work_experience"> | number
    organisation_name?: StringFilter<"work_experience"> | string
    total_tenure?: StringNullableFilter<"work_experience"> | string | null
    last_designation?: StringNullableFilter<"work_experience"> | string | null
    last_drawn_salary?: StringNullableFilter<"work_experience"> | string | null
    created_at?: DateTimeFilter<"work_experience"> | Date | string
    updated_at?: DateTimeFilter<"work_experience"> | Date | string
    candidate?: XOR<Candidate_listRelationFilter, candidate_listWhereInput>
  }, "exp_id">

  export type work_experienceOrderByWithAggregationInput = {
    exp_id?: SortOrder
    candidate_id?: SortOrder
    organisation_name?: SortOrder
    total_tenure?: SortOrderInput | SortOrder
    last_designation?: SortOrderInput | SortOrder
    last_drawn_salary?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: work_experienceCountOrderByAggregateInput
    _avg?: work_experienceAvgOrderByAggregateInput
    _max?: work_experienceMaxOrderByAggregateInput
    _min?: work_experienceMinOrderByAggregateInput
    _sum?: work_experienceSumOrderByAggregateInput
  }

  export type work_experienceScalarWhereWithAggregatesInput = {
    AND?: work_experienceScalarWhereWithAggregatesInput | work_experienceScalarWhereWithAggregatesInput[]
    OR?: work_experienceScalarWhereWithAggregatesInput[]
    NOT?: work_experienceScalarWhereWithAggregatesInput | work_experienceScalarWhereWithAggregatesInput[]
    exp_id?: IntWithAggregatesFilter<"work_experience"> | number
    candidate_id?: IntWithAggregatesFilter<"work_experience"> | number
    organisation_name?: StringWithAggregatesFilter<"work_experience"> | string
    total_tenure?: StringNullableWithAggregatesFilter<"work_experience"> | string | null
    last_designation?: StringNullableWithAggregatesFilter<"work_experience"> | string | null
    last_drawn_salary?: StringNullableWithAggregatesFilter<"work_experience"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"work_experience"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"work_experience"> | Date | string
  }

  export type qualificationsWhereInput = {
    AND?: qualificationsWhereInput | qualificationsWhereInput[]
    OR?: qualificationsWhereInput[]
    NOT?: qualificationsWhereInput | qualificationsWhereInput[]
    qualifications_id?: IntFilter<"qualifications"> | number
    candidate_id?: IntFilter<"qualifications"> | number
    course?: StringFilter<"qualifications"> | string
    college_university?: StringFilter<"qualifications"> | string
    year_of_passing?: IntFilter<"qualifications"> | number
    percentage_cgpa?: StringNullableFilter<"qualifications"> | string | null
    created_at?: DateTimeFilter<"qualifications"> | Date | string
    updated_at?: DateTimeNullableFilter<"qualifications"> | Date | string | null
    candidate?: XOR<Candidate_listRelationFilter, candidate_listWhereInput>
  }

  export type qualificationsOrderByWithRelationInput = {
    qualifications_id?: SortOrder
    candidate_id?: SortOrder
    course?: SortOrder
    college_university?: SortOrder
    year_of_passing?: SortOrder
    percentage_cgpa?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    candidate?: candidate_listOrderByWithRelationInput
  }

  export type qualificationsWhereUniqueInput = Prisma.AtLeast<{
    qualifications_id?: number
    AND?: qualificationsWhereInput | qualificationsWhereInput[]
    OR?: qualificationsWhereInput[]
    NOT?: qualificationsWhereInput | qualificationsWhereInput[]
    candidate_id?: IntFilter<"qualifications"> | number
    course?: StringFilter<"qualifications"> | string
    college_university?: StringFilter<"qualifications"> | string
    year_of_passing?: IntFilter<"qualifications"> | number
    percentage_cgpa?: StringNullableFilter<"qualifications"> | string | null
    created_at?: DateTimeFilter<"qualifications"> | Date | string
    updated_at?: DateTimeNullableFilter<"qualifications"> | Date | string | null
    candidate?: XOR<Candidate_listRelationFilter, candidate_listWhereInput>
  }, "qualifications_id">

  export type qualificationsOrderByWithAggregationInput = {
    qualifications_id?: SortOrder
    candidate_id?: SortOrder
    course?: SortOrder
    college_university?: SortOrder
    year_of_passing?: SortOrder
    percentage_cgpa?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: qualificationsCountOrderByAggregateInput
    _avg?: qualificationsAvgOrderByAggregateInput
    _max?: qualificationsMaxOrderByAggregateInput
    _min?: qualificationsMinOrderByAggregateInput
    _sum?: qualificationsSumOrderByAggregateInput
  }

  export type qualificationsScalarWhereWithAggregatesInput = {
    AND?: qualificationsScalarWhereWithAggregatesInput | qualificationsScalarWhereWithAggregatesInput[]
    OR?: qualificationsScalarWhereWithAggregatesInput[]
    NOT?: qualificationsScalarWhereWithAggregatesInput | qualificationsScalarWhereWithAggregatesInput[]
    qualifications_id?: IntWithAggregatesFilter<"qualifications"> | number
    candidate_id?: IntWithAggregatesFilter<"qualifications"> | number
    course?: StringWithAggregatesFilter<"qualifications"> | string
    college_university?: StringWithAggregatesFilter<"qualifications"> | string
    year_of_passing?: IntWithAggregatesFilter<"qualifications"> | number
    percentage_cgpa?: StringNullableWithAggregatesFilter<"qualifications"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"qualifications"> | Date | string
    updated_at?: DateTimeNullableWithAggregatesFilter<"qualifications"> | Date | string | null
  }

  export type userCreateInput = {
    title?: string | null
    first_name?: string | null
    middle_name?: string | null
    last_name?: string | null
    gender?: string | null
    dob?: string | null
    email?: string | null
    mobile?: string | null
    username?: string | null
    password?: string | null
    date_of_joining?: string | null
    employee_id?: string | null
    designation?: string | null
    status?: string | null
    department?: string | null
    user_type?: string | null
    role?: string | null
    reporting_to?: string | null
    created_by?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    modulesTouser?: modulesTouserCreateNestedManyWithoutUserInput
  }

  export type userUncheckedCreateInput = {
    id?: number
    title?: string | null
    first_name?: string | null
    middle_name?: string | null
    last_name?: string | null
    gender?: string | null
    dob?: string | null
    email?: string | null
    mobile?: string | null
    username?: string | null
    password?: string | null
    date_of_joining?: string | null
    employee_id?: string | null
    designation?: string | null
    status?: string | null
    department?: string | null
    user_type?: string | null
    role?: string | null
    reporting_to?: string | null
    created_by?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    modulesTouser?: modulesTouserUncheckedCreateNestedManyWithoutUserInput
  }

  export type userUpdateInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    dob?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    date_of_joining?: NullableStringFieldUpdateOperationsInput | string | null
    employee_id?: NullableStringFieldUpdateOperationsInput | string | null
    designation?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    user_type?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    reporting_to?: NullableStringFieldUpdateOperationsInput | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modulesTouser?: modulesTouserUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    dob?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    date_of_joining?: NullableStringFieldUpdateOperationsInput | string | null
    employee_id?: NullableStringFieldUpdateOperationsInput | string | null
    designation?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    user_type?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    reporting_to?: NullableStringFieldUpdateOperationsInput | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modulesTouser?: modulesTouserUncheckedUpdateManyWithoutUserNestedInput
  }

  export type userCreateManyInput = {
    id?: number
    title?: string | null
    first_name?: string | null
    middle_name?: string | null
    last_name?: string | null
    gender?: string | null
    dob?: string | null
    email?: string | null
    mobile?: string | null
    username?: string | null
    password?: string | null
    date_of_joining?: string | null
    employee_id?: string | null
    designation?: string | null
    status?: string | null
    department?: string | null
    user_type?: string | null
    role?: string | null
    reporting_to?: string | null
    created_by?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type userUpdateManyMutationInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    dob?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    date_of_joining?: NullableStringFieldUpdateOperationsInput | string | null
    employee_id?: NullableStringFieldUpdateOperationsInput | string | null
    designation?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    user_type?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    reporting_to?: NullableStringFieldUpdateOperationsInput | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    dob?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    date_of_joining?: NullableStringFieldUpdateOperationsInput | string | null
    employee_id?: NullableStringFieldUpdateOperationsInput | string | null
    designation?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    user_type?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    reporting_to?: NullableStringFieldUpdateOperationsInput | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type modulesCreateInput = {
    module_name: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    modulesTouser?: modulesTouserCreateNestedManyWithoutModulesInput
  }

  export type modulesUncheckedCreateInput = {
    id?: number
    module_name: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    modulesTouser?: modulesTouserUncheckedCreateNestedManyWithoutModulesInput
  }

  export type modulesUpdateInput = {
    module_name?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modulesTouser?: modulesTouserUpdateManyWithoutModulesNestedInput
  }

  export type modulesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    module_name?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modulesTouser?: modulesTouserUncheckedUpdateManyWithoutModulesNestedInput
  }

  export type modulesCreateManyInput = {
    id?: number
    module_name: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type modulesUpdateManyMutationInput = {
    module_name?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type modulesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    module_name?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type modulesTouserCreateInput = {
    c?: boolean
    d?: boolean
    r?: boolean
    u?: boolean
    modules: modulesCreateNestedOneWithoutModulesTouserInput
    user: userCreateNestedOneWithoutModulesTouserInput
  }

  export type modulesTouserUncheckedCreateInput = {
    module_id: number
    user_id: number
    c?: boolean
    d?: boolean
    r?: boolean
    u?: boolean
  }

  export type modulesTouserUpdateInput = {
    c?: BoolFieldUpdateOperationsInput | boolean
    d?: BoolFieldUpdateOperationsInput | boolean
    r?: BoolFieldUpdateOperationsInput | boolean
    u?: BoolFieldUpdateOperationsInput | boolean
    modules?: modulesUpdateOneRequiredWithoutModulesTouserNestedInput
    user?: userUpdateOneRequiredWithoutModulesTouserNestedInput
  }

  export type modulesTouserUncheckedUpdateInput = {
    module_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    c?: BoolFieldUpdateOperationsInput | boolean
    d?: BoolFieldUpdateOperationsInput | boolean
    r?: BoolFieldUpdateOperationsInput | boolean
    u?: BoolFieldUpdateOperationsInput | boolean
  }

  export type modulesTouserCreateManyInput = {
    module_id: number
    user_id: number
    c?: boolean
    d?: boolean
    r?: boolean
    u?: boolean
  }

  export type modulesTouserUpdateManyMutationInput = {
    c?: BoolFieldUpdateOperationsInput | boolean
    d?: BoolFieldUpdateOperationsInput | boolean
    r?: BoolFieldUpdateOperationsInput | boolean
    u?: BoolFieldUpdateOperationsInput | boolean
  }

  export type modulesTouserUncheckedUpdateManyInput = {
    module_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    c?: BoolFieldUpdateOperationsInput | boolean
    d?: BoolFieldUpdateOperationsInput | boolean
    r?: BoolFieldUpdateOperationsInput | boolean
    u?: BoolFieldUpdateOperationsInput | boolean
  }

  export type job_postCreateInput = {
    job_title?: string | null
    job_type?: string | null
    job_desc?: string | null
    experience?: string | null
    salary?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type job_postUncheckedCreateInput = {
    id?: number
    job_title?: string | null
    job_type?: string | null
    job_desc?: string | null
    experience?: string | null
    salary?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type job_postUpdateInput = {
    job_title?: NullableStringFieldUpdateOperationsInput | string | null
    job_type?: NullableStringFieldUpdateOperationsInput | string | null
    job_desc?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    salary?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type job_postUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    job_title?: NullableStringFieldUpdateOperationsInput | string | null
    job_type?: NullableStringFieldUpdateOperationsInput | string | null
    job_desc?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    salary?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type job_postCreateManyInput = {
    id?: number
    job_title?: string | null
    job_type?: string | null
    job_desc?: string | null
    experience?: string | null
    salary?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type job_postUpdateManyMutationInput = {
    job_title?: NullableStringFieldUpdateOperationsInput | string | null
    job_type?: NullableStringFieldUpdateOperationsInput | string | null
    job_desc?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    salary?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type job_postUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    job_title?: NullableStringFieldUpdateOperationsInput | string | null
    job_type?: NullableStringFieldUpdateOperationsInput | string | null
    job_desc?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    salary?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type candidate_listCreateInput = {
    title?: string | null
    first_name?: string | null
    middle_name?: string | null
    last_name?: string | null
    address_line1?: string | null
    address_line2?: string | null
    city?: string | null
    state?: string | null
    pin_code?: string | null
    country?: string | null
    contact_number: string
    alt_contact_number?: string | null
    email_address: string
    alt_email_address?: string | null
    date_of_birth?: string | null
    job_title?: string | null
    department?: string | null
    work_experience?: string | null
    hobbies?: string | null
    interests?: string | null
    skills?: string | null
    recruiter_comments?: string | null
    communication_skills?: string | null
    other1?: string | null
    other2?: string | null
    other3?: string | null
    status?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    workExperiences?: work_experienceCreateNestedManyWithoutCandidateInput
    qualifications?: qualificationsCreateNestedManyWithoutCandidateInput
  }

  export type candidate_listUncheckedCreateInput = {
    candidate_id?: number
    title?: string | null
    first_name?: string | null
    middle_name?: string | null
    last_name?: string | null
    address_line1?: string | null
    address_line2?: string | null
    city?: string | null
    state?: string | null
    pin_code?: string | null
    country?: string | null
    contact_number: string
    alt_contact_number?: string | null
    email_address: string
    alt_email_address?: string | null
    date_of_birth?: string | null
    job_title?: string | null
    department?: string | null
    work_experience?: string | null
    hobbies?: string | null
    interests?: string | null
    skills?: string | null
    recruiter_comments?: string | null
    communication_skills?: string | null
    other1?: string | null
    other2?: string | null
    other3?: string | null
    status?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    workExperiences?: work_experienceUncheckedCreateNestedManyWithoutCandidateInput
    qualifications?: qualificationsUncheckedCreateNestedManyWithoutCandidateInput
  }

  export type candidate_listUpdateInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    address_line2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    pin_code?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    contact_number?: StringFieldUpdateOperationsInput | string
    alt_contact_number?: NullableStringFieldUpdateOperationsInput | string | null
    email_address?: StringFieldUpdateOperationsInput | string
    alt_email_address?: NullableStringFieldUpdateOperationsInput | string | null
    date_of_birth?: NullableStringFieldUpdateOperationsInput | string | null
    job_title?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    work_experience?: NullableStringFieldUpdateOperationsInput | string | null
    hobbies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    recruiter_comments?: NullableStringFieldUpdateOperationsInput | string | null
    communication_skills?: NullableStringFieldUpdateOperationsInput | string | null
    other1?: NullableStringFieldUpdateOperationsInput | string | null
    other2?: NullableStringFieldUpdateOperationsInput | string | null
    other3?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    workExperiences?: work_experienceUpdateManyWithoutCandidateNestedInput
    qualifications?: qualificationsUpdateManyWithoutCandidateNestedInput
  }

  export type candidate_listUncheckedUpdateInput = {
    candidate_id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    address_line2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    pin_code?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    contact_number?: StringFieldUpdateOperationsInput | string
    alt_contact_number?: NullableStringFieldUpdateOperationsInput | string | null
    email_address?: StringFieldUpdateOperationsInput | string
    alt_email_address?: NullableStringFieldUpdateOperationsInput | string | null
    date_of_birth?: NullableStringFieldUpdateOperationsInput | string | null
    job_title?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    work_experience?: NullableStringFieldUpdateOperationsInput | string | null
    hobbies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    recruiter_comments?: NullableStringFieldUpdateOperationsInput | string | null
    communication_skills?: NullableStringFieldUpdateOperationsInput | string | null
    other1?: NullableStringFieldUpdateOperationsInput | string | null
    other2?: NullableStringFieldUpdateOperationsInput | string | null
    other3?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    workExperiences?: work_experienceUncheckedUpdateManyWithoutCandidateNestedInput
    qualifications?: qualificationsUncheckedUpdateManyWithoutCandidateNestedInput
  }

  export type candidate_listCreateManyInput = {
    candidate_id?: number
    title?: string | null
    first_name?: string | null
    middle_name?: string | null
    last_name?: string | null
    address_line1?: string | null
    address_line2?: string | null
    city?: string | null
    state?: string | null
    pin_code?: string | null
    country?: string | null
    contact_number: string
    alt_contact_number?: string | null
    email_address: string
    alt_email_address?: string | null
    date_of_birth?: string | null
    job_title?: string | null
    department?: string | null
    work_experience?: string | null
    hobbies?: string | null
    interests?: string | null
    skills?: string | null
    recruiter_comments?: string | null
    communication_skills?: string | null
    other1?: string | null
    other2?: string | null
    other3?: string | null
    status?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type candidate_listUpdateManyMutationInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    address_line2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    pin_code?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    contact_number?: StringFieldUpdateOperationsInput | string
    alt_contact_number?: NullableStringFieldUpdateOperationsInput | string | null
    email_address?: StringFieldUpdateOperationsInput | string
    alt_email_address?: NullableStringFieldUpdateOperationsInput | string | null
    date_of_birth?: NullableStringFieldUpdateOperationsInput | string | null
    job_title?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    work_experience?: NullableStringFieldUpdateOperationsInput | string | null
    hobbies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    recruiter_comments?: NullableStringFieldUpdateOperationsInput | string | null
    communication_skills?: NullableStringFieldUpdateOperationsInput | string | null
    other1?: NullableStringFieldUpdateOperationsInput | string | null
    other2?: NullableStringFieldUpdateOperationsInput | string | null
    other3?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type candidate_listUncheckedUpdateManyInput = {
    candidate_id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    address_line2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    pin_code?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    contact_number?: StringFieldUpdateOperationsInput | string
    alt_contact_number?: NullableStringFieldUpdateOperationsInput | string | null
    email_address?: StringFieldUpdateOperationsInput | string
    alt_email_address?: NullableStringFieldUpdateOperationsInput | string | null
    date_of_birth?: NullableStringFieldUpdateOperationsInput | string | null
    job_title?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    work_experience?: NullableStringFieldUpdateOperationsInput | string | null
    hobbies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    recruiter_comments?: NullableStringFieldUpdateOperationsInput | string | null
    communication_skills?: NullableStringFieldUpdateOperationsInput | string | null
    other1?: NullableStringFieldUpdateOperationsInput | string | null
    other2?: NullableStringFieldUpdateOperationsInput | string | null
    other3?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type work_experienceCreateInput = {
    organisation_name: string
    total_tenure?: string | null
    last_designation?: string | null
    last_drawn_salary?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    candidate: candidate_listCreateNestedOneWithoutWorkExperiencesInput
  }

  export type work_experienceUncheckedCreateInput = {
    exp_id?: number
    candidate_id: number
    organisation_name: string
    total_tenure?: string | null
    last_designation?: string | null
    last_drawn_salary?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type work_experienceUpdateInput = {
    organisation_name?: StringFieldUpdateOperationsInput | string
    total_tenure?: NullableStringFieldUpdateOperationsInput | string | null
    last_designation?: NullableStringFieldUpdateOperationsInput | string | null
    last_drawn_salary?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    candidate?: candidate_listUpdateOneRequiredWithoutWorkExperiencesNestedInput
  }

  export type work_experienceUncheckedUpdateInput = {
    exp_id?: IntFieldUpdateOperationsInput | number
    candidate_id?: IntFieldUpdateOperationsInput | number
    organisation_name?: StringFieldUpdateOperationsInput | string
    total_tenure?: NullableStringFieldUpdateOperationsInput | string | null
    last_designation?: NullableStringFieldUpdateOperationsInput | string | null
    last_drawn_salary?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type work_experienceCreateManyInput = {
    exp_id?: number
    candidate_id: number
    organisation_name: string
    total_tenure?: string | null
    last_designation?: string | null
    last_drawn_salary?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type work_experienceUpdateManyMutationInput = {
    organisation_name?: StringFieldUpdateOperationsInput | string
    total_tenure?: NullableStringFieldUpdateOperationsInput | string | null
    last_designation?: NullableStringFieldUpdateOperationsInput | string | null
    last_drawn_salary?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type work_experienceUncheckedUpdateManyInput = {
    exp_id?: IntFieldUpdateOperationsInput | number
    candidate_id?: IntFieldUpdateOperationsInput | number
    organisation_name?: StringFieldUpdateOperationsInput | string
    total_tenure?: NullableStringFieldUpdateOperationsInput | string | null
    last_designation?: NullableStringFieldUpdateOperationsInput | string | null
    last_drawn_salary?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type qualificationsCreateInput = {
    course: string
    college_university: string
    year_of_passing: number
    percentage_cgpa?: string | null
    created_at?: Date | string
    updated_at?: Date | string | null
    candidate: candidate_listCreateNestedOneWithoutQualificationsInput
  }

  export type qualificationsUncheckedCreateInput = {
    qualifications_id?: number
    candidate_id: number
    course: string
    college_university: string
    year_of_passing: number
    percentage_cgpa?: string | null
    created_at?: Date | string
    updated_at?: Date | string | null
  }

  export type qualificationsUpdateInput = {
    course?: StringFieldUpdateOperationsInput | string
    college_university?: StringFieldUpdateOperationsInput | string
    year_of_passing?: IntFieldUpdateOperationsInput | number
    percentage_cgpa?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    candidate?: candidate_listUpdateOneRequiredWithoutQualificationsNestedInput
  }

  export type qualificationsUncheckedUpdateInput = {
    qualifications_id?: IntFieldUpdateOperationsInput | number
    candidate_id?: IntFieldUpdateOperationsInput | number
    course?: StringFieldUpdateOperationsInput | string
    college_university?: StringFieldUpdateOperationsInput | string
    year_of_passing?: IntFieldUpdateOperationsInput | number
    percentage_cgpa?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type qualificationsCreateManyInput = {
    qualifications_id?: number
    candidate_id: number
    course: string
    college_university: string
    year_of_passing: number
    percentage_cgpa?: string | null
    created_at?: Date | string
    updated_at?: Date | string | null
  }

  export type qualificationsUpdateManyMutationInput = {
    course?: StringFieldUpdateOperationsInput | string
    college_university?: StringFieldUpdateOperationsInput | string
    year_of_passing?: IntFieldUpdateOperationsInput | number
    percentage_cgpa?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type qualificationsUncheckedUpdateManyInput = {
    qualifications_id?: IntFieldUpdateOperationsInput | number
    candidate_id?: IntFieldUpdateOperationsInput | number
    course?: StringFieldUpdateOperationsInput | string
    college_university?: StringFieldUpdateOperationsInput | string
    year_of_passing?: IntFieldUpdateOperationsInput | number
    percentage_cgpa?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type ModulesTouserListRelationFilter = {
    every?: modulesTouserWhereInput
    some?: modulesTouserWhereInput
    none?: modulesTouserWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type modulesTouserOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type userCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    first_name?: SortOrder
    middle_name?: SortOrder
    last_name?: SortOrder
    gender?: SortOrder
    dob?: SortOrder
    email?: SortOrder
    mobile?: SortOrder
    username?: SortOrder
    password?: SortOrder
    date_of_joining?: SortOrder
    employee_id?: SortOrder
    designation?: SortOrder
    status?: SortOrder
    department?: SortOrder
    user_type?: SortOrder
    role?: SortOrder
    reporting_to?: SortOrder
    created_by?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type userAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type userMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    first_name?: SortOrder
    middle_name?: SortOrder
    last_name?: SortOrder
    gender?: SortOrder
    dob?: SortOrder
    email?: SortOrder
    mobile?: SortOrder
    username?: SortOrder
    password?: SortOrder
    date_of_joining?: SortOrder
    employee_id?: SortOrder
    designation?: SortOrder
    status?: SortOrder
    department?: SortOrder
    user_type?: SortOrder
    role?: SortOrder
    reporting_to?: SortOrder
    created_by?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type userMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    first_name?: SortOrder
    middle_name?: SortOrder
    last_name?: SortOrder
    gender?: SortOrder
    dob?: SortOrder
    email?: SortOrder
    mobile?: SortOrder
    username?: SortOrder
    password?: SortOrder
    date_of_joining?: SortOrder
    employee_id?: SortOrder
    designation?: SortOrder
    status?: SortOrder
    department?: SortOrder
    user_type?: SortOrder
    role?: SortOrder
    reporting_to?: SortOrder
    created_by?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type userSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type modulesCountOrderByAggregateInput = {
    id?: SortOrder
    module_name?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type modulesAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type modulesMaxOrderByAggregateInput = {
    id?: SortOrder
    module_name?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type modulesMinOrderByAggregateInput = {
    id?: SortOrder
    module_name?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type modulesSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type ModulesRelationFilter = {
    is?: modulesWhereInput
    isNot?: modulesWhereInput
  }

  export type UserRelationFilter = {
    is?: userWhereInput
    isNot?: userWhereInput
  }

  export type modulesTouserUser_idModule_idCompoundUniqueInput = {
    user_id: number
    module_id: number
  }

  export type modulesTouserCountOrderByAggregateInput = {
    module_id?: SortOrder
    user_id?: SortOrder
    c?: SortOrder
    d?: SortOrder
    r?: SortOrder
    u?: SortOrder
  }

  export type modulesTouserAvgOrderByAggregateInput = {
    module_id?: SortOrder
    user_id?: SortOrder
  }

  export type modulesTouserMaxOrderByAggregateInput = {
    module_id?: SortOrder
    user_id?: SortOrder
    c?: SortOrder
    d?: SortOrder
    r?: SortOrder
    u?: SortOrder
  }

  export type modulesTouserMinOrderByAggregateInput = {
    module_id?: SortOrder
    user_id?: SortOrder
    c?: SortOrder
    d?: SortOrder
    r?: SortOrder
    u?: SortOrder
  }

  export type modulesTouserSumOrderByAggregateInput = {
    module_id?: SortOrder
    user_id?: SortOrder
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type job_postCountOrderByAggregateInput = {
    id?: SortOrder
    job_title?: SortOrder
    job_type?: SortOrder
    job_desc?: SortOrder
    experience?: SortOrder
    salary?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type job_postAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type job_postMaxOrderByAggregateInput = {
    id?: SortOrder
    job_title?: SortOrder
    job_type?: SortOrder
    job_desc?: SortOrder
    experience?: SortOrder
    salary?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type job_postMinOrderByAggregateInput = {
    id?: SortOrder
    job_title?: SortOrder
    job_type?: SortOrder
    job_desc?: SortOrder
    experience?: SortOrder
    salary?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type job_postSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type Work_experienceListRelationFilter = {
    every?: work_experienceWhereInput
    some?: work_experienceWhereInput
    none?: work_experienceWhereInput
  }

  export type QualificationsListRelationFilter = {
    every?: qualificationsWhereInput
    some?: qualificationsWhereInput
    none?: qualificationsWhereInput
  }

  export type work_experienceOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type qualificationsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type candidate_listCountOrderByAggregateInput = {
    candidate_id?: SortOrder
    title?: SortOrder
    first_name?: SortOrder
    middle_name?: SortOrder
    last_name?: SortOrder
    address_line1?: SortOrder
    address_line2?: SortOrder
    city?: SortOrder
    state?: SortOrder
    pin_code?: SortOrder
    country?: SortOrder
    contact_number?: SortOrder
    alt_contact_number?: SortOrder
    email_address?: SortOrder
    alt_email_address?: SortOrder
    date_of_birth?: SortOrder
    job_title?: SortOrder
    department?: SortOrder
    work_experience?: SortOrder
    hobbies?: SortOrder
    interests?: SortOrder
    skills?: SortOrder
    recruiter_comments?: SortOrder
    communication_skills?: SortOrder
    other1?: SortOrder
    other2?: SortOrder
    other3?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type candidate_listAvgOrderByAggregateInput = {
    candidate_id?: SortOrder
  }

  export type candidate_listMaxOrderByAggregateInput = {
    candidate_id?: SortOrder
    title?: SortOrder
    first_name?: SortOrder
    middle_name?: SortOrder
    last_name?: SortOrder
    address_line1?: SortOrder
    address_line2?: SortOrder
    city?: SortOrder
    state?: SortOrder
    pin_code?: SortOrder
    country?: SortOrder
    contact_number?: SortOrder
    alt_contact_number?: SortOrder
    email_address?: SortOrder
    alt_email_address?: SortOrder
    date_of_birth?: SortOrder
    job_title?: SortOrder
    department?: SortOrder
    work_experience?: SortOrder
    hobbies?: SortOrder
    interests?: SortOrder
    skills?: SortOrder
    recruiter_comments?: SortOrder
    communication_skills?: SortOrder
    other1?: SortOrder
    other2?: SortOrder
    other3?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type candidate_listMinOrderByAggregateInput = {
    candidate_id?: SortOrder
    title?: SortOrder
    first_name?: SortOrder
    middle_name?: SortOrder
    last_name?: SortOrder
    address_line1?: SortOrder
    address_line2?: SortOrder
    city?: SortOrder
    state?: SortOrder
    pin_code?: SortOrder
    country?: SortOrder
    contact_number?: SortOrder
    alt_contact_number?: SortOrder
    email_address?: SortOrder
    alt_email_address?: SortOrder
    date_of_birth?: SortOrder
    job_title?: SortOrder
    department?: SortOrder
    work_experience?: SortOrder
    hobbies?: SortOrder
    interests?: SortOrder
    skills?: SortOrder
    recruiter_comments?: SortOrder
    communication_skills?: SortOrder
    other1?: SortOrder
    other2?: SortOrder
    other3?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type candidate_listSumOrderByAggregateInput = {
    candidate_id?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type Candidate_listRelationFilter = {
    is?: candidate_listWhereInput
    isNot?: candidate_listWhereInput
  }

  export type work_experienceCountOrderByAggregateInput = {
    exp_id?: SortOrder
    candidate_id?: SortOrder
    organisation_name?: SortOrder
    total_tenure?: SortOrder
    last_designation?: SortOrder
    last_drawn_salary?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type work_experienceAvgOrderByAggregateInput = {
    exp_id?: SortOrder
    candidate_id?: SortOrder
  }

  export type work_experienceMaxOrderByAggregateInput = {
    exp_id?: SortOrder
    candidate_id?: SortOrder
    organisation_name?: SortOrder
    total_tenure?: SortOrder
    last_designation?: SortOrder
    last_drawn_salary?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type work_experienceMinOrderByAggregateInput = {
    exp_id?: SortOrder
    candidate_id?: SortOrder
    organisation_name?: SortOrder
    total_tenure?: SortOrder
    last_designation?: SortOrder
    last_drawn_salary?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type work_experienceSumOrderByAggregateInput = {
    exp_id?: SortOrder
    candidate_id?: SortOrder
  }

  export type qualificationsCountOrderByAggregateInput = {
    qualifications_id?: SortOrder
    candidate_id?: SortOrder
    course?: SortOrder
    college_university?: SortOrder
    year_of_passing?: SortOrder
    percentage_cgpa?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type qualificationsAvgOrderByAggregateInput = {
    qualifications_id?: SortOrder
    candidate_id?: SortOrder
    year_of_passing?: SortOrder
  }

  export type qualificationsMaxOrderByAggregateInput = {
    qualifications_id?: SortOrder
    candidate_id?: SortOrder
    course?: SortOrder
    college_university?: SortOrder
    year_of_passing?: SortOrder
    percentage_cgpa?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type qualificationsMinOrderByAggregateInput = {
    qualifications_id?: SortOrder
    candidate_id?: SortOrder
    course?: SortOrder
    college_university?: SortOrder
    year_of_passing?: SortOrder
    percentage_cgpa?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type qualificationsSumOrderByAggregateInput = {
    qualifications_id?: SortOrder
    candidate_id?: SortOrder
    year_of_passing?: SortOrder
  }

  export type modulesTouserCreateNestedManyWithoutUserInput = {
    create?: XOR<modulesTouserCreateWithoutUserInput, modulesTouserUncheckedCreateWithoutUserInput> | modulesTouserCreateWithoutUserInput[] | modulesTouserUncheckedCreateWithoutUserInput[]
    connectOrCreate?: modulesTouserCreateOrConnectWithoutUserInput | modulesTouserCreateOrConnectWithoutUserInput[]
    createMany?: modulesTouserCreateManyUserInputEnvelope
    connect?: modulesTouserWhereUniqueInput | modulesTouserWhereUniqueInput[]
  }

  export type modulesTouserUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<modulesTouserCreateWithoutUserInput, modulesTouserUncheckedCreateWithoutUserInput> | modulesTouserCreateWithoutUserInput[] | modulesTouserUncheckedCreateWithoutUserInput[]
    connectOrCreate?: modulesTouserCreateOrConnectWithoutUserInput | modulesTouserCreateOrConnectWithoutUserInput[]
    createMany?: modulesTouserCreateManyUserInputEnvelope
    connect?: modulesTouserWhereUniqueInput | modulesTouserWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type modulesTouserUpdateManyWithoutUserNestedInput = {
    create?: XOR<modulesTouserCreateWithoutUserInput, modulesTouserUncheckedCreateWithoutUserInput> | modulesTouserCreateWithoutUserInput[] | modulesTouserUncheckedCreateWithoutUserInput[]
    connectOrCreate?: modulesTouserCreateOrConnectWithoutUserInput | modulesTouserCreateOrConnectWithoutUserInput[]
    upsert?: modulesTouserUpsertWithWhereUniqueWithoutUserInput | modulesTouserUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: modulesTouserCreateManyUserInputEnvelope
    set?: modulesTouserWhereUniqueInput | modulesTouserWhereUniqueInput[]
    disconnect?: modulesTouserWhereUniqueInput | modulesTouserWhereUniqueInput[]
    delete?: modulesTouserWhereUniqueInput | modulesTouserWhereUniqueInput[]
    connect?: modulesTouserWhereUniqueInput | modulesTouserWhereUniqueInput[]
    update?: modulesTouserUpdateWithWhereUniqueWithoutUserInput | modulesTouserUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: modulesTouserUpdateManyWithWhereWithoutUserInput | modulesTouserUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: modulesTouserScalarWhereInput | modulesTouserScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type modulesTouserUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<modulesTouserCreateWithoutUserInput, modulesTouserUncheckedCreateWithoutUserInput> | modulesTouserCreateWithoutUserInput[] | modulesTouserUncheckedCreateWithoutUserInput[]
    connectOrCreate?: modulesTouserCreateOrConnectWithoutUserInput | modulesTouserCreateOrConnectWithoutUserInput[]
    upsert?: modulesTouserUpsertWithWhereUniqueWithoutUserInput | modulesTouserUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: modulesTouserCreateManyUserInputEnvelope
    set?: modulesTouserWhereUniqueInput | modulesTouserWhereUniqueInput[]
    disconnect?: modulesTouserWhereUniqueInput | modulesTouserWhereUniqueInput[]
    delete?: modulesTouserWhereUniqueInput | modulesTouserWhereUniqueInput[]
    connect?: modulesTouserWhereUniqueInput | modulesTouserWhereUniqueInput[]
    update?: modulesTouserUpdateWithWhereUniqueWithoutUserInput | modulesTouserUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: modulesTouserUpdateManyWithWhereWithoutUserInput | modulesTouserUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: modulesTouserScalarWhereInput | modulesTouserScalarWhereInput[]
  }

  export type modulesTouserCreateNestedManyWithoutModulesInput = {
    create?: XOR<modulesTouserCreateWithoutModulesInput, modulesTouserUncheckedCreateWithoutModulesInput> | modulesTouserCreateWithoutModulesInput[] | modulesTouserUncheckedCreateWithoutModulesInput[]
    connectOrCreate?: modulesTouserCreateOrConnectWithoutModulesInput | modulesTouserCreateOrConnectWithoutModulesInput[]
    createMany?: modulesTouserCreateManyModulesInputEnvelope
    connect?: modulesTouserWhereUniqueInput | modulesTouserWhereUniqueInput[]
  }

  export type modulesTouserUncheckedCreateNestedManyWithoutModulesInput = {
    create?: XOR<modulesTouserCreateWithoutModulesInput, modulesTouserUncheckedCreateWithoutModulesInput> | modulesTouserCreateWithoutModulesInput[] | modulesTouserUncheckedCreateWithoutModulesInput[]
    connectOrCreate?: modulesTouserCreateOrConnectWithoutModulesInput | modulesTouserCreateOrConnectWithoutModulesInput[]
    createMany?: modulesTouserCreateManyModulesInputEnvelope
    connect?: modulesTouserWhereUniqueInput | modulesTouserWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type modulesTouserUpdateManyWithoutModulesNestedInput = {
    create?: XOR<modulesTouserCreateWithoutModulesInput, modulesTouserUncheckedCreateWithoutModulesInput> | modulesTouserCreateWithoutModulesInput[] | modulesTouserUncheckedCreateWithoutModulesInput[]
    connectOrCreate?: modulesTouserCreateOrConnectWithoutModulesInput | modulesTouserCreateOrConnectWithoutModulesInput[]
    upsert?: modulesTouserUpsertWithWhereUniqueWithoutModulesInput | modulesTouserUpsertWithWhereUniqueWithoutModulesInput[]
    createMany?: modulesTouserCreateManyModulesInputEnvelope
    set?: modulesTouserWhereUniqueInput | modulesTouserWhereUniqueInput[]
    disconnect?: modulesTouserWhereUniqueInput | modulesTouserWhereUniqueInput[]
    delete?: modulesTouserWhereUniqueInput | modulesTouserWhereUniqueInput[]
    connect?: modulesTouserWhereUniqueInput | modulesTouserWhereUniqueInput[]
    update?: modulesTouserUpdateWithWhereUniqueWithoutModulesInput | modulesTouserUpdateWithWhereUniqueWithoutModulesInput[]
    updateMany?: modulesTouserUpdateManyWithWhereWithoutModulesInput | modulesTouserUpdateManyWithWhereWithoutModulesInput[]
    deleteMany?: modulesTouserScalarWhereInput | modulesTouserScalarWhereInput[]
  }

  export type modulesTouserUncheckedUpdateManyWithoutModulesNestedInput = {
    create?: XOR<modulesTouserCreateWithoutModulesInput, modulesTouserUncheckedCreateWithoutModulesInput> | modulesTouserCreateWithoutModulesInput[] | modulesTouserUncheckedCreateWithoutModulesInput[]
    connectOrCreate?: modulesTouserCreateOrConnectWithoutModulesInput | modulesTouserCreateOrConnectWithoutModulesInput[]
    upsert?: modulesTouserUpsertWithWhereUniqueWithoutModulesInput | modulesTouserUpsertWithWhereUniqueWithoutModulesInput[]
    createMany?: modulesTouserCreateManyModulesInputEnvelope
    set?: modulesTouserWhereUniqueInput | modulesTouserWhereUniqueInput[]
    disconnect?: modulesTouserWhereUniqueInput | modulesTouserWhereUniqueInput[]
    delete?: modulesTouserWhereUniqueInput | modulesTouserWhereUniqueInput[]
    connect?: modulesTouserWhereUniqueInput | modulesTouserWhereUniqueInput[]
    update?: modulesTouserUpdateWithWhereUniqueWithoutModulesInput | modulesTouserUpdateWithWhereUniqueWithoutModulesInput[]
    updateMany?: modulesTouserUpdateManyWithWhereWithoutModulesInput | modulesTouserUpdateManyWithWhereWithoutModulesInput[]
    deleteMany?: modulesTouserScalarWhereInput | modulesTouserScalarWhereInput[]
  }

  export type modulesCreateNestedOneWithoutModulesTouserInput = {
    create?: XOR<modulesCreateWithoutModulesTouserInput, modulesUncheckedCreateWithoutModulesTouserInput>
    connectOrCreate?: modulesCreateOrConnectWithoutModulesTouserInput
    connect?: modulesWhereUniqueInput
  }

  export type userCreateNestedOneWithoutModulesTouserInput = {
    create?: XOR<userCreateWithoutModulesTouserInput, userUncheckedCreateWithoutModulesTouserInput>
    connectOrCreate?: userCreateOrConnectWithoutModulesTouserInput
    connect?: userWhereUniqueInput
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type modulesUpdateOneRequiredWithoutModulesTouserNestedInput = {
    create?: XOR<modulesCreateWithoutModulesTouserInput, modulesUncheckedCreateWithoutModulesTouserInput>
    connectOrCreate?: modulesCreateOrConnectWithoutModulesTouserInput
    upsert?: modulesUpsertWithoutModulesTouserInput
    connect?: modulesWhereUniqueInput
    update?: XOR<XOR<modulesUpdateToOneWithWhereWithoutModulesTouserInput, modulesUpdateWithoutModulesTouserInput>, modulesUncheckedUpdateWithoutModulesTouserInput>
  }

  export type userUpdateOneRequiredWithoutModulesTouserNestedInput = {
    create?: XOR<userCreateWithoutModulesTouserInput, userUncheckedCreateWithoutModulesTouserInput>
    connectOrCreate?: userCreateOrConnectWithoutModulesTouserInput
    upsert?: userUpsertWithoutModulesTouserInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutModulesTouserInput, userUpdateWithoutModulesTouserInput>, userUncheckedUpdateWithoutModulesTouserInput>
  }

  export type work_experienceCreateNestedManyWithoutCandidateInput = {
    create?: XOR<work_experienceCreateWithoutCandidateInput, work_experienceUncheckedCreateWithoutCandidateInput> | work_experienceCreateWithoutCandidateInput[] | work_experienceUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: work_experienceCreateOrConnectWithoutCandidateInput | work_experienceCreateOrConnectWithoutCandidateInput[]
    createMany?: work_experienceCreateManyCandidateInputEnvelope
    connect?: work_experienceWhereUniqueInput | work_experienceWhereUniqueInput[]
  }

  export type qualificationsCreateNestedManyWithoutCandidateInput = {
    create?: XOR<qualificationsCreateWithoutCandidateInput, qualificationsUncheckedCreateWithoutCandidateInput> | qualificationsCreateWithoutCandidateInput[] | qualificationsUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: qualificationsCreateOrConnectWithoutCandidateInput | qualificationsCreateOrConnectWithoutCandidateInput[]
    createMany?: qualificationsCreateManyCandidateInputEnvelope
    connect?: qualificationsWhereUniqueInput | qualificationsWhereUniqueInput[]
  }

  export type work_experienceUncheckedCreateNestedManyWithoutCandidateInput = {
    create?: XOR<work_experienceCreateWithoutCandidateInput, work_experienceUncheckedCreateWithoutCandidateInput> | work_experienceCreateWithoutCandidateInput[] | work_experienceUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: work_experienceCreateOrConnectWithoutCandidateInput | work_experienceCreateOrConnectWithoutCandidateInput[]
    createMany?: work_experienceCreateManyCandidateInputEnvelope
    connect?: work_experienceWhereUniqueInput | work_experienceWhereUniqueInput[]
  }

  export type qualificationsUncheckedCreateNestedManyWithoutCandidateInput = {
    create?: XOR<qualificationsCreateWithoutCandidateInput, qualificationsUncheckedCreateWithoutCandidateInput> | qualificationsCreateWithoutCandidateInput[] | qualificationsUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: qualificationsCreateOrConnectWithoutCandidateInput | qualificationsCreateOrConnectWithoutCandidateInput[]
    createMany?: qualificationsCreateManyCandidateInputEnvelope
    connect?: qualificationsWhereUniqueInput | qualificationsWhereUniqueInput[]
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type work_experienceUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<work_experienceCreateWithoutCandidateInput, work_experienceUncheckedCreateWithoutCandidateInput> | work_experienceCreateWithoutCandidateInput[] | work_experienceUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: work_experienceCreateOrConnectWithoutCandidateInput | work_experienceCreateOrConnectWithoutCandidateInput[]
    upsert?: work_experienceUpsertWithWhereUniqueWithoutCandidateInput | work_experienceUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: work_experienceCreateManyCandidateInputEnvelope
    set?: work_experienceWhereUniqueInput | work_experienceWhereUniqueInput[]
    disconnect?: work_experienceWhereUniqueInput | work_experienceWhereUniqueInput[]
    delete?: work_experienceWhereUniqueInput | work_experienceWhereUniqueInput[]
    connect?: work_experienceWhereUniqueInput | work_experienceWhereUniqueInput[]
    update?: work_experienceUpdateWithWhereUniqueWithoutCandidateInput | work_experienceUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: work_experienceUpdateManyWithWhereWithoutCandidateInput | work_experienceUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: work_experienceScalarWhereInput | work_experienceScalarWhereInput[]
  }

  export type qualificationsUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<qualificationsCreateWithoutCandidateInput, qualificationsUncheckedCreateWithoutCandidateInput> | qualificationsCreateWithoutCandidateInput[] | qualificationsUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: qualificationsCreateOrConnectWithoutCandidateInput | qualificationsCreateOrConnectWithoutCandidateInput[]
    upsert?: qualificationsUpsertWithWhereUniqueWithoutCandidateInput | qualificationsUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: qualificationsCreateManyCandidateInputEnvelope
    set?: qualificationsWhereUniqueInput | qualificationsWhereUniqueInput[]
    disconnect?: qualificationsWhereUniqueInput | qualificationsWhereUniqueInput[]
    delete?: qualificationsWhereUniqueInput | qualificationsWhereUniqueInput[]
    connect?: qualificationsWhereUniqueInput | qualificationsWhereUniqueInput[]
    update?: qualificationsUpdateWithWhereUniqueWithoutCandidateInput | qualificationsUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: qualificationsUpdateManyWithWhereWithoutCandidateInput | qualificationsUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: qualificationsScalarWhereInput | qualificationsScalarWhereInput[]
  }

  export type work_experienceUncheckedUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<work_experienceCreateWithoutCandidateInput, work_experienceUncheckedCreateWithoutCandidateInput> | work_experienceCreateWithoutCandidateInput[] | work_experienceUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: work_experienceCreateOrConnectWithoutCandidateInput | work_experienceCreateOrConnectWithoutCandidateInput[]
    upsert?: work_experienceUpsertWithWhereUniqueWithoutCandidateInput | work_experienceUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: work_experienceCreateManyCandidateInputEnvelope
    set?: work_experienceWhereUniqueInput | work_experienceWhereUniqueInput[]
    disconnect?: work_experienceWhereUniqueInput | work_experienceWhereUniqueInput[]
    delete?: work_experienceWhereUniqueInput | work_experienceWhereUniqueInput[]
    connect?: work_experienceWhereUniqueInput | work_experienceWhereUniqueInput[]
    update?: work_experienceUpdateWithWhereUniqueWithoutCandidateInput | work_experienceUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: work_experienceUpdateManyWithWhereWithoutCandidateInput | work_experienceUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: work_experienceScalarWhereInput | work_experienceScalarWhereInput[]
  }

  export type qualificationsUncheckedUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<qualificationsCreateWithoutCandidateInput, qualificationsUncheckedCreateWithoutCandidateInput> | qualificationsCreateWithoutCandidateInput[] | qualificationsUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: qualificationsCreateOrConnectWithoutCandidateInput | qualificationsCreateOrConnectWithoutCandidateInput[]
    upsert?: qualificationsUpsertWithWhereUniqueWithoutCandidateInput | qualificationsUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: qualificationsCreateManyCandidateInputEnvelope
    set?: qualificationsWhereUniqueInput | qualificationsWhereUniqueInput[]
    disconnect?: qualificationsWhereUniqueInput | qualificationsWhereUniqueInput[]
    delete?: qualificationsWhereUniqueInput | qualificationsWhereUniqueInput[]
    connect?: qualificationsWhereUniqueInput | qualificationsWhereUniqueInput[]
    update?: qualificationsUpdateWithWhereUniqueWithoutCandidateInput | qualificationsUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: qualificationsUpdateManyWithWhereWithoutCandidateInput | qualificationsUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: qualificationsScalarWhereInput | qualificationsScalarWhereInput[]
  }

  export type candidate_listCreateNestedOneWithoutWorkExperiencesInput = {
    create?: XOR<candidate_listCreateWithoutWorkExperiencesInput, candidate_listUncheckedCreateWithoutWorkExperiencesInput>
    connectOrCreate?: candidate_listCreateOrConnectWithoutWorkExperiencesInput
    connect?: candidate_listWhereUniqueInput
  }

  export type candidate_listUpdateOneRequiredWithoutWorkExperiencesNestedInput = {
    create?: XOR<candidate_listCreateWithoutWorkExperiencesInput, candidate_listUncheckedCreateWithoutWorkExperiencesInput>
    connectOrCreate?: candidate_listCreateOrConnectWithoutWorkExperiencesInput
    upsert?: candidate_listUpsertWithoutWorkExperiencesInput
    connect?: candidate_listWhereUniqueInput
    update?: XOR<XOR<candidate_listUpdateToOneWithWhereWithoutWorkExperiencesInput, candidate_listUpdateWithoutWorkExperiencesInput>, candidate_listUncheckedUpdateWithoutWorkExperiencesInput>
  }

  export type candidate_listCreateNestedOneWithoutQualificationsInput = {
    create?: XOR<candidate_listCreateWithoutQualificationsInput, candidate_listUncheckedCreateWithoutQualificationsInput>
    connectOrCreate?: candidate_listCreateOrConnectWithoutQualificationsInput
    connect?: candidate_listWhereUniqueInput
  }

  export type candidate_listUpdateOneRequiredWithoutQualificationsNestedInput = {
    create?: XOR<candidate_listCreateWithoutQualificationsInput, candidate_listUncheckedCreateWithoutQualificationsInput>
    connectOrCreate?: candidate_listCreateOrConnectWithoutQualificationsInput
    upsert?: candidate_listUpsertWithoutQualificationsInput
    connect?: candidate_listWhereUniqueInput
    update?: XOR<XOR<candidate_listUpdateToOneWithWhereWithoutQualificationsInput, candidate_listUpdateWithoutQualificationsInput>, candidate_listUncheckedUpdateWithoutQualificationsInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type modulesTouserCreateWithoutUserInput = {
    c?: boolean
    d?: boolean
    r?: boolean
    u?: boolean
    modules: modulesCreateNestedOneWithoutModulesTouserInput
  }

  export type modulesTouserUncheckedCreateWithoutUserInput = {
    module_id: number
    c?: boolean
    d?: boolean
    r?: boolean
    u?: boolean
  }

  export type modulesTouserCreateOrConnectWithoutUserInput = {
    where: modulesTouserWhereUniqueInput
    create: XOR<modulesTouserCreateWithoutUserInput, modulesTouserUncheckedCreateWithoutUserInput>
  }

  export type modulesTouserCreateManyUserInputEnvelope = {
    data: modulesTouserCreateManyUserInput | modulesTouserCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type modulesTouserUpsertWithWhereUniqueWithoutUserInput = {
    where: modulesTouserWhereUniqueInput
    update: XOR<modulesTouserUpdateWithoutUserInput, modulesTouserUncheckedUpdateWithoutUserInput>
    create: XOR<modulesTouserCreateWithoutUserInput, modulesTouserUncheckedCreateWithoutUserInput>
  }

  export type modulesTouserUpdateWithWhereUniqueWithoutUserInput = {
    where: modulesTouserWhereUniqueInput
    data: XOR<modulesTouserUpdateWithoutUserInput, modulesTouserUncheckedUpdateWithoutUserInput>
  }

  export type modulesTouserUpdateManyWithWhereWithoutUserInput = {
    where: modulesTouserScalarWhereInput
    data: XOR<modulesTouserUpdateManyMutationInput, modulesTouserUncheckedUpdateManyWithoutUserInput>
  }

  export type modulesTouserScalarWhereInput = {
    AND?: modulesTouserScalarWhereInput | modulesTouserScalarWhereInput[]
    OR?: modulesTouserScalarWhereInput[]
    NOT?: modulesTouserScalarWhereInput | modulesTouserScalarWhereInput[]
    module_id?: IntFilter<"modulesTouser"> | number
    user_id?: IntFilter<"modulesTouser"> | number
    c?: BoolFilter<"modulesTouser"> | boolean
    d?: BoolFilter<"modulesTouser"> | boolean
    r?: BoolFilter<"modulesTouser"> | boolean
    u?: BoolFilter<"modulesTouser"> | boolean
  }

  export type modulesTouserCreateWithoutModulesInput = {
    c?: boolean
    d?: boolean
    r?: boolean
    u?: boolean
    user: userCreateNestedOneWithoutModulesTouserInput
  }

  export type modulesTouserUncheckedCreateWithoutModulesInput = {
    user_id: number
    c?: boolean
    d?: boolean
    r?: boolean
    u?: boolean
  }

  export type modulesTouserCreateOrConnectWithoutModulesInput = {
    where: modulesTouserWhereUniqueInput
    create: XOR<modulesTouserCreateWithoutModulesInput, modulesTouserUncheckedCreateWithoutModulesInput>
  }

  export type modulesTouserCreateManyModulesInputEnvelope = {
    data: modulesTouserCreateManyModulesInput | modulesTouserCreateManyModulesInput[]
    skipDuplicates?: boolean
  }

  export type modulesTouserUpsertWithWhereUniqueWithoutModulesInput = {
    where: modulesTouserWhereUniqueInput
    update: XOR<modulesTouserUpdateWithoutModulesInput, modulesTouserUncheckedUpdateWithoutModulesInput>
    create: XOR<modulesTouserCreateWithoutModulesInput, modulesTouserUncheckedCreateWithoutModulesInput>
  }

  export type modulesTouserUpdateWithWhereUniqueWithoutModulesInput = {
    where: modulesTouserWhereUniqueInput
    data: XOR<modulesTouserUpdateWithoutModulesInput, modulesTouserUncheckedUpdateWithoutModulesInput>
  }

  export type modulesTouserUpdateManyWithWhereWithoutModulesInput = {
    where: modulesTouserScalarWhereInput
    data: XOR<modulesTouserUpdateManyMutationInput, modulesTouserUncheckedUpdateManyWithoutModulesInput>
  }

  export type modulesCreateWithoutModulesTouserInput = {
    module_name: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type modulesUncheckedCreateWithoutModulesTouserInput = {
    id?: number
    module_name: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type modulesCreateOrConnectWithoutModulesTouserInput = {
    where: modulesWhereUniqueInput
    create: XOR<modulesCreateWithoutModulesTouserInput, modulesUncheckedCreateWithoutModulesTouserInput>
  }

  export type userCreateWithoutModulesTouserInput = {
    title?: string | null
    first_name?: string | null
    middle_name?: string | null
    last_name?: string | null
    gender?: string | null
    dob?: string | null
    email?: string | null
    mobile?: string | null
    username?: string | null
    password?: string | null
    date_of_joining?: string | null
    employee_id?: string | null
    designation?: string | null
    status?: string | null
    department?: string | null
    user_type?: string | null
    role?: string | null
    reporting_to?: string | null
    created_by?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type userUncheckedCreateWithoutModulesTouserInput = {
    id?: number
    title?: string | null
    first_name?: string | null
    middle_name?: string | null
    last_name?: string | null
    gender?: string | null
    dob?: string | null
    email?: string | null
    mobile?: string | null
    username?: string | null
    password?: string | null
    date_of_joining?: string | null
    employee_id?: string | null
    designation?: string | null
    status?: string | null
    department?: string | null
    user_type?: string | null
    role?: string | null
    reporting_to?: string | null
    created_by?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type userCreateOrConnectWithoutModulesTouserInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutModulesTouserInput, userUncheckedCreateWithoutModulesTouserInput>
  }

  export type modulesUpsertWithoutModulesTouserInput = {
    update: XOR<modulesUpdateWithoutModulesTouserInput, modulesUncheckedUpdateWithoutModulesTouserInput>
    create: XOR<modulesCreateWithoutModulesTouserInput, modulesUncheckedCreateWithoutModulesTouserInput>
    where?: modulesWhereInput
  }

  export type modulesUpdateToOneWithWhereWithoutModulesTouserInput = {
    where?: modulesWhereInput
    data: XOR<modulesUpdateWithoutModulesTouserInput, modulesUncheckedUpdateWithoutModulesTouserInput>
  }

  export type modulesUpdateWithoutModulesTouserInput = {
    module_name?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type modulesUncheckedUpdateWithoutModulesTouserInput = {
    id?: IntFieldUpdateOperationsInput | number
    module_name?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userUpsertWithoutModulesTouserInput = {
    update: XOR<userUpdateWithoutModulesTouserInput, userUncheckedUpdateWithoutModulesTouserInput>
    create: XOR<userCreateWithoutModulesTouserInput, userUncheckedCreateWithoutModulesTouserInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutModulesTouserInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutModulesTouserInput, userUncheckedUpdateWithoutModulesTouserInput>
  }

  export type userUpdateWithoutModulesTouserInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    dob?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    date_of_joining?: NullableStringFieldUpdateOperationsInput | string | null
    employee_id?: NullableStringFieldUpdateOperationsInput | string | null
    designation?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    user_type?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    reporting_to?: NullableStringFieldUpdateOperationsInput | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userUncheckedUpdateWithoutModulesTouserInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    dob?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    date_of_joining?: NullableStringFieldUpdateOperationsInput | string | null
    employee_id?: NullableStringFieldUpdateOperationsInput | string | null
    designation?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    user_type?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    reporting_to?: NullableStringFieldUpdateOperationsInput | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type work_experienceCreateWithoutCandidateInput = {
    organisation_name: string
    total_tenure?: string | null
    last_designation?: string | null
    last_drawn_salary?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type work_experienceUncheckedCreateWithoutCandidateInput = {
    exp_id?: number
    organisation_name: string
    total_tenure?: string | null
    last_designation?: string | null
    last_drawn_salary?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type work_experienceCreateOrConnectWithoutCandidateInput = {
    where: work_experienceWhereUniqueInput
    create: XOR<work_experienceCreateWithoutCandidateInput, work_experienceUncheckedCreateWithoutCandidateInput>
  }

  export type work_experienceCreateManyCandidateInputEnvelope = {
    data: work_experienceCreateManyCandidateInput | work_experienceCreateManyCandidateInput[]
    skipDuplicates?: boolean
  }

  export type qualificationsCreateWithoutCandidateInput = {
    course: string
    college_university: string
    year_of_passing: number
    percentage_cgpa?: string | null
    created_at?: Date | string
    updated_at?: Date | string | null
  }

  export type qualificationsUncheckedCreateWithoutCandidateInput = {
    qualifications_id?: number
    course: string
    college_university: string
    year_of_passing: number
    percentage_cgpa?: string | null
    created_at?: Date | string
    updated_at?: Date | string | null
  }

  export type qualificationsCreateOrConnectWithoutCandidateInput = {
    where: qualificationsWhereUniqueInput
    create: XOR<qualificationsCreateWithoutCandidateInput, qualificationsUncheckedCreateWithoutCandidateInput>
  }

  export type qualificationsCreateManyCandidateInputEnvelope = {
    data: qualificationsCreateManyCandidateInput | qualificationsCreateManyCandidateInput[]
    skipDuplicates?: boolean
  }

  export type work_experienceUpsertWithWhereUniqueWithoutCandidateInput = {
    where: work_experienceWhereUniqueInput
    update: XOR<work_experienceUpdateWithoutCandidateInput, work_experienceUncheckedUpdateWithoutCandidateInput>
    create: XOR<work_experienceCreateWithoutCandidateInput, work_experienceUncheckedCreateWithoutCandidateInput>
  }

  export type work_experienceUpdateWithWhereUniqueWithoutCandidateInput = {
    where: work_experienceWhereUniqueInput
    data: XOR<work_experienceUpdateWithoutCandidateInput, work_experienceUncheckedUpdateWithoutCandidateInput>
  }

  export type work_experienceUpdateManyWithWhereWithoutCandidateInput = {
    where: work_experienceScalarWhereInput
    data: XOR<work_experienceUpdateManyMutationInput, work_experienceUncheckedUpdateManyWithoutCandidateInput>
  }

  export type work_experienceScalarWhereInput = {
    AND?: work_experienceScalarWhereInput | work_experienceScalarWhereInput[]
    OR?: work_experienceScalarWhereInput[]
    NOT?: work_experienceScalarWhereInput | work_experienceScalarWhereInput[]
    exp_id?: IntFilter<"work_experience"> | number
    candidate_id?: IntFilter<"work_experience"> | number
    organisation_name?: StringFilter<"work_experience"> | string
    total_tenure?: StringNullableFilter<"work_experience"> | string | null
    last_designation?: StringNullableFilter<"work_experience"> | string | null
    last_drawn_salary?: StringNullableFilter<"work_experience"> | string | null
    created_at?: DateTimeFilter<"work_experience"> | Date | string
    updated_at?: DateTimeFilter<"work_experience"> | Date | string
  }

  export type qualificationsUpsertWithWhereUniqueWithoutCandidateInput = {
    where: qualificationsWhereUniqueInput
    update: XOR<qualificationsUpdateWithoutCandidateInput, qualificationsUncheckedUpdateWithoutCandidateInput>
    create: XOR<qualificationsCreateWithoutCandidateInput, qualificationsUncheckedCreateWithoutCandidateInput>
  }

  export type qualificationsUpdateWithWhereUniqueWithoutCandidateInput = {
    where: qualificationsWhereUniqueInput
    data: XOR<qualificationsUpdateWithoutCandidateInput, qualificationsUncheckedUpdateWithoutCandidateInput>
  }

  export type qualificationsUpdateManyWithWhereWithoutCandidateInput = {
    where: qualificationsScalarWhereInput
    data: XOR<qualificationsUpdateManyMutationInput, qualificationsUncheckedUpdateManyWithoutCandidateInput>
  }

  export type qualificationsScalarWhereInput = {
    AND?: qualificationsScalarWhereInput | qualificationsScalarWhereInput[]
    OR?: qualificationsScalarWhereInput[]
    NOT?: qualificationsScalarWhereInput | qualificationsScalarWhereInput[]
    qualifications_id?: IntFilter<"qualifications"> | number
    candidate_id?: IntFilter<"qualifications"> | number
    course?: StringFilter<"qualifications"> | string
    college_university?: StringFilter<"qualifications"> | string
    year_of_passing?: IntFilter<"qualifications"> | number
    percentage_cgpa?: StringNullableFilter<"qualifications"> | string | null
    created_at?: DateTimeFilter<"qualifications"> | Date | string
    updated_at?: DateTimeNullableFilter<"qualifications"> | Date | string | null
  }

  export type candidate_listCreateWithoutWorkExperiencesInput = {
    title?: string | null
    first_name?: string | null
    middle_name?: string | null
    last_name?: string | null
    address_line1?: string | null
    address_line2?: string | null
    city?: string | null
    state?: string | null
    pin_code?: string | null
    country?: string | null
    contact_number: string
    alt_contact_number?: string | null
    email_address: string
    alt_email_address?: string | null
    date_of_birth?: string | null
    job_title?: string | null
    department?: string | null
    work_experience?: string | null
    hobbies?: string | null
    interests?: string | null
    skills?: string | null
    recruiter_comments?: string | null
    communication_skills?: string | null
    other1?: string | null
    other2?: string | null
    other3?: string | null
    status?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    qualifications?: qualificationsCreateNestedManyWithoutCandidateInput
  }

  export type candidate_listUncheckedCreateWithoutWorkExperiencesInput = {
    candidate_id?: number
    title?: string | null
    first_name?: string | null
    middle_name?: string | null
    last_name?: string | null
    address_line1?: string | null
    address_line2?: string | null
    city?: string | null
    state?: string | null
    pin_code?: string | null
    country?: string | null
    contact_number: string
    alt_contact_number?: string | null
    email_address: string
    alt_email_address?: string | null
    date_of_birth?: string | null
    job_title?: string | null
    department?: string | null
    work_experience?: string | null
    hobbies?: string | null
    interests?: string | null
    skills?: string | null
    recruiter_comments?: string | null
    communication_skills?: string | null
    other1?: string | null
    other2?: string | null
    other3?: string | null
    status?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    qualifications?: qualificationsUncheckedCreateNestedManyWithoutCandidateInput
  }

  export type candidate_listCreateOrConnectWithoutWorkExperiencesInput = {
    where: candidate_listWhereUniqueInput
    create: XOR<candidate_listCreateWithoutWorkExperiencesInput, candidate_listUncheckedCreateWithoutWorkExperiencesInput>
  }

  export type candidate_listUpsertWithoutWorkExperiencesInput = {
    update: XOR<candidate_listUpdateWithoutWorkExperiencesInput, candidate_listUncheckedUpdateWithoutWorkExperiencesInput>
    create: XOR<candidate_listCreateWithoutWorkExperiencesInput, candidate_listUncheckedCreateWithoutWorkExperiencesInput>
    where?: candidate_listWhereInput
  }

  export type candidate_listUpdateToOneWithWhereWithoutWorkExperiencesInput = {
    where?: candidate_listWhereInput
    data: XOR<candidate_listUpdateWithoutWorkExperiencesInput, candidate_listUncheckedUpdateWithoutWorkExperiencesInput>
  }

  export type candidate_listUpdateWithoutWorkExperiencesInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    address_line2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    pin_code?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    contact_number?: StringFieldUpdateOperationsInput | string
    alt_contact_number?: NullableStringFieldUpdateOperationsInput | string | null
    email_address?: StringFieldUpdateOperationsInput | string
    alt_email_address?: NullableStringFieldUpdateOperationsInput | string | null
    date_of_birth?: NullableStringFieldUpdateOperationsInput | string | null
    job_title?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    work_experience?: NullableStringFieldUpdateOperationsInput | string | null
    hobbies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    recruiter_comments?: NullableStringFieldUpdateOperationsInput | string | null
    communication_skills?: NullableStringFieldUpdateOperationsInput | string | null
    other1?: NullableStringFieldUpdateOperationsInput | string | null
    other2?: NullableStringFieldUpdateOperationsInput | string | null
    other3?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    qualifications?: qualificationsUpdateManyWithoutCandidateNestedInput
  }

  export type candidate_listUncheckedUpdateWithoutWorkExperiencesInput = {
    candidate_id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    address_line2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    pin_code?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    contact_number?: StringFieldUpdateOperationsInput | string
    alt_contact_number?: NullableStringFieldUpdateOperationsInput | string | null
    email_address?: StringFieldUpdateOperationsInput | string
    alt_email_address?: NullableStringFieldUpdateOperationsInput | string | null
    date_of_birth?: NullableStringFieldUpdateOperationsInput | string | null
    job_title?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    work_experience?: NullableStringFieldUpdateOperationsInput | string | null
    hobbies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    recruiter_comments?: NullableStringFieldUpdateOperationsInput | string | null
    communication_skills?: NullableStringFieldUpdateOperationsInput | string | null
    other1?: NullableStringFieldUpdateOperationsInput | string | null
    other2?: NullableStringFieldUpdateOperationsInput | string | null
    other3?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    qualifications?: qualificationsUncheckedUpdateManyWithoutCandidateNestedInput
  }

  export type candidate_listCreateWithoutQualificationsInput = {
    title?: string | null
    first_name?: string | null
    middle_name?: string | null
    last_name?: string | null
    address_line1?: string | null
    address_line2?: string | null
    city?: string | null
    state?: string | null
    pin_code?: string | null
    country?: string | null
    contact_number: string
    alt_contact_number?: string | null
    email_address: string
    alt_email_address?: string | null
    date_of_birth?: string | null
    job_title?: string | null
    department?: string | null
    work_experience?: string | null
    hobbies?: string | null
    interests?: string | null
    skills?: string | null
    recruiter_comments?: string | null
    communication_skills?: string | null
    other1?: string | null
    other2?: string | null
    other3?: string | null
    status?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    workExperiences?: work_experienceCreateNestedManyWithoutCandidateInput
  }

  export type candidate_listUncheckedCreateWithoutQualificationsInput = {
    candidate_id?: number
    title?: string | null
    first_name?: string | null
    middle_name?: string | null
    last_name?: string | null
    address_line1?: string | null
    address_line2?: string | null
    city?: string | null
    state?: string | null
    pin_code?: string | null
    country?: string | null
    contact_number: string
    alt_contact_number?: string | null
    email_address: string
    alt_email_address?: string | null
    date_of_birth?: string | null
    job_title?: string | null
    department?: string | null
    work_experience?: string | null
    hobbies?: string | null
    interests?: string | null
    skills?: string | null
    recruiter_comments?: string | null
    communication_skills?: string | null
    other1?: string | null
    other2?: string | null
    other3?: string | null
    status?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    workExperiences?: work_experienceUncheckedCreateNestedManyWithoutCandidateInput
  }

  export type candidate_listCreateOrConnectWithoutQualificationsInput = {
    where: candidate_listWhereUniqueInput
    create: XOR<candidate_listCreateWithoutQualificationsInput, candidate_listUncheckedCreateWithoutQualificationsInput>
  }

  export type candidate_listUpsertWithoutQualificationsInput = {
    update: XOR<candidate_listUpdateWithoutQualificationsInput, candidate_listUncheckedUpdateWithoutQualificationsInput>
    create: XOR<candidate_listCreateWithoutQualificationsInput, candidate_listUncheckedCreateWithoutQualificationsInput>
    where?: candidate_listWhereInput
  }

  export type candidate_listUpdateToOneWithWhereWithoutQualificationsInput = {
    where?: candidate_listWhereInput
    data: XOR<candidate_listUpdateWithoutQualificationsInput, candidate_listUncheckedUpdateWithoutQualificationsInput>
  }

  export type candidate_listUpdateWithoutQualificationsInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    address_line2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    pin_code?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    contact_number?: StringFieldUpdateOperationsInput | string
    alt_contact_number?: NullableStringFieldUpdateOperationsInput | string | null
    email_address?: StringFieldUpdateOperationsInput | string
    alt_email_address?: NullableStringFieldUpdateOperationsInput | string | null
    date_of_birth?: NullableStringFieldUpdateOperationsInput | string | null
    job_title?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    work_experience?: NullableStringFieldUpdateOperationsInput | string | null
    hobbies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    recruiter_comments?: NullableStringFieldUpdateOperationsInput | string | null
    communication_skills?: NullableStringFieldUpdateOperationsInput | string | null
    other1?: NullableStringFieldUpdateOperationsInput | string | null
    other2?: NullableStringFieldUpdateOperationsInput | string | null
    other3?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    workExperiences?: work_experienceUpdateManyWithoutCandidateNestedInput
  }

  export type candidate_listUncheckedUpdateWithoutQualificationsInput = {
    candidate_id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    address_line2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    pin_code?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    contact_number?: StringFieldUpdateOperationsInput | string
    alt_contact_number?: NullableStringFieldUpdateOperationsInput | string | null
    email_address?: StringFieldUpdateOperationsInput | string
    alt_email_address?: NullableStringFieldUpdateOperationsInput | string | null
    date_of_birth?: NullableStringFieldUpdateOperationsInput | string | null
    job_title?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    work_experience?: NullableStringFieldUpdateOperationsInput | string | null
    hobbies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    recruiter_comments?: NullableStringFieldUpdateOperationsInput | string | null
    communication_skills?: NullableStringFieldUpdateOperationsInput | string | null
    other1?: NullableStringFieldUpdateOperationsInput | string | null
    other2?: NullableStringFieldUpdateOperationsInput | string | null
    other3?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    workExperiences?: work_experienceUncheckedUpdateManyWithoutCandidateNestedInput
  }

  export type modulesTouserCreateManyUserInput = {
    module_id: number
    c?: boolean
    d?: boolean
    r?: boolean
    u?: boolean
  }

  export type modulesTouserUpdateWithoutUserInput = {
    c?: BoolFieldUpdateOperationsInput | boolean
    d?: BoolFieldUpdateOperationsInput | boolean
    r?: BoolFieldUpdateOperationsInput | boolean
    u?: BoolFieldUpdateOperationsInput | boolean
    modules?: modulesUpdateOneRequiredWithoutModulesTouserNestedInput
  }

  export type modulesTouserUncheckedUpdateWithoutUserInput = {
    module_id?: IntFieldUpdateOperationsInput | number
    c?: BoolFieldUpdateOperationsInput | boolean
    d?: BoolFieldUpdateOperationsInput | boolean
    r?: BoolFieldUpdateOperationsInput | boolean
    u?: BoolFieldUpdateOperationsInput | boolean
  }

  export type modulesTouserUncheckedUpdateManyWithoutUserInput = {
    module_id?: IntFieldUpdateOperationsInput | number
    c?: BoolFieldUpdateOperationsInput | boolean
    d?: BoolFieldUpdateOperationsInput | boolean
    r?: BoolFieldUpdateOperationsInput | boolean
    u?: BoolFieldUpdateOperationsInput | boolean
  }

  export type modulesTouserCreateManyModulesInput = {
    user_id: number
    c?: boolean
    d?: boolean
    r?: boolean
    u?: boolean
  }

  export type modulesTouserUpdateWithoutModulesInput = {
    c?: BoolFieldUpdateOperationsInput | boolean
    d?: BoolFieldUpdateOperationsInput | boolean
    r?: BoolFieldUpdateOperationsInput | boolean
    u?: BoolFieldUpdateOperationsInput | boolean
    user?: userUpdateOneRequiredWithoutModulesTouserNestedInput
  }

  export type modulesTouserUncheckedUpdateWithoutModulesInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    c?: BoolFieldUpdateOperationsInput | boolean
    d?: BoolFieldUpdateOperationsInput | boolean
    r?: BoolFieldUpdateOperationsInput | boolean
    u?: BoolFieldUpdateOperationsInput | boolean
  }

  export type modulesTouserUncheckedUpdateManyWithoutModulesInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    c?: BoolFieldUpdateOperationsInput | boolean
    d?: BoolFieldUpdateOperationsInput | boolean
    r?: BoolFieldUpdateOperationsInput | boolean
    u?: BoolFieldUpdateOperationsInput | boolean
  }

  export type work_experienceCreateManyCandidateInput = {
    exp_id?: number
    organisation_name: string
    total_tenure?: string | null
    last_designation?: string | null
    last_drawn_salary?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type qualificationsCreateManyCandidateInput = {
    qualifications_id?: number
    course: string
    college_university: string
    year_of_passing: number
    percentage_cgpa?: string | null
    created_at?: Date | string
    updated_at?: Date | string | null
  }

  export type work_experienceUpdateWithoutCandidateInput = {
    organisation_name?: StringFieldUpdateOperationsInput | string
    total_tenure?: NullableStringFieldUpdateOperationsInput | string | null
    last_designation?: NullableStringFieldUpdateOperationsInput | string | null
    last_drawn_salary?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type work_experienceUncheckedUpdateWithoutCandidateInput = {
    exp_id?: IntFieldUpdateOperationsInput | number
    organisation_name?: StringFieldUpdateOperationsInput | string
    total_tenure?: NullableStringFieldUpdateOperationsInput | string | null
    last_designation?: NullableStringFieldUpdateOperationsInput | string | null
    last_drawn_salary?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type work_experienceUncheckedUpdateManyWithoutCandidateInput = {
    exp_id?: IntFieldUpdateOperationsInput | number
    organisation_name?: StringFieldUpdateOperationsInput | string
    total_tenure?: NullableStringFieldUpdateOperationsInput | string | null
    last_designation?: NullableStringFieldUpdateOperationsInput | string | null
    last_drawn_salary?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type qualificationsUpdateWithoutCandidateInput = {
    course?: StringFieldUpdateOperationsInput | string
    college_university?: StringFieldUpdateOperationsInput | string
    year_of_passing?: IntFieldUpdateOperationsInput | number
    percentage_cgpa?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type qualificationsUncheckedUpdateWithoutCandidateInput = {
    qualifications_id?: IntFieldUpdateOperationsInput | number
    course?: StringFieldUpdateOperationsInput | string
    college_university?: StringFieldUpdateOperationsInput | string
    year_of_passing?: IntFieldUpdateOperationsInput | number
    percentage_cgpa?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type qualificationsUncheckedUpdateManyWithoutCandidateInput = {
    qualifications_id?: IntFieldUpdateOperationsInput | number
    course?: StringFieldUpdateOperationsInput | string
    college_university?: StringFieldUpdateOperationsInput | string
    year_of_passing?: IntFieldUpdateOperationsInput | number
    percentage_cgpa?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use UserCountOutputTypeDefaultArgs instead
     */
    export type UserCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ModulesCountOutputTypeDefaultArgs instead
     */
    export type ModulesCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ModulesCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Candidate_listCountOutputTypeDefaultArgs instead
     */
    export type Candidate_listCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Candidate_listCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use userDefaultArgs instead
     */
    export type userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = userDefaultArgs<ExtArgs>
    /**
     * @deprecated Use modulesDefaultArgs instead
     */
    export type modulesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = modulesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use modulesTouserDefaultArgs instead
     */
    export type modulesTouserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = modulesTouserDefaultArgs<ExtArgs>
    /**
     * @deprecated Use job_postDefaultArgs instead
     */
    export type job_postArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = job_postDefaultArgs<ExtArgs>
    /**
     * @deprecated Use candidate_listDefaultArgs instead
     */
    export type candidate_listArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = candidate_listDefaultArgs<ExtArgs>
    /**
     * @deprecated Use work_experienceDefaultArgs instead
     */
    export type work_experienceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = work_experienceDefaultArgs<ExtArgs>
    /**
     * @deprecated Use qualificationsDefaultArgs instead
     */
    export type qualificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = qualificationsDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}